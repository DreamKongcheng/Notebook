{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>!!! note     666</p>"},{"location":"ZJU_CS/","title":"ZJU CS \u8bfe\u7a0b","text":"<p>\u8fd9\u91cc\u662fZJU\u7684\u4e00\u4e9b\u8bfe\u7a0b\u7684\u7b14\u8bb0\uff0c\u5305\u62ec\u8bfe\u7a0b\u7684\u4e00\u4e9b\u4f5c\u4e1a\u548c\u5b9e\u9a8c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/","title":"[\u5927\u4e8c\u79cb\u51ac] \u6570\u5b57\u903b\u8f91\u8bbe\u8ba1 | Digital Design","text":"<p>\u7531\u4e8eZJU\u6709\u592a\u591a\u4f18\u79c0\u5b66\u957f\u7684\u535a\u5ba2\uff0c\u6240\u4ee5\u672c\u8bfe\u6211clone\u4e86Xiu\u4f6c\u7684\u7b14\u8bb0\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u52a0\u4e0a\u81ea\u5df1\u7684\u8bb0\u5f55\u3002</p> <p>!!! info \"\u8bfe\u7a0b\u4fe1\u606f\"</p> <pre><code>- \u6388\u8bfe\uff1azmm\n- \u667a\u4e91\u8bfe\u5802\u94fe\u63a5\uff1a~~\ud83d\udd17~~ \u8fd9\u91cc\u4e0d\u5efa\u8bae\u5927\u5bb6\u542czmm\u8001\u5e08\u7684\u667a\u4e91\uff0cmaybe\u81ea\u5b66\u6216\u8005\u9694\u58c1\u73ed\u7684md\u8001\u5e08\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u4f53\u9a8c\n- \u6559\u6750\uff1aLogic and Computer Design Fundamentals, Fifth Edition\n- \u7531\u4e8e\u672c\u4eba\u4ece\u672a\u5728\u6b64\u4e4b\u524d\u4e0a\u8fc7\u5b8c\u6574\u7684\u786c\u4ef6\u8bfe\u7a0b\uff08\u5982ICS\uff09\uff0c\u53ea\u662f\u96f6\u788e\u7684\u5438\u6536\u4e86\u8bb8\u591a\u6742\u4e03\u6742\u516b\u7684\u77e5\u8bc6\u3002\u540e\u8003\u8bd5\u8865\u5929\u6545\u9009\u62e9\u4e86GuaGua\u7b14\u8bb0\u548c\u4fee\u4f6c\u7684\u7f51\u7ad9\u6765\u76d8\u70b9~~\u590d\u4e60~~\u9884\u4e60\u3002\u5e0c\u671b\u5927\u5bb6\u6709\u4efb\u4f55\u610f\u89c1\u6216\u8005\u5efa\u8bae\u90fd\u5199\u5728\u8bc4\u8bba\u533a\u91cc\u8ba9\u6211\u77e5\u9053\uff01\u5e0c\u671b\u8fd9\u4efd\u8d44\u6599\u53ef\u4ee5\u7ed9\u4f60\u5e26\u6765\u5e2e\u52a9\uff01\n</code></pre> <p>!!! note \"List\"     &gt; \u8865\u5929\u65f6\u5019\u7684\u4e00\u70b9\u60f3\u6cd5\uff0c\u56e0\u4e3a\u8bfe\u672c\u6bcf\u4e00\u7ae0\u90fd\u6709\u4e00\u4e2a summary\uff0c\u6240\u4ee5\u5982\u679c\u8981\u770b\u4e66\u7684\u8bdd\u6216\u8bb8\u53ef\u4ee5\u5148\u770b\u90a3\u4e2a summary \u518d\u770b\u5177\u4f53\u7684\u3002</p> <pre><code>- [x] [Chap 1 Digital Systems and Information](Chap01.md)\n- [x] [Chap 2 Combinational Logic Circuits](Chap02.md)\n- [x] [Chap 3 Combinational Logic Design](Chap03.md)\n- [x] [Chap 4 Sequential Circuits](Chap04.md)\n- [x] [Chap 5 Digital Hardware Implementation](Chap05.md) \uff08\u7565\u7b80\u7565\uff09\n- [x] [Chap 6 Registers &amp; Register Transfers](Chap06.md)\n- [x] [Chap 7 Memory Basics](Chap07.md) \n- [x] [Glossary](glossary.md)\n- [ ] [\u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90](learnskill.md)\n</code></pre> <p>\u672c\u7b14\u8bb0\u4e3b\u8981\u53c2\u8003\u4e86 isshikih\uff0880%\uff09 \u548c Guahao\uff0810%\uff09\u3002\u81ea\u5df1\u5728\u6b64\u57fa\u7840\u4e0a\u5b89\u88c5\u65b0\u624b\u7684\u601d\u8def\u8fdb\u884c\u8c03\u6574\u4fee\u6539\u3002\u5f53\u6211\u4eec\u4e0d\u5f97\u4e0d\u627f\u8ba4\u4ed6\u4f1a\u66f4\u6709\u603b\u62ec\u6027\uff0c\u4e0d\u5b8c\u5168\u6309\u7167\u8bfe\u672c\u7ae0\u8282\uff0c\u751a\u81f3\u6bcf\u7ae0\u90fd\u6709\u8865\u5145\u3002\u66f4\u591a\u5185\u5bb9\u8bf7\u770b\u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/","title":"Chap 1 Digital Systems and Information","text":""},{"location":"ZJU_CS/DigitalDesign/Chap01/#information-representation","title":"\u4fe1\u606f\u8868\u8fbe | Information Representation","text":"<p>\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4fe1\u606f\u5f80\u5f80\u662f \u8fde\u7eed(continuous) \u7684\uff0c\u4f46\u5728\u4eba\u9020\u7269\u7684\u4e16\u754c\u4e2d\uff0c\u5927\u90e8\u5206\u4fe1\u606f\u90fd\u662f \u79bb\u6563(discrete) \u7684\u3002</p> <p>\u5728\u7535\u5b50\u4fe1\u606f\u7cfb\u7edf\u4e2d\uff0c\u4fe1\u53f7\u5206\u4e3a \u6a21\u62df\u4fe1\u53f7(analog signal) \u548c \u6570\u5b57\u4fe1\u53f7(digital signal) \u4e24\u79cd\u3002\u5176\u4e2d\uff0c\u5728 \u6570\u5b57\u4fe1\u53f7(digital signal) \u4e2d\u53c8\u6709\u591a\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u5982\u4eca\u6211\u4eec\u6700\u5e38\u7528\u7684\u662f \u4e8c\u8fdb\u5236(binary)\u3002\u5bf9\u5e94\u5230\u7535\u8def\u5c42\u9762\uff0c\u6211\u4eec\u5e38\u5e38\u7528 \u9ad8\u7535\u4f4d(HIGH) \u548c \u4f4e\u7535\u4f4d(LOW) \u6765\u8868\u5f81 1 \u548c 0\u3002</p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8f93\u5165\u548c\u8f93\u51fa\u4e2d\uff0c\u9ad8\u4f4e\u7535\u4f4d\u7684\u63a5\u53d7\u8303\u56f4\u662f\u4e0d\u540c\u7684\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u7684\u5224\u5b9a\u8303\u56f4\u6bd4\u8f93\u51fa\u7684\u5224\u5b9a\u8303\u56f4\u5927\uff0c\u5373 \u5bbd\u8fdb\u4e25\u51fa\u3002\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7535\u8def\u5728\u566a\u97f3\u7b49\u5f02\u5e38\u5f71\u54cd\u4e0b\u4e5f\u80fd\u6b63\u5e38\u8868\u73b0\u7684\u80fd\u529b\u3002</p> HIGH output LOW output HIGH input LOW input 0.9 \\~ 1.1 -0.1 \\~ 0.1 0.6 \\~ 1.1 -0.1 \\~ 0.4 <p>\u6216\u8bb8\u4f60\u4e5f\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u56fe\u4e2d\uff0cHIGH \u7684\u63a5\u53d7\u8303\u56f4\u548c LOW \u7684\u63a5\u53d7\u8303\u56f4\u4e4b\u95f4\u8fd8\u5b58\u5728\u4e00\u6bb5\u533a\u57df\u3002\u843d\u5728\u8fd9\u4e00\u90e8\u5206\u7684\u7535\u5e73\u662f \u672a\u5b9a\u4e49(undefined) \u7684\uff0c\u4e5f\u88ab\u79f0\u4e3a\u662f \u6d6e\u52a8(floating) \u7684\u3002\u5982\u679c\u8f93\u51fa\u7684\u7535\u5e73\u662f\u5728\u6d6e\u52a8\u533a\u95f4\u7684\uff0c\u90a3\u4e48\u5176\u8ba4\u5b9a\u503c\u5c06\u662f\u968f\u673a\u7684\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4fe1\u606f\u7684\u5bf9\u5e94\u4e0a\uff0c\u867d\u7136\u5c06\u9ad8\u4f4e\u7535\u5e73\u540c HIGH/LOW \u8054\u7cfb\u662f\u5f88\u81ea\u7136\u7684\uff0c\u4f46\u662f\u5c06\u4ed6\u4eec\u540c true/false \u6216\u8005 1/0 \u8054\u7cfb\u5176\u5b9e\u5e76\u4e0d\u552f\u4e00\u3002\u4f46\u662f\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a positive logic\uff09\uff0c\u6211\u4eec\u90fd\u8ba4\u4e3a HIGH \\~ true \\~ 1\uff0c LOW \\~ false \\~ 0\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c(b) \u56fe\u4e2d\u7684\u6a21\u62df\u4fe1\u53f7\u5728\u7ecf\u8fc7\u6211\u4eec\u7684\u5668\u4ef6\u540e\uff0c\u4f1a\u88ab\u8ba4\u4e3a\u662f (c) \u56fe\u6240\u793a\u7684\u4fe1\u53f7\u3002\u800c\u8fd9\u4e9b\u64cd\u4f5c\u5728\u786c\u4ef6\u5c42\u9762\uff0c\u6211\u4eec\u901a\u8fc7 \u6676\u4f53\u7ba1(transistors) \u6765\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e5f\u7275\u626f\u5230\u6211\u4eec\u4e3a\u4ec0\u4e48\u6700\u7ec8\u4f7f\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u4fe1\u606f\u3002\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u4e8c\u503c\u5668\u4ef6\u6bd4\u8f83\u5e38\u89c1\uff0c\u4ea6\u5373\u8fd9\u91cc\u63d0\u5230\u7684\u6676\u4f53\u7ba1\uff1b\u53e6\u5916\u4e00\u65b9\u9762\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u53ef\u4ee5\u964d\u4f4e\u7535\u8def\u6210\u672c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#abstraction-layers-in-computer-systems-design","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u7684\u62bd\u8c61\u5c42 | Abstraction Layers in Computer Systems Design","text":"\u8d8a\u4e0a\u5c42\u62bd\u8c61\u7a0b\u5ea6\u8d8a\u9ad8 Algorithms Programing Languages Operating Systems Instruction Set Architecture Microarchitecture Register Transfers Logic Gates Transistor Circuits"},{"location":"ZJU_CS/DigitalDesign/Chap01/#number-systems","title":"\u6570\u5b57\u7cfb\u7edf | Number Systems","text":"<p>\u9996\u5148\u9700\u8981\u6d89\u53ca\u7684\u95ee\u9898\u662f\u8fdb\u5236\u8f6c\u6362\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a$r$\u8fdb\u5236\u6570\uff0c\u5b83\u4e00\u822c\u88ab\u5199\u6210\u8fd9\u6837\uff1a</p> <p>$$(A_{n-1}A_{n-2}...A_1A_0A_{-1}...A_{-(m-1)}A_{-m})_{r}$$</p> <p>\u800c\u5b83\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u771f\u503c\u4e3a\uff1a</p> <p>$$ \\begin{align} \\sum_{n-1\\leq i \\leq m} A_ir^i\\;\\; =&amp;A_{n-1}r^{n-1}+A_{n-2}r^{n-2}+...\\ +&amp;A_{1}r^{1}+A_0r^0+A_{-1}r^{-1}+...\\ +&amp;A_{-(m-1)}r^{m-1}+A_{-m}r^{-m} \\end{align} $$</p> <p>\u8ba1\u7b97\u673a\u9886\u57df\u5e38\u89c1\u7684\u8fdb\u5236\u4e3b\u8981\u662f \u4e8c\u8fdb\u5236(binary)\uff0c\u516b\u8fdb\u5236(octal)\uff0c\u5341\u8fdb\u5236(decimal) \u548c \u5341\u516d\u8fdb\u5236(hexadecimal)\u3002</p> <p>\u5176\u4e2d\u4e8c\u3001\u516b\u3001\u5341\u516d\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362\u975e\u5e38\u7b80\u5355\uff0c\u5b58\u5728\u591a\u4f4d\u5230\u4e00\u4f4d\u4e4b\u95f4\u7684\u65e0\u540e\u6548\u6027\u6620\u5c04\uff0c\u4f8b\u5982\u4e8c\u8fdb\u5236\u8f6c\u6362\u5230\u5341\u516d\u8fdb\u5236\u53ea\u9700\u8981\u5c06\u4ece\u4f4e\u5230\u9ad8\u6bcf\u56db\u4f4d\u8f6c\u5316\u6210\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u4e00\u4f4d\u5373\u53ef\u3002</p> <p>\u9700\u8981\u6ce8\u610f\uff0c\u7531\u4e8e\u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236\u5728\u96f6\u4f4d\u4e0a\u7684\u6743\u91cd\u76f8\u540c\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6574\u6570\u90e8\u5206\uff0c\u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236\u662f\u53ef\u4ee5\u76f8\u4e92\u7cbe\u51c6\u8f6c\u5316\u7684\uff08\u5373\u6700\u5c0f\u7cbe\u5ea6\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f 1\uff09\uff1b\u7136\u800c\u8be5\u6027\u8d28\u5728\u5c0f\u6570\u90e8\u5206\u5e76\u4e0d\u6210\u7acb\uff08\u56e0\u4e3a\u5c0f\u6570\u90e8\u5206\u4e0d\u5b58\u5728\u201c\u6700\u5c0f\u7cbe\u5ea6\u201d\u4e00\u8bf4\uff09\uff0c\u5373\u5341\u8fdb\u5236\u65e0\u6cd5\u7cbe\u51c6\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u4f46\u4e8c\u8fdb\u5236\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#arithmetic-operations","title":"\u7b97\u672f\u8fd0\u7b97 | Arithmetic Operations","text":"<p>\u8fd9\u91cc\u6d89\u53ca\u7684\u4e3b\u8981\u662f \u52a0\u6cd5(Addition)\u3001\u51cf\u6cd5(Subtraction)\u3001\u4e58\u6cd5(Multiplication)\u3002</p> <p>\u6574\u4f53\u6d41\u7a0b\u548c\u5c0f\u5b66\u7ad6\u5f0f\u52a0\u6cd5\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b66\u4f1a\u7528\u53d6\u4f59\u6765\u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u5316(\u5305\u62ec\u5c0f\u6570\u4f4d\u7f6e)</p> <p>??? summary \"\u4e8c\u8fdb\u5236\u8fd0\u7b97\"      </p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#codes","title":"\u7f16\u7801 | Codes","text":"<p>\u4e8c\u8fdb\u5236\u7f16\u7801\u4e3b\u8981\u5206\u4e3a\u8fd9\u4e48\u51e0\u79cd\uff1a</p> <ul> <li>Numeric<ul> <li>\u5fc5\u987b\u8868\u8fbe\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6570\u5b57\uff1b</li> <li>\u80fd\u591f\u652f\u6301\u7b80\u5355\u4e14\u666e\u904d\u7684\u8ba1\u7b97\uff1b</li> <li>\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u6709\u8f83\u5927\u5173\u8054\uff1b</li> </ul> </li> <li>Non-numeric<ul> <li>\u76f8\u5bf9\u7075\u6d3b\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u9002\u914d\u666e\u904d\u7684\u8fd0\u7b97\u6cd5\u5219\uff1b<ul> <li>\u7075\u6d3b\u6027\u6307\uff0c\u4fdd\u8bc1\u7f16\u7801\u6620\u5c04\u5173\u7cfb\u662f\u552f\u4e00\u7684\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u79f0\u4e3a\u5408\u6cd5\u7f16\u7801\uff1b</li> </ul> </li> <li>\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u672a\u5fc5\u6709\u5173\u7cfb\uff1b</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_1","title":"\u72ec\u70ed\u7801 &amp; \u72ec\u51b7\u7801","text":"<p>\u72ec\u70ed\u7801(one-hot) \u8981\u6c42\u6bd4\u7279\u5411\u91cf\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f <code>1</code>\uff1b\u5bf9\u5e94\u7684\u8fd8\u6709 \u72ec\u51b7\u7801(one-cold)\u3002Wiki</p> <p>\u4f7f\u7528\u8fd9\u79cd\u7f16\u7801\u7684\u597d\u5904\u662f\uff0c\u51b3\u5b9a\u6216\u6539\u53d8\u72b6\u6001\u673a\u76ee\u524d\u7684\u72b6\u6001\u7684\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u5bb9\u6613\u8bbe\u8ba1\u4e5f\u5bb9\u6613\u68c0\u6d4b\u975e\u6cd5\u884c\u4e3a\u7b49\u3002</p> <p>\u4f46\u662f\u76f8\u5bf9\u5e94\u7684\uff0c\u7f3a\u70b9\u662f\u4fe1\u606f\u8868\u793a\u7387\u8f83\u4f4e\uff0c\u975e\u6cd5\u72b6\u6001\u975e\u5e38\u591a\u800c\u6709\u6548\u72b6\u6001\u5f88\u5c11\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#bcd","title":"BCD \u7801","text":"<p>\u7531\u4e8e\u771f\u5b9e\u4e16\u754c\u4e2d\u5927\u90e8\u5206\u6570\u636e\u8868\u8ff0\u90fd\u662f\u4ee5\u5341\u8fdb\u5236\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7814\u7a76\u5982\u4f55\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u5341\u8fdb\u5236\u3002</p> <p>\u9996\u5148\uff0c\u4e00\u4f4d\u4e8c\u8fdb\u5236\u6570\u80fd\u5305\u542b\u7684\u4fe1\u606f\u662f 1bit\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u201c\u771f\u201d\u6216\u8005\u4e00\u4e2a\u201c\u5047\u201d\u3002\u6211\u4eec\u79f0\u4e00\u4e2a\u62e5\u6709 n \u4e2a\u5143\u7d20\u7684\u4e8c\u8fdb\u5236\u5411\u91cf\u4e3a\u4e00\u4e2a n\u4f4d\u4e8c\u8fdb\u5236\u7f16\u7801(n-bit binary code)\u3002\u4e00\u4e2a n \u4f4d\u4e8c\u8fdb\u5236\u6570\u62e5\u6709$2^{n}$\u79cd\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u56e0\u800c\u53ef\u4ee5\u8868\u793a$2^n$\u79cd\u4fe1\u606f\u3002</p> <p>\u800c\u6211\u4eec\u9700\u8981\u8bbe\u8ba1\u7684\u7f16\u7801\u7cfb\u7edf\uff0c\u5c31\u662f\u5c06\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\u6620\u5c04\u5230\u8fd9$2^n$\u4e2a\u201c\u7a7a\u4f4d\u201d\u4e2d\u3002\u5f53\u7136\uff0c\u5f53\u6211\u4eec\u9700\u8981\u8868\u793a\u7684\u4fe1\u606f\u6570\u91cf\u5e76\u4e0d\u662f 2 \u7684\u5e42\u6b21\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e9b \u672a\u5206\u914d(unassigned) \u7684\u6bd4\u7279\u7ec4\u5408\u3002</p> <p>\u800c\u5728\u8fd9\u79cd\u7f16\u7801\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f BCD\u7801(binary-coded demical)\u3002\u5176\u6838\u5fc3\u601d\u8def\u5c31\u662f\uff0c\u5c06\u5341\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d \u5206\u522b \u7528 \u771f\u503c\u76f8\u7b49\u7684 4 \u4f4d\u4e8c\u8fdb\u5236 \u8868\u793a\uff0c\u5373 <code>0</code> ~ <code>9</code> \u5206\u522b\u7528 <code>0000</code> ~ <code>1001</code> \u8868\u793a\u3002</p> DecimalSymbol BCDDigit <code>0</code> <code>0000</code> <code>1</code> <code>0001</code> <code>2</code> <code>0010</code> <code>3</code> <code>0011</code> <code>4</code> <code>0100</code> <code>5</code> <code>0101</code> <code>6</code> <code>0110</code> <code>7</code> <code>0111</code> <code>8</code> <code>1000</code> <code>9</code> <code>1001</code> <p>!!! note \"eg\"     $$ \\mathrm{ (185){10}\\;=\\;(0001\\;1000\\;0101){BCD}\\;=\\;(10111001)_2 } $$</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_2","title":"\u4f59\u4e09\u7801","text":"<p>\u4e00\u79cd BCD\u7801 \u7684\u6539\u8fdb\u662f \u4f59\u4e09\u7801(Excess3)\u3002\u5176\u6838\u5fc3\u601d\u8def\u662f\u5728 BCD\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u5927\u5c0f\u4e3a 3 \u7684\u504f\u79fb\u91cf\u3002</p> DecimalSymbol Excess3Digit <code>0</code> <code>0011</code> <code>1</code> <code>0100</code> <code>2</code> <code>0101</code> <code>3</code> <code>0110</code> <code>4</code> <code>0111</code> <code>5</code> <code>1000</code> <code>6</code> <code>1001</code> <code>7</code> <code>1010</code> <code>8</code> <code>1011</code> <code>9</code> <code>1100</code> <p>\u4e3a\u4ec0\u4e48\u662f 3 \u5462\uff1f\u9996\u5148\u8fd9\u4e2a 3 \u6765\u81ea\u4e8e $\\frac{16-10}{2}$\uff0c\u4e5f\u5c31\u662f 8421 \u7801\u7684\u5bb9\u91cf\u51cf\u53bb\u6211\u4eec\u9700\u8981\u8868\u793a\u7684\u6570\u5b57\u6570\u91cf\uff0c\u518d\u9664\u4ee5\u4e8c\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\uff0c\u5341\u8fdb\u5236\u4e0b\u80fd\u8fdb\u4f4d\u7684\u4e24\u4e2a\u6570\uff0c\u5728\u4f59\u4e09\u7801\u4e0b\u76f8\u52a0\u4e5f\u521a\u597d\u8fdb\u4f4d\u3002</p> <p>\u4f46\u662f\u9700\u8981\u5f3a\u8c03\u7684\u4e00\u70b9\u662f\uff0c\u7f16\u7801\u548c\u6570\u503c\u662f\u5b58\u5728\u533a\u522b\u7684\uff0c\u867d\u7136\u6211\u4eec\u63d0\u5230\u4e86\u4f59\u4e09\u7801\u76f8\u52a0\uff0c\u4f46\u662f\u7f16\u7801\u505a\u8fd0\u7b97\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u201c\u8fd0\u7b97\u201d\u7684\u4e3b\u4f53\u66f4\u591a\u662f\u6570\u503c\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_3","title":"\u683c\u96f7\u7801","text":"<p>\u6b64\u5916\uff0c\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u63d0\u7684\u53e6\u5916\u4e00\u4e2a\u7f16\u7801\u662f \u683c\u96f7\u7801(Gray Codes)\u3002\u683c\u96f7\u7801\u7684\u7279\u5f81\uff0c\u4e5f\u662f\u4ed6\u7684\u4f18\u70b9\uff0c\u5c31\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u8868\u793a\u53ea\u5dee\u4e00\u4f4d\uff08\u5f53\u5728\u5360\u6ee1\u65f6\uff0c\u5bf9\u4e8e\u6574\u4e2a\u7f16\u7801\u5e8f\u5217\uff0c\u73af\u72b6\u6ee1\u8db3\u8be5\u6761\u4ef6\uff09\u3002</p> <p>\u6bd4\u5982\u6709\u5982\u4e0b\u5e94\u7528\uff1a</p> <p></p> <p>\u4ee5\u53ca\u5728\u8bb8\u591a\u72b6\u6001\u63a7\u5236\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p> <p>\u4ece\u7b14\u8bd5\u505a\u9898\u89d2\u5ea6\u6765\u8bf4\uff0c\u683c\u96f7\u7801\u6700\u9ebb\u70e6\u7684\u5176\u5b9e\u662f\u4e0e\u5341\u8fdb\u5236\u6570\u7684\u8f6c\u6362\u3002\uff08\u6b64\u5904 @CSP-S2019-Day1-T1\uff09</p> <p>!!! note \"\u6280\u5de7\"     1. zmm\u8001\u5e08\u4e0a\u8bfe\u4e5f\u8bb2\u89e3\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u955c\u9762\u6620\u5c04\u4e0d\u65ad\u5ef6\u62d3\u7684\u65b9\u6cd5\uff0c\u6bd4\u8f83\u5b9e\u7528\u3002     2. \u4e2a\u4eba\u8ba4\u4e3a\u53ef\u4ee5\u66ff\u8eab\u601d\u7ef4\u505a\u6cd5\u5c31\u662f\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u627e\u7684\u662f\u7b2c k \u4e2a\u683c\u96f7\u7801\uff0c\u5219\u5bf9\u5e94\u7684\u683c\u96f7\u7801\u4e3a\uff1a</p> <pre><code>$$\nk \\;\\;\\mathrm{XOR}\\;\\; (k&gt;&gt;1)\n$$\n\n3. \u6b64\u5916\u8bb0\u5f97\u6ce8\u610f0-9\u7684\u683c\u96f7\u7801\uff0c9\u6240\u5bf9\u5370\u7684\u683c\u96f7\u7801\u662f`1000`\u800c\u4e0d\u662f`1101`\n</code></pre> <p>\u6c47\u603b\uff1a </p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#ascii","title":"ASCII \u7801","text":"<p>\u5b57\u7b26\u7f16\u7801\u6240\u4f7f\u7528\u7684\u4e00\u822c\u662f ASCII \u7f16\u7801\uff0c\u7531\u4e8e ASCII \u5df2\u7ecf\u662f\u8001\u751f\u5e38\u8c08\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u518d\u5c55\u5f00\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap01/#_4","title":"\u5947\u5076\u6821\u9a8c\u4f4d","text":"<p>\u4fe1\u9053\u7f16\u7801\u4e0e\u4fe1\u6e90\u7f16\u7801\uff1a</p> <p></p> <p>\u5728\u4fe1\u53f7\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u7531\u4e8e\u73af\u5883\u5e72\u6270\u7b49\u539f\u56e0\uff0c\u51fa\u73b0\u5404\u79cd\u4fe1\u53f7\u6296\u52a8\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u4fe1\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9519\u8bef\u68c0\u6d4b\u673a\u5236\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f \u5197\u4f59(Redundancy)\uff0c\u5373\u52a0\u5165\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\u7528\u4ee5\u6821\u9a8c\u3002</p> <pre><code>graph TD\nA[Error Detection Techniques]\nB[Single Parity Check]\nC[Cyclic Redundancy Check]\nD[Check Sum]\n\nA--&gt;B\nA--&gt;C\nA--&gt;D\n</code></pre> <p>\u5176\u4e2d\u4e00\u79cd\u505a\u6cd5\u662f\u5f15\u5165 \u5947\u5076\u6821\u9a8c\u4f4d(Parity Bit)\u3002\u5b83\u5206\u4e3a \u5947\u6821\u9a8c(Odd Parity) \u548c \u5076\u6821\u9a8c(Even Parity)\u3002\u5206\u522b\u901a\u8fc7\u5f15\u5165\u989d\u5916\u7684\u4e00\u4f4d\uff08\u52a0\u5728\u6700\u540e\uff09\uff0c\u6765\u4fdd\u8bc1\u6574\u4e2a\u4fe1\u606f\u4e32\u4e2d <code>1</code> \u7684\u6570\u91cf\u662f\u5947\u6570/\u5076\u6570\u3002</p> <ul> <li>\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u91c7\u7528\u5076\u6821\u9a8c\uff0c\u539f\u59cb\u4fe1\u606f\u4e3a <code>1101</code>\uff0c\u5176\u4e2d\u6709 3 \u4e2a <code>1</code>\uff0c\u8fd9\u65f6\u6211\u4eec\u5728\u540e\u9762\u518d\u52a0\u4e0a\u4e00\u4e2a <code>1</code>\uff0c\u4fdd\u8bc1\u4e86\u6574\u4e2a\u4fe1\u606f\u4e32\u4e2d\u6709\u5076\u6570\u4e2a <code>1</code>\uff1b\u6216\u8005\u5982\u679c\u539f\u59cb\u4fe1\u606f\u4e3a <code>1001</code>\uff0c\u5176\u4e2d\u6709 2 \u4e2a <code>1</code>\uff0c\u8fd9\u65f6\u6211\u4eec\u5219\u5728\u540e\u9762\u52a0\u4e00\u4e2a <code>0</code>\u3002\u6b64\u65f6\uff0c\u5982\u679c\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u90a3\u4e48 <code>1</code> \u7684\u6570\u91cf\u5f88\u53ef\u80fd\u53d8\u6210\u4e86\u4e00\u4e2a\u5947\u6570\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u77e5\u9053\uff0c\u8fd9\u4e2a\u4fe1\u606f\u662f\u4e0d\u5bf9\u7684\u3002</li> </ul> <p>\u7528\u4eba\u8bdd\u5c06\uff0c\u5c31\u662f\u5728\u6570\u5b57\u540e\u9762\u88650/1\u6765\u4f7f\u6570\u5b57\u6ee1\u8db3\u5947\u6570\u4e2a\u6216\u8005\u5076\u6570\u4e2a1\uff0c\u4ee5\u6b64\u6765\u68c0\u9a8c\u4fe1\u606f\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/","title":"Chap 2 Combinational Logic Circuits","text":"<p>\u9644\u6ce8\uff1a\u672c\u8282\u539f\u7b14\u8005\u5728\u8f83\u591a\u7bc7\u5e45\u5f3a\u8c03\u4e860/1\u7684\u76f8\u5bf9\u6027\uff0c\u867d\u7136\u7bc7\u5e45\u8f83\u957f\uff0c\u4f46\u5e0c\u671b\u5404\u4f4d\u80fd\u9886\u4f1a\u5176\u7cbe\u534e\u6240\u5728\u3002 </p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_1","title":"\u903b\u8f91\u8fd0\u7b97","text":"<p>\u903b\u8f91\u8fd0\u7b97\u7684\u5bf9\u8c61\u662f\u5e03\u5c14\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f 0/1 \u4e8c\u503c\u3002</p> <p>\u4e3b\u8981\u7684\u8fd0\u7b97\u5c31\u662f \u4e0e(AND)\uff0c\u6216(OR)\uff0c\u975e(NOT)\uff0c\u5f02\u6216(XOR)\uff0c\u4ee5\u53ca \u4e0e\u975e(NAND)\uff0c\u6216\u975e(NOR)\uff0c\u540c\u6216(XNOR)\u3002</p> <p>!!! note \"\u9ad8\u7ef4\"     \u591a\u8f93\u5165\u7684\u5f02\u6216\u548c\u540c\u6216\u88ab\u79f0\u4e3a\u5947\u51fd\u6570\u548c\u5076\u51fd\u6570\u3002</p> <pre><code>\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u5947\u6821\u9a8c\u548c\u5076\u6821\u9a8c\u3002\n\n\u800c\u4e14\u89c2\u5bdf\u5176\u5361\u8bfa\u56fe\u7684\u5f62\u72b6\uff08\u68cb\u76d8\u5f62\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u662f\u5929\u7136\u4f18\u5316\u7684\uff0c\u5373\u4e0d\u53ef\u4f18\u5316\u7684\u3002\n</code></pre> <p>\u8fd0\u7b97\u89c4\u5219\u633a\u7b80\u5355\u7684\uff0c\u5728\u6b64\u7565\u53bb\u3002</p> <p>\u6bd4\u8f83\u57fa\u7840\u7684\uff0c\u9700\u8981\u4e86\u89e3\u4e0e\u6216\u975e\u7684\u7b26\u53f7\u8868\u793a\u3002</p> <ul> <li><code>A</code> <code>AND</code> <code>B</code> \u5199\u4f5c$A \\cdot B$\u6216\u8005$AB$\uff1b</li> <li><code>A</code> <code>OR</code> <code>B</code> \u5199\u4f5c$A+B$\uff1b</li> <li><code>NOT A</code> \u5199\u4f5c$\\overline{A}$\uff1b</li> <li><code>XOR</code> \u5199\u4f5c$\\overline{A}B+A\\overline{B}$</li> </ul> <p>\u7531\u6b64\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u7ec4\u5408\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>A</code> <code>NOR</code> <code>B</code> \u53ef\u5199\u4f5c $\\overline{A+B}$\uff1b</li> <li><code>A</code> <code>NAND</code> <code>B</code> \u53ef\u5199\u4f5c $\\overline{A\\cdot B}$\uff1b</li> </ul> <p>\u518d\u6b21\u8fd8\u9700\u8981\u63d0\u5230\u7684\u662f \u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b(De Morgan's Laws)\uff0c\u5176\u8868\u8ff0\u4e3a\uff1a(\u4e0e\u6982\u7387\u8bba\u4e2d\u5341\u5206\u76f8\u4f3c)</p> <ul> <li>$\\overline{A+B} = \\overline{A}\\cdot\\overline{B}$\uff1b</li> <li>$\\overline{A\\cdot B} = \\overline{A}+\\overline{B}$\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_2","title":"\u903b\u8f91\u95e8","text":"<p>\u903b\u8f91\u95e8\u662f\u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u5e03\u5c14\u4ee3\u6570\u7684\u903b\u8f91\u5355\u5143\u3002\u5176\u64cd\u4f5c\u5bf9\u8c61\u4e3a\u9ad8\u4f4e\u7535\u5e73\u3002</p> <p></p> <p>\u5982\u56fe\uff0c(a)\u4e2d\u7ed8\u5236\u4e86\u4e09\u4e2a\u5e38\u7528\u903b\u8f91\u95e8\u7684\u7b26\u53f7\uff1b(b)\u4e2d\u5219\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u8fd0\u7b97\u5728 \u65f6\u5e8f\u56fe(timing diagram) \u4e2d\u7684\u72b6\u6001\uff1b(c)\u5219\u63cf\u8ff0\u4e86\u5728\u5ef6\u65f6\uff08\u89c1\u4e0b\uff09\u6548\u5e94\u4e0b\u7684\u65f6\u5e8f\u56fe\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\u662f\uff0c\u975e\u95e8\u5176\u5b9e\u66f4\u591a\u7684\u88ab\u79f0\u4e3a inverter\uff0c\u800c\u975e NOT\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#cmos","title":"CMOS","text":""},{"location":"ZJU_CS/DigitalDesign/Chap02/#_3","title":"\u5ef6\u65f6","text":"<p>\u4f46\u662f\u7531\u4e8e\u662f\u7269\u7406\u5c42\u9762\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f1a\u6709\u4e00\u4e9b\u903b\u8f91\u8fd0\u7b97\u5c42\u9762\u4e0d\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u6bd4\u5982 \u5ef6\u65f6(delay)\u3002</p> <p>!!! note \"\"          &gt; Source: https://en.wikipedia.org/wiki/Signal_propagation_delay#Electronics</p> <p>\u5ef6\u65f6\u7684\u957f\u77ed\u4e0e\u5f88\u591a\u56e0\u7d20\u6709\u5173\uff0c\u53d6\u51b3\u4e8e\u903b\u8f91\u95e8\u7684\u5b9e\u73b0\u6280\u672f\u3002\u800c\u4e14\u901a\u5e38\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e0d\u540c\u8fd0\u7b97\u53c2\u6570\uff0c\u5176\u5ef6\u65f6\u4e5f\u4f1a\u6709\u4e0d\u540c\u3002</p> <p>\u6b64\u5916\uff0c\u4e0e\u95e8\u548c\u6216\u95e8\u53ef\u80fd\u6709\u66f4\u591a\u7684\u8f93\u5165\u5f15\u811a\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u81f3\u6b64\uff0c\u7ed9\u51fa\u4e86 AND, OR, NOT \u4e09\u4e2a\u95e8\u7684\u7b26\u53f7\u8868\u793a\uff0c\u7c7b\u4f3c\u4e0a\u4e00\u5c0f\u8282\u63d0\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e09\u4e2a\u57fa\u7840\u7684\u95e8\u7535\u8def\u6765\u6784\u6210\u5176\u4ed6\u7684\u95e8\u7535\u8def\uff08\u867d\u7136\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u80fd\u662f\u901a\u8fc7 NAND + NOT \u6765\u5b9e\u73b0 AND \u7684\uff09\u3002</p> <p>\u4e8e\u662f\u53c8\u5f15\u7533\u51fa\u4e00\u4e2a\u6982\u5ff5\u2014\u2014\u901a\u7528\u95e8(Universal Gate)\u3002\u4e00\u4e2a\u529f\u80fd\u5b8c\u5168\u7684\uff0c\u80fd\u591f\u8868\u793a\u5176\u4ed6\u6240\u6709\u95e8\u7684\u903b\u8f91\u95e8\u88ab\u79f0\u4e3a\u901a\u7528\u95e8\uff0c\u5728\u6211\u4eec\u5b66\u8fc7\u7684\u903b\u8f91\u95e8\u4e2d\uff0cNAND \u548c NOR \u90fd\u662f\u901a\u7528\u95e8\u3002</p> <p>!!! quote \"\u63a8\u8350\u9605\u8bfb\"     - Title: Universal Logic Gates     - URL: https://www.electronics-tutorials.ws/logic/universal-gates.html     - Video: https://www.bilibili.com/video/BV1EW411u7th/</p> <p>Universal Logic gates can be used to produce any other logic or Boolean function with the NAND and NOR gates being minimal</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_4","title":"\u5e03\u5c14\u4ee3\u6570","text":"<p>literal \\~ \u5b57\u9762\u91cf\uff0c\u4e5f\u5c31\u662f\u201c\u53d8\u91cf\u201d\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f, \u5982\u679c\u5df2\u77e5  $X+Y= X+Z$ \u6216  $XY = XZ$ , \u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5f97\u5230  $Y = Z$ .(\u4e0d\u80fd\u6d88\u53bb)</p> <p>\u5bf9\u4e8e\u6bcf\u2f00\u4e2a\u5e03\u5c14\u51fd\u6570, \u5b83\u7684\u771f\u503c\u8868\u662f\u552f\u2f00\u7684, \u4f46\u662f\u7ed9\u5b9a\u2f00\u4e2a\u771f\u503c\u8868, \u53ef\u80fd\u6709\u591a\u4e2a\u5e03\u5c14\u51fd\u6570\u4e0e\u4e4b\u5bf9\u5e94.(\u4ece\u5e03\u5c14\u51fd\u6570\u5230\u771f\u503c\u8868\u6620\u5c04\u6ee1\u5c04\u4f46\u4e0d\u5355\u5c04)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_5","title":"\u8fd0\u7b97\u5f8b","text":"<p>\u8fd9\u5f20\u56fe\u7247\u603b\u7ed3\u4e86\u5e03\u5c14\u8fd0\u7b97\u4e2d\u7684\u8fd0\u7b97\u5f8b\uff0c\u4e2a\u4eba\u611f\u89c9\u6700\u9700\u8981\u5f3a\u5316\u8bb0\u5fc6\u7684\u662f 15 \u6761\uff0c\u56e0\u4e3a\u5e03\u5c14\u4ee3\u6570\u501f\u7528\u4e86\u666e\u901a\u4ee3\u6570\u7684\u7b26\u53f7\uff0c\u4f46\u7b2c 15 \u6761\u5728\u666e\u901a\u4ee3\u6570\u4e2d\u5e76\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u9700\u8981\u6ce8\u610f\u3002</p> <p>!!! note     15\u6210\u7acb\u7684\u539f\u56e0\u662f14\u8fd0\u7528\u5bf9\u5076\u5f8b</p> <p>\u5728\u8bb0\u5fc6\u8fd9\u5957\u8fd0\u7b97\u89c4\u5f8b\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u5efa\u7acb \u4e0e \u548c \u6216 \u662f\u5bf9\u7b49\u7684\u89c2\u5ff5\u3002\u6211\u4eec\u4e60\u60ef\u7528\u201c\u771f\u201d\u53bb\u7406\u89e3\u8fd9\u4e24\u4e2a\u8fd0\u7b97\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5982\u679c\u4f60\u4ee5\u201c\u5047\u201d\u4e3a\u4e3b\u4f53\u53bb\u5206\u6790\u8fd9\u4e24\u4e2a\u8fd0\u7b97\uff0c\u4f1a\u53d1\u73b0\u548c\u201c\u771f\u201d\u662f\u5b8c\u5168\u5bf9\u79f0\u7684\u3002</p> <p>\u4f46\u662f\u8ba9\u8fd9\u4ef6\u4e8b\u53d8\u5f97\u53c8\u6ca1\u90a3\u4e48\u7b80\u5355\u7684\u4e8b\u60c5\u662f\uff0c\u867d\u7136 \u4e0e \u548c \u6216 \u662f\u5bf9\u7b49\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5728\u501f\u7528\u666e\u901a\u4ee3\u6570\u7b26\u53f7\u4f53\u7cfb\u7684\u540c\u65f6\uff0c\u53c8\u4eba\u4e3a\u5730\u7ed9\u4ed6\u4eec\u6dfb\u52a0\u4e86\u4f18\u5148\u7ea7\uff08\u4f46\u662f\u8fd9\u4e5f\u662f\u5fc5\u8981\u7684\uff0c\u5426\u5219\u8868\u8fbe\u5f0f\u5c31\u4f1a\u5145\u6ee1\u62ec\u53f7\uff09\u3002</p> <p>\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u4f9d\u6b21\u4e3a\uff1a</p> <ol> <li>\u62ec\u53f7 / ()\uff1b</li> <li>\u975e / NOT / $\\overline A$\uff1b</li> <li>\u4e0e / AND / $\\cdot$\uff1b</li> <li>\u6216 / OR / $+$\uff1b</li> </ol> <p>!!! info \"advice\"     1. \u8bf7\u6ce8\u610f3\u30014 \u7684\u4f18\u5148\u7ea7     2. \u5e76\u4e14\u8003\u524d\u53ef\u4ee5\u591a\u52a0\u7ec3\u4e60</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_6","title":"\u8fd0\u7b97\u5f8b\u63a8\u5e7f","text":"<p>\u9664\u6b64\u4e4b\u5916\uff0c\u4ece\u4e0a\u9762\u63d0\u5230\u7684\u8fd0\u7b97\u5f8b\u4e2d\u8fd8\u80fd\u63a8\u5e7f\u51fa\u5982\u4e0b\u51e0\u4e2a\u6a21\u578b\uff0c\u6bd4\u8f83\u91cd\u8981\uff1a</p> <p> 3\u30014\u30015</p> <p>!!! info \"\u6d88\u9664\u5f8b\u771f\u7684\u5f88\u91cd\u8981\"     $A + \\overline{A}B = A + B$  \u5c31\u662f\u5206\u914d\u7387\u7684\u5bf9\u5076\u5f62\u5f0f\u7684\u8fd0\u7528</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_7","title":"\u5bf9\u5076\u6cd5\u5219","text":"<p>\u5bf9\u5076\u6cd5\u5219(Duality Rule)\uff1a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684 \u5bf9\u5076(dual) \u4e3a\uff0c\u5c06\u6240\u6709\u7684 \u4e0e \u548c \u6216 \u5bf9\u8c03\u5f97\u5230\u7684\u5f0f\u5b50\uff08\u6ce8\u610f\uff01\u9700\u8981\u4fdd\u8bc1\u53c2\u4e0e\u8fd0\u7b97\u7684\u7ed3\u6784\u4e0d\u80fd\u53d8\uff08\u662f\u201c\u5e26\u62ec\u53f7\u201d\u7684\u5b8f\u5c55\u5f00\uff09\uff0c\u6bd4\u5982 \u4e00\u822c\u60c5\u51b5\u4e0b $A\\cdot B$ \u4f1a\u88ab\u5bf9\u5076\u4e3a $(A+B)$ \u4ee5\u4fdd\u8bc1\u8fd0\u7b97\u987a\u5e8f\uff09\u3002</p> <p>\u5bf9\u5076\u539f\u5219\uff1a\u5c06\u8868\u8fbe\u5f0f\u7b49\u53f7\u4e24\u8fb9\u540c\u65f6\u53d6\u5bf9\u5076\uff0c\u7b49\u5f0f\u4f9d\u7136\u6210\u7acb\u3002</p> <p>!!! example \"eg\"     - $X+XY$ \u548c $X(X+Y)$ \u5bf9\u5076\uff1b     - $X(Y+Z)$ \u548c $X+YZ$ \u5bf9\u5076\uff1b</p> <p>\u800c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9664\u975e\u67d0\u4e2a\u8868\u8fbe\u5f0f\u662f \u81ea\u5bf9\u5076(self-dual) \u7684\uff0c\u90a3\u4e48\u5b83\u7684\u8868\u73b0\u90fd\u4e0e\u539f\u8868\u8fbe\u5f0f\u4e0d\u540c\u3002</p> <p>\u5bf9\u5076\u8868\u8fbe\u5f0f\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u5982\u679c F \u7684\u5bf9\u5076\u662f G\uff0c\u90a3\u4e48 F \u4e5f\u662f G \u7684\u5bf9\u5076\uff0c\u5373\u5bf9\u5076\u5173\u7cfb\u662f\u5bf9\u6210\u7684\uff1b</li> <li>\u5982\u679c\u8868\u8fbe\u5f0f F \u548c G \u7b49\u4ef7\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u5bf9\u5076\u4e5f\u7b49\u4ef7\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_8","title":"\u4e92\u8865\u51fd\u6570","text":"<p>\u4e00\u4e2a \u51fd\u6570\u7684\u4e92\u8865(Complement of a Function) \u6307\u7684\u662f\uff0c\u5c06\u5b83\u7684 \u5bf9\u5076\u51fd\u6570 \u4e2d\u6bcf\u4e00\u4e2a \u53d8\u91cf \u90fd\u53d6\u53cd\u5f97\u5230\u7684\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u6b63\u597d\u7b49\u4e8e\u539f\u51fd\u6570\u7684 \u975e(\u771f\u503c\u88680/1\u5bf9\u8c03)\u3002</p> <p>!!! example \"eg\"     - \u539f\u51fd\u6570\uff1a$F=\\overline{A}B+C\\overline{B}$\uff1b     - \u5176\u5bf9\u5076\u51fd\u6570\uff1a$F=(\\overline{A}+B)(C+\\overline{B})$\uff1b     - \u5176\u4e92\u8865\u51fd\u6570\uff1a$\\overline{F}=(A+\\overline{B})(\\overline{C}+D)$\uff1b\uff08\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u539f\u51fd\u6570\u76f4\u63a5\u53d6\u53cd\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_9","title":"\u66ff\u4ee3\u6cd5\u5219","text":"<p>\u66ff\u4ee3\u6cd5\u5219(Substitution Rules): \u5982\u679c\u5c06\u4e00\u4e2a\u7b49\u5f0f\u4e2d \u6240\u6709\u7684 \u67d0\u4e2a\u53d8\u91cf \u90fd\u66ff\u6362\u4e3a\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5219\u7b49\u5f0f\u4f9d\u7136\u6210\u7acb\u3002</p> <p>!!! example \"eg\"     - \u539f\u7b49\u5f0f\uff1a$X(Y+Z)=XY+XZ$\uff1b     - \u5982\u679c\u4f7f\u7528 $X+YZ$ \u66ff\u6362\u6240\u6709\u7684 $X$\uff0c\u5219\uff1a     - \u4fee\u6539\u540e\u7684\u7b49\u5f0f $(X+YZ)(Y+Z)=(X+YZ)Y+(X+YZ)Z$ \u4f9d\u7136\u6210\u7acb\uff1b</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_10","title":"\u4e00\u81f4\u6027\u5b9a\u7406","text":"<p>\u5728\u7b80\u5316\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u4e00\u81f4\u6027\u5b9a\u7406(Consensus Theorem) \u5982\u4e0b\uff08\u6bd4\u8f83\u597d\u7528\uff09\uff1a</p> <p>$$ XY+\\overline{X}Z+YZ=XY+\\overline{X}Z $$</p> <p>\u5176\u8bc1\u660e\u7684\u7b2c\u4e00\u6b65\u662f\u8fd9\u6837\u7684\uff1a $XY+\\overline{X}Z+YZ=XY+\\overline{X}Z+(X+\\overline{X})YZ$\uff0c\u90a3\u540e\u9762\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u672c\u8d28\u4e0a\u8fd9\u4e2a\u7b49\u5f0f\u662f\u5229\u7528\u4e86\u88c2\u9879\uff0c\u9700\u8981\u5c06\u5176\u4e2d\u6700\u672c\u8d28\u7684\u90e8\u5206\uff0c\u6700\u5c0f\u7684\u7c92\u5ea6\u7ed9\u88c2\u5f00\u6765\uff0c\u7136\u540e\u518d\u6162\u6162\u6d88\u6389\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_11","title":"\u5176\u4ed6\u516c\u5f0f","text":"<p>{width=200%}</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_12","title":"\u6807\u51c6\u5f62\u5f0f\u4e0e\u89c4\u8303\u5f62\u5f0f","text":"<p>\u5c0f\u6d4b\u4f1a\u8003\uff08\u72d7\u5934</p> <p>\u7531\u4e8e\u672c\u8d28\u4e0a\u76f8\u7b49\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u79cd\u5199\u6cd5\uff0c\u800c\u4e14\u968f\u7740\u53d8\u91cf\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u6bd4\u8f83\u4f1a\u5f88\u56f0\u96be\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u79cd\u5f62\u5f0f\uff0c\u4f7f\u5f97\u6240\u6709\u76f8\u540c\u7684\u8868\u8fbe\u5f0f\u90fd\u80fd\u6bd4\u8f83\u65b9\u4fbf\u7684\u201c\u5316\u7b80\u201d\u4e3a\u540c\u4e00\u4e2a\u5f62\u5f0f\uff0c\u540c\u65f6\u4e5f\u80fd\u8fa8\u522b\u51fa\u4e24\u4e2a\u8868\u8fbe\u5f0f\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u8fd9\u5c31\u5f15\u5165\u4e86 \u6807\u51c6\u5f62\u5f0f(Standard Forms)\uff0c\u5305\u62ec SOP \u548c POS\uff1b\u4ee5\u53ca \u89c4\u8303\u5f62\u5f0f(Canonical Forms)\uff0c\u5206\u522b\u4e3a \u6700\u5c0f\u9879\u4e4b\u548c(Sum of Minterms)SOM \u548c \u6700\u5927\u9879\u4e4b\u79ef(Product of Maxterms)POM\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7ed9\u51fa\u8fd9\u6837\u4e00\u5f20 \ud83c\udf30 \u771f\u503c\u8868\u3002</p> \ud83c\udf30 Index X Y Z Output 0 / <code>000</code> <code>0</code> <code>0</code> <code>0</code> <code>0</code> 1 / <code>001</code> <code>0</code> <code>0</code> <code>1</code> <code>0</code> 2 / <code>010</code> <code>0</code> <code>1</code> <code>0</code> <code>1</code> 3 / <code>011</code> <code>0</code> <code>1</code> <code>1</code> <code>0</code> 4 / <code>100</code> <code>1</code> <code>0</code> <code>0</code> <code>1</code> 5 / <code>101</code> <code>1</code> <code>0</code> <code>1</code> <code>1</code> 6 / <code>110</code> <code>1</code> <code>1</code> <code>0</code> <code>0</code> 7 / <code>111</code> <code>1</code> <code>1</code> <code>1</code> <code>1</code> <p>\u6570\u503c\u662f\u968f\u4fbf\u6413\u7684\uff0c\u8bf7\u7559\u610f\u4e3a\u4ec0\u4e48\u4e3a\u8981\u5728 Index \u7279\u5730\u5199\u51fa\u4e8c\u8fdb\u5236\u7684\u8868\u8ff0\u3002</p> <p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u9700\u8981\u5f3a\u8c03\uff0c\u6211\u4eec\u5f15\u5165 SOM \u548c POM \u7684\u76ee\u7684\u662f\u5bfb\u627e\u4e00\u79cd\u6bd4\u8f83\u5178\u578b\u7684 \u8868\u8fbe\uff0c\u4f7f\u5f97\u4ed6\u4eec\u80fd\u591f \u786e\u5b9a \u4e00\u5f20\u771f\u503c\u8868\u3002\u5373\uff0c\u77e5\u9053\u8fd9\u79cd \u8868\u8fbe \u6211\u4eec\u5c31\u8db3\u591f\u5199\u51fa\u8fd9\u5f20\u771f\u503c\u8868\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> <p>\u4e00\u4e2a\u771f\u503c\u8868\u5c31\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e03\u5c14\u51fd\u6570</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#som","title":"\u6700\u5c0f\u9879\u4e4b\u548c SOM","text":"<p>\u8fd9\u91cc\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0\u53ca\u539f\u4f5c\u8005\u5bf9\u8fd9\u90e8\u5206\u7684\u89e3\u91ca\u6709\u4e9b\u8fc7\u4e8e\u5197\u957f\u4e86\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u90e8\u5206\u7684\u89e3\u91ca\u662f\u975e\u5e38\u6709\u8da3\u548c\u5177\u6709\u542f\u53d1\u610f\u4e49\u7684\u3002</p> <p>!!! note \"\u8bfe\u672c\u4e2d\u6700\u5c0f\u9879\u7684\u5b9a\u4e49\"     A product term in which all the variables appear exactly once, either complemented or uncomplemented, is called minterm.      Its characteristic property is that it represents exactly one combination of binary variable values in the truth table.</p> <p>\u7528\u6211\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u5c31\u662f\u6311\u51fa\u771f\u503c\u8868\u4e2d\u6240\u6709\u7ed3\u679c\u662f <code>1</code> \u7684\u6700\u5c0f\u9879\uff08\u6bd4\u8f83\u6a21\u7cca\u4f46\u76f4\u89c2\uff0c\u6240\u4ee5\u8bf7\u5148\u56eb\u56f5\u541e\u67a3\uff0c\u6211\u5728\u201c\u8ffd\u52a0\u8bf4\u660e\u201d\u4f1a\u8fdb\u4e00\u6b65\u8bf4\u660e\uff09\u7136\u540e <code>OR</code> \u8d77\u6765\u3002\u663e\u7136\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u7684\u542b\u4e49\u5c31\u662f\uff0c\u4e00\u65e6\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u4e86\u8fd9\u51e0\u4e2a\u201c\u6700\u5c0f\u9879\u201d\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f <code>1</code>\uff0c\u7b26\u5408\u4e86 <code>OR</code> \u7684\u201c\u67091\u5f971\u201d\u7684\u89c4\u5219\u3002</p> <p>\u6211\u4eec\u4f7f\u7528\u7b26\u53f7 $m_{idx}$ \u6765\u8868\u793a\u53d8\u91cf\u7ec4\u5408 $idx$ \u662f\u4e00\u4e2a\u6700\u5c0f\u9879\uff0c\u5176\u4e2d $idx$ \u8868\u793a\u63cf\u8ff0\u7684\u90a3\u4e00\u9879\u5728\u771f\u503c\u8868\u7684\u5e8f\u53f7\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u4e5f\u80fd\u53cd\u6620\u51fa\u5b57\u9762\u91cf\u7684\u7ec4\u5408\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 \ud83c\udf30 \u4e2d\uff0coutput \u4e3a <code>1</code> \u7684\u9879\u6709\uff1a<code>010</code> <code>100</code> <code>101</code> <code>111</code> \u8fd9\u56db\u9879\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6311\u51fa\u6765\u7684\u6700\u5c0f\u9879\u8868\u8fbe\u5c31\u5206\u522b\u662f $m_{2}=\\overline{X}Y\\overline{Z}, \\; m_{4}=X\\overline{Y}\\overline{Z}, \\; m_{5}=X\\overline{Y}Z, \\; m_{7}=XYZ$\uff0c\u8fd9\u4e9b\u53d8\u91cf\u8868\u8fbe\u5f0f\u90fd\u662f\u5f53\u4e14\u4ec5\u5f53\u53d8\u91cf\u7ec4\u5408\u4e3a\u5bf9\u5e94\u9879\u65f6\u624d\u4f1a\u53d6 <code>1</code> \u7684\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u8fd9\u5199\u8868\u8fbe\u5f0f\u552f\u4e00\u8868\u8fbe\u4e86\u8fd9\u4e9b\u771f\u503c\u8868\u4e2d\u7684 <code>1</code>\u3002</p> <p>!!!+ tip \"\u8ffd\u52a0\u8bf4\u660e\uff08\u7b80\u5355\uff0c\u4f46\u662f\u5efa\u8bae\u770b\u4e00\u770b\uff09\"     &gt; \u6216\u8bb8\u60a8\u89c9\u5f97\u6700\u5c0f\u9879\u7684\u5f97\u5230\u975e\u5e38\u7684\u81ea\u7136\u4e14\u7b80\u5355\uff0c\u6211\u5efa\u8bae\u60a8\u4e5f\u5c1d\u8bd5\u7740\u770b\u4e00\u770b\u8ffd\u52a0\u8bf4\u660e\uff0c\u56e0\u4e3a\u8fd9\u5bf9\u7406\u89e3\u6700\u5927\u9879\u633a\u6709\u5e2e\u52a9\u7684\u3002</p> <pre><code>\u90a3\u4e48\u4ec0\u4e48\u662f\u201c\u5217\u4e3e\u201d\u5462\uff1f\u8ba9\u6211\u4eec\u518d\u770b\u4e00\u773c\u4e0a\u9762\u5bf9\u6700\u5c0f\u9879\u4e4b\u548c\u7684\u63cf\u8ff0\uff1a\u201c\u4e00\u65e6\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u2018\u6700\u5c0f\u9879\u2019\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f\u771f\u201d\uff0c\u8ffd\u672c\u6eaf\u6e90\uff0c\u5728\u6700\u5c0f\u9879\u4e2d\uff0c\u6211\u4eec\u5c31\u9700\u8981\u505a\u5230\u53ea\u6709\u5f53\u4e00\u4e2a\u7535\u8def\u7684\u72b6\u6001\u662f\u7279\u5b9a\u7ec4\u5408\u65f6\uff0c\u5176\u8fd4\u56de\u503c\u4e3a `1`\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e \ud83c\udf30 \u4e2d\u7684 $m_{5}=X\\overline{Y}Z$\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u4e00\u79cd\u66f4\u5570\u55e6\u7684\u65b9\u5f0f\u8868\u8fbe\u51fa\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\n```c\nif(X == 1 &amp;&amp; Y == 0 &amp;&amp; Z == 1) {\n    Output = 1;\n} else {\n    Output = 0;\n}\n```\n\n\uff08\u5faa\u5e8f\u6e10\u8fdb\uff09\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u53d8\u5316\u4e3a\u8fd9\u6837\uff1a\n\n```c\nif(X == 1 &amp;&amp; (!Y) == 1 &amp;&amp; Z == 1) {\n    Output = 1;\n} else {\n    Output = 0;\n}\n```\n\n\u5982\u679c\u4f60\u719f\u6089\u201c\u538b\u884c\u201d\u6280\u5de7\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u90fd\u53ef\u4ee5\u5199\u6210\uff1a\n\n```c\nOutput = (X == 1 &amp;&amp; (!Y) == 1 &amp;&amp; Z == 1);\n```\n\n\u800c\u8fd9\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u4e0a\u5df2\u7ecf\u548c $m_5=X\\overline{Y}Z$ \u4e00\u6a21\u4e00\u6837\u4e86\u3002\n\n\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u603b\u7ed3\u6027\u7684\u8868\u8ff0\uff1a&lt;u&gt;\u6240\u8c13\u7684\u201c\u6311\u51fa\u201d\uff0c\u5c31\u662f\u5bf9\u4e8e\u9009\u5b9a\u7684\u4e00\u4e2a\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u4f7f\u5f97\u53ea\u6709\u8fd9\u79cd\u7ec4\u5408\u7684\u7ed3\u679c\u662f $f$\uff0c\u800c\u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u662f $\\overline{f}$\uff0c\u5373\u5b9e\u73b0\u4e86\u8be5\u8868\u8fbe\u5f0f\u80fd **\u552f\u4e00\u8868\u8fbe** \u8fd9\u4e2a\u53d6\u503c\u7ec4\u5408\u3002&lt;/u&gt;\uff08\u8fd9\u91cc\u4e4b\u6240\u4ee5\u5199\u7684\u662f $f$ \u800c\u4e0d\u662f `1`\uff0c\u662f\u4e3a\u4e86\u7ed9\u4e4b\u540e\u5206\u6790 POM \u505a\u94fa\u57ab\uff0c\u5bf9\u4e8e POM\uff0c`0` \u624d\u662f\u552f\u4e00\u8868\u8fbe\u7684\u7279\u5f81\u7ed3\u679c\u3002\uff09\n</code></pre> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86 \ud83c\udf30 \u6240\u5bf9\u5e94\u7684 SOM\uff1a</p> <p>$$ \\begin{array}{l}     F(X,Y,Z)     &amp; = \\sum m(2,4,5,7) \\     &amp; = m_2+m_4+m_5+m_7 \\     &amp; = \\overline{X}Y\\overline{Z}+X\\overline{Y}\\,\\overline{Z}+X\\overline{Y}Z+XYZ \\end{array} $$</p> <p>\u518d\u6b21\u5f52\u7eb3\uff0c\u4f7f\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5c0f\u9879\u4e4b\u548c\u66f4\u50cf\u662f\u201c\u679a\u4e3e\u4e86\u6240\u6709 <code>1</code> \u7684\u53ef\u80fd\u201d\uff0c\u53ea\u8981\u5339\u914d\u4e86\u8fd9\u4e2a\u201c\u548c\u201d\u4e2d\u7684\u67d0\u4e00\u9879\uff08\u4e8b\u5b9e\u4e0a\u4e0d\u505a\u5316\u7b80\u7684\u8bdd\u4f60\u4e5f\u53ea\u80fd\u6ee1\u8db3\u4e00\u9879\u7684\u503c\u53d6\u5230 <code>1</code>\uff09\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u53d8\u6210 <code>1</code>\uff1b\u800c\u4e00\u4e2a\u90fd\u4e0d\u5339\u914d\u7684\uff0c\u81ea\u7136\u5c31\u53ea\u80fd\u5f97\u5230 <code>0</code>\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#pom","title":"\u6700\u5927\u9879\u4e4b\u79ef POM","text":"<p>\u5c31\u50cf\u6211\u4e4b\u524d\u4e0d\u65ad\u4e0d\u65ad\u4e0d\u65ad\u5f3a\u8c03\u7684\uff0c\u6240\u8c13\u7684 <code>1</code> \u548c <code>0</code> \u90fd\u53ea\u662f\u4eba\u4e3a\u5b9a\u4e49\u7684\uff0c\u6446\u8131\u6f5c\u610f\u8bc6\u91cc\u5bf9\u8fd9\u4e24\u8005\u4e4b\u4e00\u7684\u503e\u5411\uff08\u4f8b\u5982\u6211\u672c\u4eba\u5c31\u4e00\u76f4\u5f88\u503e\u5411\u4e8e\u4ee5 <code>1</code> \u4e3a\u4e3b\u4f53\u7814\u7a76\u95ee\u9898\uff09\u4f1a\u5bf9\u7406\u89e3\u6700\u5927\u9879\u4e4b\u79ef\u548c\u903b\u8f91\u8868\u8fbe\u5f0f\u5316\u7b80\u5f88\u6709\u5e2e\u52a9\u3002</p> <p>\u800c\u6700\u5927\u9879\u4e4b\u79ef\u2014\u2014\u4ee5\u6211\u4e2a\u4eba\u7684\u611a\u89c1\u2014\u2014\u5c31\u662f\u4ee5 <code>0</code> \u4e3a\u4e3b\u4f53\u6765\u7814\u7a76\u771f\u503c\u8868\u7684\u7279\u5f81\u7684\u3002</p> <p>!!! note \"\u8bfe\u672c\u4e2d\u5bf9\u6700\u5927\u9879\u7684\u5b9a\u4e49\"     A sum term that contains all the variables in complemented or uncomplemented form is called a maxterm.</p> <p>\u4e0e\u6700\u5c0f\u9879\u5bf9\u6bd4\uff0c\u65e0\u975e\u662f\u628a \"product term\" \u6362\u6210\u4e86 \"sum term\"\uff0c\u4e5f\u5c31\u662f\u628a AND \u6362\u6210\u4e86 OR\u3002</p> <p>\u800c\u6700\u5927\u9879\u4e4b\u79ef\uff0c\u5c31\u662f\u6311\u51fa\u6240\u6709\u7ed3\u679c\u4e3a <code>0</code> \u7684\u6700\u5927\u9879\uff08\u201c\u6311\u51fa\u201d\u7684\u5b9a\u4e49\u6211\u5df2\u7ecf\u5728 SOM \u7684\u8ffd\u52a0\u8bf4\u660e\u4e2d\u7ed9\u51fa\uff0c\u5728 POM \u7684\u8ffd\u52a0\u8bf4\u660e\u4e2d\u6211\u8fd8\u4f1a\u518d\u4e00\u6b21\u63d0\u53ca\uff09\uff0c\u518d\u505a AND\u3002\u4ee5 <code>1</code> \u4e3a\u4e3b\u4f53\u63cf\u8ff0 AND \u662f\u201c\u90fd1\u51fa1\u201d\uff0c\u800c\u4ee5 <code>0</code> \u4e3a\u4e3b\u4f53\u63cf\u8ff0 AND \u5219\u662f\u201c\u67090\u51fa0\u201d\uff0c\u8fd9\u4e0e OR \u7684\u201c\u67091\u51fa1\u201d\u4e5f\u662f\u9ad8\u5ea6\u5bf9\u79f0\u7684\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u5927\u9879\u4e4b\u79ef\u7684\u542b\u4e49\u662f\uff0c\u5728\u6700\u5927\u9879\u4e4b\u79ef\u4e2d\uff0c\u53ea\u8981\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u201c\u6700\u5927\u9879\u201d\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210 <code>0</code>\u3002</p> <p>\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u7b26\u53f7 $M_{idx}$ \u6765\u8868\u793a\u53d8\u91cf\u7ec4\u5408 $idx$ \u662f\u4e00\u4e2a\u6700\u5927\u9879\uff0c\u5176\u4e2d $idx$ \u8868\u793a\u63cf\u8ff0\u7684\u90a3\u4e00\u9879\u5728\u771f\u503c\u8868\u7684\u5e8f\u53f7\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u4e5f\u80fd\u53cd\u6620\u51fa\u5b57\u9762\u91cf\u7684\u7ec4\u5408\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 \ud83c\udf30 \u4e2d\uff0coutput \u4e3a <code>0</code> \u7684\u9879\u6709\uff1a<code>000</code> <code>001</code> <code>011</code> <code>110</code> \u8fd9\u56db\u9879\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6311\u51fa\u6765\u7684\u6700\u5c0f\u9879\u8868\u8fbe\u5c31\u5206\u522b\u662f$M_{0}=X+Y+Z, \\; M_{1}=X+Y+\\overline{Z}, \\; M_{3}=X+\\overline{Y}+\\overline{Z}, \\; M_{6}=\\overline{X}+\\overline{Y}+Z$\u3002\u53ef\u4ee5\u68c0\u9a8c\uff0c\u53ea\u6709\u4ee3\u5165\u4ed6\u4eec\u5bf9\u5e94\u7684\u90a3\u4e00\u884c\u771f\u503c\u8868\u7ec4\u5408\u65f6\uff0c\u4ed6\u4eec\u624d\u4f1a\u5f97\u5230 <code>0</code>\u3002</p> <p>!!!+ tip \"\u8ffd\u52a0\u8bf4\u660e\"</p> <pre><code>\u540c\u6837\u7684\uff0c\u56de\u987e\u6700\u5927\u9879\u4e4b\u79ef\u7684\u63cf\u8ff0\uff1a\u201c\u5728\u6700\u5927\u9879\u4e4b\u79ef\u4e2d\uff0c\u53ea\u8981\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\u5339\u914d\u8fd9\u51e0\u4e2a\u2018\u6700\u5927\u9879\u2019\u7684\u5176\u4e2d\u4e00\u9879\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5c31\u4f1a\u53d8\u6210 `0`\u201d\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8e \ud83c\udf30 \u4e2d\u7684 $M_6=\\overline{X}+\\overline{Y}+Z$\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u4e0b\u63cf\u8ff0\uff1a\n\n```c\nif(X == 1 &amp;&amp; Y == 1 &amp;&amp; Z == 0){\n    Output = 0;\n} else {\n    Output = 1;\n}\n```\n\n\u56de\u987e\u6700\u5927\u9879\u7684\u76ee\u7684\u662f\u6ee1\u8db3\u8fd9\u4e2a\u5206\u652f\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u8f93\u51fa `0`\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u8868\u8fbe `(X == 1 &amp;&amp; Y == 1 &amp;&amp; Z == 0)` \u8fd9\u4e2a\u903b\u8f91\u6761\u4ef6\u3002\u4f46\u7531\u4e8e\u6700\u5927\u9879\u7684\u5b9e\u73b0\u5f62\u5f0f\u662f `OR`\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06 `&amp;&amp;` \u7684\u5f0f\u5b50\u4ee5 `||` \u7684\u5f62\u5f0f\u8868\u8fbe\u3002\n\n\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u5404\u79cd\u8fd0\u7b97\u5f8b\u6765\u5316\u7b80\uff0c\u4f46\u662f\u4e0d\u59a8\u60f3\u4e00\u60f3 `AND` \u548c `OR` \u7684\u8fd0\u7b97\u7279\u5f81\uff0c\u524d\u8005\u662f\u201c\u67090\u51fa0\u201d\uff0c\u540e\u8005\u662f\u201c\u67091\u51fa1\u201d\u3002\u800c\u5bf9\u4e8e `AND` \u6765\u8bf4\uff0c\u60f3\u8981\u505a\u5230\u6761\u4ef6\u7b5b\u9009\uff0c\u5c31\u9700\u8981\u6bcf\u4e00\u4e2a\u6761\u4ef6\u90fd\u662f `1`\uff0c\u6700\u540e\u5982\u679c\u7b5b\u9009\u6210\u529f\u7ed3\u679c\u5c31\u662f `1`\uff1b\u5bf9\u4e8e `OR` \u6765\u8bf4\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u6761\u4ef6\u90fd\u662f `0`\uff0c\u5982\u679c **\u7b5b\u9009\u6210\u529f** \u7684\u7ed3\u679c\u5c31\u662f `0`\u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6216\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff1a\n\n```c\nif((X == 0 || Y == 0 || (!Z) == 0) == 0){\n    Output = 0;\n} else {\n    Output = 1;\n}\n```\n\n\u540c\u6837\u8fdb\u884c\u4e00\u4e0b\u538b\u884c\uff1a\n\n```c\n// It might be too complex.\nOutput = !((X == 0 || Y == 0 || (!Z) == 0) == 0);\n// So we can simplify it.\nOutput = (X == 0 || Y == 0 || (!Z) == 0);\n```\n\n\u8fd9\u4e5f\u6b63\u5bf9\u5e94\u4e86 $M_6=\\overline{X}+\\overline{Y}+Z$\u3002\n\n\u518d\u6b21\u7ed9\u51fa\u8fd9\u4e2a\u603b\u7ed3\u6027\u7684\u8868\u8ff0\uff1a&lt;u&gt;\u6240\u8c13\u7684\u201c\u6311\u51fa\u201d\uff0c\u5c31\u662f\u5bf9\u4e8e\u9009\u5b9a\u7684\u4e00\u4e2a\u5b57\u9762\u91cf\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u4f7f\u5f97\u53ea\u6709\u8fd9\u79cd\u7ec4\u5408\u7684\u7ed3\u679c\u662f $f$\uff0c\u800c\u5bf9\u4e8e\u4efb\u4f55\u5176\u4ed6\u53d6\u503c\u7684\u7ec4\u5408\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u662f $\\overline{f}$\uff0c\u5373\u5b9e\u73b0\u4e86\u8be5\u8868\u8fbe\u5f0f\u80fd **\u552f\u4e00\u8868\u8fbe** \u8fd9\u4e2a\u53d6\u503c\u7ec4\u5408\u3002&lt;/u&gt;\n</code></pre> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86 \ud83c\udf30 \u6240\u5bf9\u5e94\u7684 POM\uff1a</p> <p>$$ \\begin{aligned}     F(X,Y,Z)     &amp; = \\prod M(0,1,3,6) \\     &amp; = M_0M_1M_3M_6 \\     &amp; = (X+Y+Z)(X+Y+\\overline{Z})(X+\\overline{Y}+\\overline{Z})(\\overline{X}+\\overline{Y}+Z) \\end{aligned} $$</p> <p>\u540c\u6837\u518d\u6b21\u5f52\u7eb3\uff0c\u4f7f\u7528\u901a\u4fd7\u7684\u8bdd\u6765\u8bf4\uff0c\u6700\u5927\u9879\u4e4b\u79ef\u66f4\u50cf\u662f\u201c\u679a\u4e3e\u4e86\u6240\u6709 <code>0</code> \u7684\u53ef\u80fd\u201d\uff0c\u53ea\u8981\u5339\u914d\u4e86\u8fd9\u4e2a\u201c\u79ef\u201d\u4e2d\u7684\u67d0\u4e00\u9879\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4f1a\u53d8\u6210 <code>0</code>\uff1b\u800c\u4e00\u4e2a\u90fd\u4e0d\u5339\u914d\u7684\uff0c\u81ea\u7136\u5c31\u53ea\u80fd\u5f97\u5230 <code>1</code>\u3002</p> <p>\u4e0e\u6700\u5c0f\u9879\u76f8\u6bd4\uff0c\u4e00\u4e2a\u679a\u4e3e\u4e86\u6240\u6709\u7684 <code>1</code> \u7684\u53ef\u80fd\uff0c\u4e00\u4e2a\u679a\u4e3e\u4e86\u6240\u6709\u662f <code>0</code> \u7684\u53ef\u80fd\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u503c\u8868\u8fbe\u5f0f\u6765\u8bf4\uff0c\u4e24\u79cd \u8868\u8fbe \u90fd\u662f\u5145\u8981\u7684\u3002</p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u8fd8\u80fd\u53d1\u73b0\uff1a</p> <p>\u4f8b\u5982\uff1a$M_5 = \\overline{X} + Y + \\overline{Z} = \\overline{ X\\overline{Y}Z } = \\overline{m}_5$</p> <p>\u5173\u4e8e\u8fd9\u4e2a\u53d1\u73b0\u7684\u66f4\u591a\u7684\u4f8b\u5b50\u548c\u8bf4\u660e\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b2c\u4e00\u4e2a\u7ec3\u4e60\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_13","title":"\u7ec3\u4e60","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u6765\u8fdb\u4e00\u6b65\u5f3a\u5316\u8fd9\u4e9b\u7406\u89e3\uff0c\u5e76\u4e14\u6316\u6398\u4e00\u4e9b\u795e\u5947\u7684\u7279\u6027\u3002</p> <p>!!! note \"\"     === \"\u9898\u9762\" \u200b        \u8bf7\u5206\u522b\u5199\u51fa\u5982\u4e0b\u771f\u503c\u8868\u4e2d $F$ \u548c $\\overline{F}$ \u7684 SOM \u548c POM\u3002          \u200b    === \"\u7b54\u6848\" \u200b        \u7b54\u6848\uff1a         $$                 \\begin{aligned}                     F(X,Y,Z)                     &amp; = \\sum m(0,2,5,7) \\                     &amp; = \\overline{X}\\,\\overline{Y}\\,\\overline{Z} + \\overline{X}Y\\overline{Z} + X\\overline{Y}Z + XYZ \\                     &amp; = \\prod M(1,3,4,6) \\                     &amp; = (X+Y+\\overline{Z})(X+\\overline{Y}+\\overline{Z})(\\overline{X}+Y+Z)(\\overline{X}+\\overline{Y}+Z)                 \\end{aligned}         $$         $$                 \\begin{array}{l}                     \\overline{F}(X,Y,Z)                     &amp; = \\sum m(1,3,4,6) \\                     &amp; = \\overline{X}\\,\\overline{Y}Z + \\overline{X}YZ + X\\overline{Y}\\,\\overline{Z} + XY\\overline{Z} \\                     &amp; = \\prod M(0,2,5,7) \\                     &amp; = (X+Y+Z)(X+\\overline{Y}+Z)(\\overline{X}+Y+\\overline{Z})(\\overline{X}+\\overline{Y}+\\overline{Z})                 \\end{array}         $$     \u200b    \u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u4ef6\u5f88\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c$F$ \u7684 SOM \u7684\u4e0b\u6807\u4e0e $\\overline{F}$ \u7684 POM \u7684\u4e0b\u6807\u662f\u4e00\u6837\u7684\uff1b\u5f53\u7136\u5bf9\u4e8e $F$ \u7684 POM \u548c $\\overline{F}$ \u7684 SOM \u4e5f\u662f\u4e00\u6837\u7684\u3002\u8fd9\u53c8\u53cc\u5370\u8bc1\u4e86\u5bf9\u79f0\u6027\u3002</p> <p>\u6838\u5fc3\uff1a\u5bf9\u4e8e\u6709\u540c\u6837\u4e0b\u6807\u7684\u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\uff0c\u4ed6\u4eec\u4e4b\u95f4\u662f\u4e92\u8865\u5173\u7cfb \u6c42\u6700\u5927\u9879\u7b49\u4e8e\u6c42$\\overline{F}$\u7684\u6700\u5c0f\u9879\uff01\uff01\uff01</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_14","title":"\u7535\u8def\u5b9e\u73b0\u4e0e\u4f18\u5316","text":"<p>!!! info \"\u5f15\u5165\"     \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6807\u51c6\u5f62\u5f0f\u6765\u5f97\u5230\u5bf9\u5e94\u7684\u7535\u8def\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u6210\u672c\u8fc7\u9ad8\u4ee5\u53ca\u7535\u8def\u590d\u6742\uff08\u56e0\u4e3a\u95e8\u592a\u591a\u4e86\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u7535\u8def\u8fdb\u884c\u4f18\u5316\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ecb\u7ecd\u901a\u8fc7 \u5361\u8bfa\u56fe(Karnaugh map) \u6765\u4f18\u5316\u903b\u8f91\u7535\u8def\u7684\u65b9\u6cd5\u3002</p> <pre><code>\u4e0d\u8fc7\u518d\u5f00\u59cb\u201c\u4f18\u5316\u201d\u7684\u8bdd\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4ec0\u4e48\u662f\u201c\u4f18\u201d\uff0c\u4e5f\u5c31\u662f\u7ed9\u51fa\u4e00\u4e2a\u7535\u8def\u6210\u672c\u7684\u8861\u91cf\u4f9d\u636e\uff0c\u5373 **\u6210\u672c\u6807\u51c6(cost criteria)**\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_15","title":"\u6210\u672c\u6807\u51c6","text":"<p>\u5728\u6210\u672c\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd\u7684\u4e3b\u8981\u6709\u4e09\u79cd\u6807\u51c6\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>\u6309\u7167\u5b57\u9762\u91cf\u5b57\u9762\u91cf\u8ba1(literal cost)\uff1a$L$</li> <li>\u6309\u95e8\u8f93\u5165\u8ba1\uff0c\u4e0d\u8ba1\u975e\u95e8(gate-input cost)\uff1a$G$</li> <li>\u6309\u95e8\u8f93\u5165\u8ba1\uff0c\u8ba1\u975e\u95e8(gate-input cost with NOTs)\uff1a$GN$</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_16","title":"\u6309\u7167\u5b57\u9762\u91cf\u5b57\u9762\u91cf\u8ba1","text":"<p>\u5f88\u76f4\u767d\uff0c\u5c31\u662f\u6309\u7167\u8868\u8fbe\u5f0f\u4e2d\u6709\u591a\u5c11\u5b57\u9762\u91cf\u6765\u8ba1\u7b97\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>$F = BD + A\\overline{B}C + A\\overline{C}\\,\\overline{D}$ \u4e2d $L = 8$\uff1b</li> <li>$F = ABC+\\overline{A}\\,\\overline{B}\\,\\overline{C}$ \u4e2d $L = 6$\uff1b</li> <li>$F = (A+B+C)(\\overline{A}+\\overline{B} + \\overline{C})$ \u4e2d $L = 6$\uff1b</li> </ul> <p>\u53ef\u4ee5\u60f3\u8c61\uff0c\u867d\u7136\u8fd9\u79cd\u8ba1\u7b97\u65b9\u6cd5\u975e\u5e38\u7684\u7b80\u5355\uff0c\u4f46\u662f\u611f\u89c9\u4e0d\u592a\u9760\u8c31\u3002\u6bd4\u5982\uff0c\u540e\u9762\u4e24\u4e2a\u4f8b\u5b50\uff0c\u867d\u7136\u4ed6\u4eec\u7684 literal cost \u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u663e\u7136\u5f00\u9500\u4e0d\u592a\u4e00\u6837\uff08\u56e0\u4e3a\u4e00\u4e2a\u662f 3+3 \u4e00\u4e2a\u662f 2+2+2\uff09\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_17","title":"\u6309\u95e8\u8f93\u5165\u8ba1","text":"<p>\u6309\u7167\u95e8\u8f93\u5165\u8ba1\u5c31\u662f\u6309\u7167\u903b\u8f91\u95e8\u8f93\u5165\u5f15\u811a\u7684\u603b\u4e2a\u6570\u6765\u8ba1\u7b97\uff0c\u8fd9\u91cc\u7684\u8f93\u5165\u5e76\u4e0d\u4ec5\u4ec5\u662f\u76f4\u63a5\u6765\u81ea\u4e8e\u5b57\u9762\u91cf\u8f93\u5165\u7684\u90a3\u4e9b\u5f15\u811a\uff0c\u4e5f\u5305\u62ec\u5b57\u9762\u91cf\u505a\u8fd0\u7b97\u540e\u5f97\u5230\u7684\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u4f20\u5165\u4e0b\u4e00\u7ea7\u903b\u8f91\u95e8\u7684\u5f15\u811a\u3002</p> <p>!!! warning \"\u6ce8\u610f\"     \u867d\u7136\u975e\u95e8\u4e5f\u662f\u95e8\uff0c\u4f46\u662f\u6211\u4eec\u901a\u5e38\u4e0d\u628a\u975e\u95e8\u76f4\u63a5\u8ba1\u5165 gate-input cost\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u63d0\u5230\u7684\u201c\u8f93\u5165\u5f15\u811a\u201d\u9ed8\u8ba4\u662f\u4e0d\u5305\u542b\u975e\u95e8\u7684\u8f93\u5165\u5f15\u811a\u7684\u3002</p> <p></p> <p>\u4f8b\u5982\u8fd9\u5f20\u5bf9\u5e94\u8868\u8fbe\u5f0f$F = A+BC+\\overline{B}\\,\\overline{C}$ \u7684\u56fe\u4e2d\uff1a</p> <ul> <li>\u7eff\u8272\u539f\u70b9\u8868\u793a\u4e00\u7ea7\u8f93\u5165\u5f15\u811a\uff1b</li> <li>\u84dd\u8272\u65b9\u70b9\u8868\u793a\u4e8c\u7ea7\u8f93\u5165\u5f15\u811a\uff1b</li> <li>\u9ed1\u8272\u4e09\u89d2\u8868\u793a\u975e\u95e8\u7684\u8f93\u5165\u5f15\u811a\uff1b</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u91cc\u4e00\u5171\u6709 5 + 2 = 7 \u4e2a\u8f93\u5165\u5f15\u811a\uff0c\u4ee5\u53ca 2 \u4e2a\u975e\u95e8\u8f93\u5165\u5f15\u811a\u3002</p> <p>\u4ece\u8868\u8fbe\u5f0f\u6765\u770b\uff0c\u5b83\u53ef\u4ee5\u770b\u4f5c\u662f\u6bcf\u4e00\u5c42\u8fd0\u7b97\u7684\u53c2\u6570\u6570\u91cf\u6c42\u548c\uff0c\u4e0d\u8fc7\u6211\u4eec\u5ffd\u7565\u975e\u95e8\u3002</p> <p>\u4f8b\u5982\uff0c\u5f0f\u5b50$F=AB+\\overline{B}C+C\\overline{D}$ \u4e2d\uff0c\u6700\u9876\u5c42\u7684\u8fd0\u7b97\u662f\u4e00\u4e2a\u4e09\u8f93\u5165\u6216\u8fd0\u7b97\uff0c\u6240\u4ee5\u6709 3 \u4e2a\u8f93\u5165\uff1b\u63a5\u4e0b\u6765\u6709\u4e09\u4e2a\u4e8c\u8f93\u5165\u4e0e\u8fd0\u7b97\uff0c\u6240\u4ee5\u5404\u8ba1 2 \u4e2a\u8f93\u5165\uff0c\u4e00\u5171 2 * 3 = 6 \u4e2a\u8f93\u5165\uff0c\u4e00\u5171\u662f 9 \u4e2a\u8f93\u5165\u3002</p> <p>\u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u4ece\u5e95\u5c42\u5f80\u4e0a\u6570\u66f4\u65b9\u4fbf\uff1a</p> <ul> <li>A \u548c B \u5404\u81ea\u7b97\u4e00\u4e2a\uff0cAB \u6574\u4f53\u7b97\u4e00\u4e2a\uff0c\u4e00\u5171 3 \u4e2a\uff1b</li> <li>\u4e00\u5171\u6709\u4e09\u7ec4\u7c7b\u4f3c AB \u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u4e00\u5171\u662f 3 * 3 = 9 \u4e2a\uff1b</li> <li>\u5373$G=9$\uff1b</li> </ul> <p>!!!  \"\"     \u603b\u800c\u8a00\u4e4b\u6211\u4eec\u4e0d\u59a8\u6309\u7167\u62ec\u53f7\u4e00\u5c42\u4e00\u5c42\u5c42\u7ea7\u5f80\u4e0a\u8d70\u6570\u5373\u53ef\u3002</p> <p>\u800c\u5bf9\u4e8e gate-input cost with NOTs\uff0c\u53ea\u8981\u518d\u989d\u5916\u8ba1\u5165\u975e\u95e8\u7684\u8f93\u5165\u5373\u53ef\u3002\u4f8b\u5982\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff1a</p> <ul> <li>\u53d1\u73b0\u6709\u4e24\u4e2a\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u6240\u4ee5\u8981\u989d\u5916\u8ba1 2 \u4e2a\uff0c\u4e00\u5171\u662f 11 \u4e2a\uff1b</li> <li>\u5373$GN=11$\uff1b</li> </ul> <p>!!! warning \"\u6ce8\u610f\"     \u5982\u679c\u51fa\u73b0\u4e86\u6bd4\u5982 $F=\\overline{A}B+\\overline{A}C$ \u7684\u60c5\u51b5\uff0c\u975e\u95e8\u53ea\u9700\u8981\u8ba1 1 \u4e2a\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u628a\u975e\u4e86\u4ee5\u540e\u7684\u4e1c\u897f\u5f53\u4f5c\u4e86\u4e00\u4e2a\u5b57\u9762\u91cf\u518d\u7528\u7684\uff0c\u5728\u5b9e\u9645\u7535\u8def\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u975e\u4e00\u6b21\uff0c\u4e4b\u540e\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u8f93\u51fa\u503c\u62ff\u8d70\u53bb\u7528\u5c31\u884c\u3002</p> <p>\u63a5\u4e0b\u6765\u653e\u51e0\u9053\u4f8b\u9898\u3002</p> <p>!!! note \"\"     === \"\u9898\u9762\"         \u8ba1\u7b97$F=ABC+\\overline{A}\\,\\overline{B}\\,\\overline{C}$ \u7684 $L$\u3001$G$\u3001$GN$\u3002</p> <p>\u200b    === \"\u7b54\u6848\"    - $L = 6$\uff1b      - $G= 8$\uff1b      - $GN = 11$\uff1b    </p> <p>!!! note \"\"     === \"\u9898\u9762\"         \u8ba1\u7b97 $F=(A+\\overline{C})(\\overline{B}+C)(\\overline{A}+B)$ \u7684 $L$\u3001$G$\u3001$GN$\u3002</p> <pre><code>===  \"\u7b54\u6848\"\n  - $L = 6$\uff1b\n  - $G= 9$\uff1b\n  - $GN = 12$\uff1b\n</code></pre> <p>!!! note \"\"     === \"\u9898\u9762\"         \u8ba1\u7b97 $F=(A+\\overline{B})(A+D)(B+C+\\overline{D})(\\overline{B}+\\overline{C}+D)$ \u7684 $L$\u3001$G$\u3001$GN$\u3002</p> <pre><code>=== \"\u7b54\u6848\"\n    - $L = 10$\uff1b\n    - $G= 14$\uff1b\n    - $GN = 17$\uff1b\n\n==**\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u4e0d\u8981\u91cd\u590d\u8ba1\u7b97\uff01**==\n</code></pre> <p>!!! note \"\"     === \"\u9898\u9762\"         \u8ba1\u7b97 $F=BD+A\\overline{B}C+A\\overline{B}\\,\\overline{D}+AB\\overline{C}$ \u7684 $L$\u3001$G$\u3001$GN$\u3002</p> <pre><code>=== \"\u7b54\u6848\"\n    - $L = 11$\uff1b\n    - $G = 15$\uff1b\n    - $GN = 18$\uff1b\n\n\u8fd9\u91cc\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u91cd\u590d\u7684\u88ab\u975e\u4e86\u7684\u5b57\u9762\u91cf\uff0c\u4e0d\u8981\u91cd\u590d\u8ba1\u7b97\uff01\n</code></pre> <p>!!! note \"\"     === \"\u9898\u9762\"         \u8ba1\u7b97 $F=\\overline{A}\\,\\overline{C}(B+\\overline{D})+AC(B+\\overline{D})$ \u7684 $L$\u3001$G$\u3001$GN$\u3002</p> <pre><code>=== \"\u7b54\u6848\"\n    - $L = 8$\uff1b\n    - $G = 12$\uff1b\n    - $GN = 15$\uff1b\n</code></pre> <p>\u5c0f\u7ed3\uff1a \u8fd9\u91cc\u540c\u6837\u9700\u8981\u6ce8\u610f\uff0c\u51fa\u73b0\u4e86\u6bd4\u8f83\u590d\u6742\u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u4ee5 $\\overline{A}\\,\\overline{C}(B+\\overline{D})$ \u4e3a\u4f8b\uff0c\u81ea\u9876\u5411\u4e0b\u662f\uff1a\u24f5\u4e09\u8f93\u5165\u4e0e\u95e8\uff0c\u24f6\u4e8c\u8f93\u5165\u6216\u95e8\uff1b\u6240\u4ee5\u5e94\u8be5\u662f $1^{\\overline{A}} + 1^{\\overline{C}} + 1^{B} + 1^{\\overline{D}} + 1^{B+\\overline{D}} + 1^{\\overline{A}\\,\\overline{C}(B+\\overline{D})}$\uff0c\u5373 6\u3002</p> <p>dzz\u7684\u65b9\u6cd5\uff0c\u5148\u627e\u62ec\u53f7\u7684\uff0c\u628a\u62ec\u53f7\u91cc\u9762\u7684\u5408\u5e76\u4e86\uff0c\u7136\u540e\u6253\u5305\u6210\u4e00\u4e2a\u6846\uff0c\u518d\u5f80\u4e0a\u627e\uff0c\u76f4\u5230\u6700\u9876\u5c42\u3002 \u4f8b\u5982\u4e0a\u9762\u8fd9\u9898\uff0c\u5148\u5904\u7406$(B+\\overline{D})$ \u8fd9\u6837\u7b97\u4e24\u4e2a\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u62ec\u53f7\u53d8\u6210\u4e00\u4e2a\u65b9\u6846\uff0c\u65b9\u6846\u4f5c\u4e3a\u6574\u4f53\u8003\u8651</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_18","title":"\u5361\u8bfa\u56fe","text":""},{"location":"ZJU_CS/DigitalDesign/Chap02/#_19","title":"\u5361\u8bfa\u56fe\u7684\u601d\u60f3","text":"<p>\u4f18\u5316\u903b\u8f91\u8868\u8fbe\u5f0f\u6700\u76f4\u767d\u7684\u601d\u60f3\u5c31\u662f\u51cf\u5c11\u95e8\u7535\u8def\uff0c\u4e5f\u5c31\u662f\u53bb\u51cf\u5c11 gate-input cost\u3002\u90a3\u4e48\u8981\u5982\u4f55\u505a\u5462\uff1f</p> <p>\u6211\u4eec\u8003\u8651\u5230\u903b\u8f91\u8fd0\u7b97\u5f8b\u4e2d\u7684\u8fd9\u4e2a\u63a8\u5e7f$XY+X\\overline{Y}=X(Y+\\overline{Y})=X$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e24\u4e2a\u6700\u5c0f\u9879\u53ea\u5dee\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u975e\uff0c\u90a3\u4e48\u4ed6\u4eec\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff1b\u5f53\u7136\uff0c\u5bf9\u79f0\u7684\uff0c\u6839\u636e$(X+\\overline{Y})(X+Y)=X+Y\\overline{Y}=X$\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u8bba\u5bf9\u6700\u5927\u9879\u4e5f\u6210\u7acb\u3002</p> <p>\u662f\u4e0d\u662f\u89c9\u5f97\u201c\u53ea\u5dee\u4e00\u4e2a\u201d\u5f88\u8033\u719f\uff1f\u662f\u7684\uff01\u6211\u4eec\u60f3\u5230\u4e86\u683c\u96f7\u7801\uff01\u5047\u8bbe\u6211\u4eec\u5c06 n \u4e2a\u5b57\u9762\u91cf\u6392\u5217\u6210\u4e00\u4e2a n bits \u7684\u5411\u91cf\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6309\u7167\u683c\u96f7\u7801\u6392\u5e8f\uff0c\u4e00\u65e6\u53d1\u73b0\u6709\u76f8\u90bb\u7684\u6700\u5c0f\u9879\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5408\u5e76\u4ed6\u4eec\u3002</p> <p>\u4f46\u8fd9\u8fd8\u4e0d\u591f\u5145\u5206\uff0c\u4f8b\u5982\u5728\u4e00\u4e2a\u6709\u4e09\u4e2a\u5b57\u9762\u91cf\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\uff0c\u201c\u4e0e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u76f8\u90bb\u201d\u7684\u8868\u8fbe\u5f0f\u5176\u5b9e\u6709\u4e09\u4e2a\uff0c\u4f46\u662f\u7528\u7ebf\u6027\u7684\u8868\u793a\u65b9\u6cd5\u53c8\u6ca1\u6cd5\u5f88\u597d\u7684\u8868\u793a\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u5c06\u5b83\u5199\u6210\u4e00\u5f20\u4e8c\u7ef4\u7684\u8868\uff0c\u5373\u5c06\u5b57\u9762\u91cf\u62c6\u6210\u4e24\u7ec4 bit \u5411\u91cf\uff0c\u5404\u81ea\u6309\u7167\u683c\u96f7\u7801\u6392\u5217\uff0c\u5f62\u6210\u4e00\u5f20\u4e8c\u7ef4\u8868\uff0c\u8fd9\u5c31\u662f \u5361\u8bfa\u56fe(Karnaugh Map)\uff0c\u4e5f\u53eb K-map\u3002</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u683c\u5b50\u90fd\u53ea\u5dee\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u975e\uff0c\u800c\u4e14\u662f\u5145\u8981\u7684\uff0c\u5373\u6240\u6709\u201c\u76f8\u90bb\u201d\u90fd\u53ef\u4ee5\u5728\u8fd9\u5f20\u56fe\u8868\u73b0\u51fa\u6765\u3002</p> <p>!!! tip \"\u8bf4\u660e\"     \u7531\u4e8e\u683c\u96f7\u7801\u7684\u6027\u8d28\u662f\u4e00\u4e2a\u5728\u201c\u6ee1\u201d\u72b6\u6001\u4e0b \u73af\u72b6\u6210\u7acb \u7684\u6027\u8d28\uff0c\u6240\u4ee5\u5361\u8bfa\u56fe\u4e5f\u9700\u8981\u7528\u201c\u73af\u72b6\u201d\u7684\u601d\u8def\u53bb\u770b\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8054\u60f3\u4e00\u4e0b\u884c\u5217\u5f0f\u7684\u5f62\u8c61\u5316\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5c06\u8fd9\u5f20\u8868\u5f53\u4f5c\u4e00\u4e2a\u65e0\u9650\u6269\u5c55\u7684\u8868\u683c\u3002</p> <p>!!! question \"\u601d\u8003\u9898\"     \u5728\u8fd9\u91cc\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u7740\u611f\u53d7\u4e00\u4e0b\u4e24\u4e2a\u5b57\u9762\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u5b9e\u9645\u4e0a\u201c\u76f8\u90bb\u4e5f\u53ea\u67092\u4e2a\u201d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u201c4\u4e2a\u76f8\u90bb\u201d\u7684\u5361\u8bfa\u56fe\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e09\u4e2a\u5b57\u9762\u91cf\u4e5f\u53ea\u6709\u201c3\u4e2a\u76f8\u90bb\u201d\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u660e\u660e\u6709\u201c4\u4e2a\u76f8\u90bb\u201d\u7684\u5361\u8bfa\u56fe\u6765\u5b9e\u73b0\u5462\uff1f</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_20","title":"\u5361\u8bfa\u56fe\u7684\u5c40\u9650\u6027","text":"<p>\u7136\u800c\uff0c\u4e0a\u9762\u7684\u8bf4\u6cd5\u5176\u5b9e\u5f88\u7275\u5f3a\u3002\u56e0\u4e3a\u4e00\u5f20\u4e8c\u7ef4\u8868\u4e2d\uff0c\u80fd\u4e0e\u4e00\u4e2a\u5143\u7d20\u76f8\u90bb\u7684\u5143\u7d20\u6700\u591a\u53ea\u6709\u56db\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6491\u6b7b\u4e5f\u53ea\u80fd\u7528\u5361\u8bfa\u56fe\u8868\u793a 4 \u4e2a\u5b57\u9762\u91cf\u7684\u60c5\u51b5\uff08\u5f53\u7136\u66f4\u591a\u7684\u53d8\u91cf\u4e5f\u6709\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u591a\u5c11\u6709\u70b9\u9ebb\u70e6\u4e86\uff09\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\u5361\u8bfa\u56fe\u53ea\u80fd\u7528\u4e8e\u5316\u7b80\u975e\u5e38\u7b80\u5355\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u3002</p> <p>\u66f4\u591a\u60c5\u51b5\u4e0b\uff0c\u5361\u8bfa\u56fe\u5b9e\u9645\u4e0a\u53ea\u9002\u5408\u6211\u4eec\u505a\u9898\u3002\u4f46\u662f\u5176\u601d\u8def\u662f\u975e\u5e38\u6709\u610f\u601d\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_21","title":"\u5361\u8bfa\u56fe\u7684\u7ed3\u6784","text":"<p>\u8fd9\u91cc\u6211\u4eec\u4ee5 3 \u5143\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e3a\u4f8b\uff0c2 \u5143\u548c 4 \u5143\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\u3002</p> <p>\u540c\u6837\uff0c\u4e3e\u4e00\u4e2a \ud83c\udf30 \uff1a$F(X,Y,Z) = \\sum m(2,3,4,5)$</p> <p>\u9996\u5148\u6211\u4eec\u6309\u7167\u6bd4\u7279\u5411\u91cf\u7684\u5f62\u5f0f\u628a\u6700\u5c0f\u9879\u5199\u51fa\u6765\uff1a</p> \u503c X Y Z 2 0 1 0 3 0 1 1 4 1 0 0 5 1 0 1 <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u7ed8\u5236\u5361\u8bfa\u56fe\uff0c\u6211\u4eec\u5c06 bit \u5411\u91cf <code>[x, y, z]</code> \u62c6\u6210 <code>[x]</code> \u548c <code>[y, z]</code> \u505a\u5982\u4e0b\u8868\u683c\uff1a</p> <code>yz</code> = <code>00</code> <code>yz</code> = <code>01</code> <code>yz</code> = <code>11</code> <code>yz</code> = <code>10</code> <code>x</code> = <code>0</code> 0 0 1 1 <code>x</code> = <code>1</code> 1 1 0 0 <p>\u53e6\u5916\u4e00\u79cd\u6807\u6ce8\u8868\u683c\u7684\u65b9\u5f0f\u662f\u8fd9\u6837\uff0c\u5b83\u53ef\u80fd\u66f4\u6e05\u6670\uff1a</p> <p>{width=300px}</p> <p>\u4f46\u662f\u4ed6\u4eec\u7684\u672c\u8d28\u90fd\u662f\u683c\u96f7\u7801\u3002</p> <p>4 \u5143\u5b57\u9762\u91cf\u7684\u5361\u8bfa\u56fe\u5219\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a</p> <p>{width=500px}</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_22","title":"\u4f7f\u7528\u5361\u8bfa\u56fe\u4f18\u5316","text":"<p>\u5df2\u7ecf\u8bb2\u4e86\u601d\u60f3\u548c\u5361\u8bfa\u56fe\u7684\u7ed3\u6784\uff0c\u90a3\u4e48\u5230\u5e95\u8981\u5982\u4f55\u5229\u7528\u5361\u8bfa\u56fe\u8fdb\u884c\u4f18\u5316\u5462\uff1f</p> <p>\u8ba9\u6211\u4eec\u56de\u987e\u4f18\u5316\u7684\u65b9\u6cd5\uff0c\u5373\u5408\u5e76\u76f8\u90bb\u4e24\u9879\uff0c\u4e5f\u5c31\u662f\u627e\u5230\u5361\u8bfa\u56fe\u4e2d\u76f8\u90bb\u7684\u90e8\u5206\u3002\u4f46\u662f\u8fd9\u4e0d\u591f\uff0c\u6211\u4eec\u8fd8\u8981\u601d\u8003\u662f\u4e0d\u662f\u80fd\u5408\u5e76\u5df2\u7ecf\u76f8\u90bb\u7684\u90e8\u5206\uff0c\u6bd4\u5982\uff1a</p> <p>\u6211\u4eec\u901a\u8fc7\u5361\u8bfa\u56fe\uff0c\u9996\u5148\u5408\u5e76\u4e86 $WXYZ$ \u548c $WXY\\overline{Z}$\uff0c$WX\\overline{Y}Z$ \u548c $WX\\overline{Y}\\,\\overline{Z}$\uff0c\u5206\u522b\u5f97\u5230\u4e86 $WXY$ \u548c $WX\\overline{Y}$\uff0c\u663e\u7136\u8fd9\u4e24\u4e2a\u4e1c\u897f\u4e5f\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff1b\u800c\u5728\u5361\u8bfa\u56fe\u4e0a\uff0c\u8fd9\u8868\u73b0\u4e3a\u4e24\u4e2a\u76f8\u90bb\u7684 <code>1*2</code> \u7684\u77e9\u5f62\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u8fed\u4ee3\u5408\u5e76\u7684\u884c\u4e3a\u6700\u7ec8\u53ef\u4ee5\u5212\u5f52\u4e3a\u8fd9\u6837\u4e00\u4e2a\u884c\u4e3a\uff1a</p> <p>\u6211\u4eec\u5728\u5361\u8bfa\u56fe\u4e2d\u5bfb\u627e\u82e5\u5e72 \u6781\u5927 \u7684 2 \u5e42\u77e9\u5f62\uff0c\u5373\u5143\u7d20\u4e2a\u6570\u4e3a 2 \u7684\u5e42\u6b21\uff08\u81ea\u7136\u8fb9\u957f\u4e5f\u90fd\u4e3a 2 \u7684\u5e42\u6b21\uff09\u7684\u77e9\u5f62\uff0c\u800c\u6bcf\u4e00\u4e2a\u77e9\u5f62\u6240\u8986\u76d6\u7684\u5143\u7d20\u90fd\u5e94\u8be5\u662f \u6700\u5c0f\u9879/\u6700\u5927\u9879\uff08\u4e00\u822c\u90fd\u662f\u505a\u6700\u5c0f\u9879\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0c\u201c\u5faa\u73af\u201d\u7684\u6027\u8d28\u4ecd\u7136\u6ee1\u8db3\uff0c\u5373\u7b2c\u4e00\u5217\u548c\u6700\u540e\u4e00\u5217\uff0c\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u76f8\u90bb\u7684\u3002</p> <p></p> <p></p> <p>\u4f8b\u5982\uff1a</p> <p>{width=300.px}</p> <p>\u4f8b\u5982\uff1a</p> <p>{width=300.px}</p> <p>\u518d\u4f8b\u5982\uff1a</p> <p>{width=500.px}</p> <p>\u90fd\u662f\u5408\u7406\u7684\u5361\u8bfa\u56fe\u5212\u5206\u3002</p> <p>\u5728\u5f97\u5230\u8fd9\u4e9b\u5212\u5206\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5c06\u8fd9\u4e9b\u9879\u62ce\u51fa\u6765\uff0c\u5199\u51fa\u5b83\u4eec\u7684\u8868\u8fbe\u5f0f\u3002</p> <p>\u800c\u81f3\u4e8e\u5982\u4f55\u62ce\u51fa\u6765\u2014\u2014\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u6846\u4e2d\uff0c\u67d0\u4e00\u4e2a\u5b57\u9762\u91cf\u7684\u503c\u65e2\u53ef\u4ee5\u662f <code>0</code>\uff0c\u53c8\u53ef\u4ee5\u662f <code>1</code> \u65f6\uff08\u8fd9\u91cc\u6307\u7684\u662f\u8f93\u5165\u7684\u503c\uff0c\u5e76\u975e\u8f93\u51fa\u7ed3\u679c\uff09\uff0c\u5728\u8fd9\u4e2a\u4f18\u5316\u9879\u7684\u7ed3\u679c\u4e2d\u5c31\u53ef\u4ee5\u4e0d\u7528\u5199\u51fa\u8fd9\u4e2a\u5b57\u9762\u91cf\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u9762\u91cf$X$ \u7684\u503c\u90fd\u662f <code>0</code>\uff0c\u5219\u7ed3\u679c\u4e2d\u4f1a\u5305\u542b $\\overline{X}$\uff0c\u5982\u679c\u90fd\u662f <code>1</code>\uff0c\u5219\u7ed3\u679c\u4e2d\u4f1a\u5305\u542b $X$\u3002</p> <p>!!! note \"\"     === \"\u9898\u9762\"         \u5229\u7528\u5361\u8bfa\u56fe\u4f18\u5316$F(X,Y,Z) = \\sum m(0,1,2,4,6,7)$ \u7684\u7ed3\u679c\u3002     === \"\u7b54\u6848\"         \u753b\u51fa\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5bf9\u5e94\u7684\u5361\u8bfa\u56fe\uff1a         {width=300.png}           \u7136\u540e\u5212\u51fa\u5176\u4e2d\u7684\u6781\u5927\u6700\u5c0f\u9879\u4f18\u5316\u9879\uff1a   {width=300.png align=left}           \u5199\u51fa\u6765\u662f\uff1a           - \u7eff\uff1a$x=0,\\;y=0,\\;z=0/1$             - \u6240\u4ee5\u662f\uff1a$\\overline{X}\\,\\overline{Y}$\uff1b         - \u84dd\uff1a$x=0/1,\\;y=0/1,\\;z=0$             - \u6240\u4ee5\u662f\uff1a$\\overline{Z}$\uff1b         - \u7ea2\uff1a$x=1,\\;y=1,\\;z=0/1$             - \u6240\u4ee5\u662f\uff1a$XY$           \u7efc\u4e0a\u6240\u8ff0\uff0c\u4f18\u5316\u7ed3\u679c\u662f $F = \\overline{X}\\,\\overline{Y} + \\overline{Z} + XY$</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_23","title":"\u4e0d\u5b9a\u9879","text":"<p>!!! quote \"\u63a8\u8350\u9605\u8bfb\"     https://www.geeksforgeeks.org/dont-care-x-conditions-in-k-maps/</p> <p>\u4e0d\u5b9a\u9879(Don't Cares) \u6307\u7684\u662f\u9700\u8981\u5316\u7b80\u7684\u903b\u8f91\u51fd\u6570\u4e2d\uff0c\u6ca1\u6709\u7ed9\u51fa\u5b9a\u4e49\u7684\u51e0\u9879\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\uff1a</p> <ul> <li>\u8f93\u5165\u7ec4\u5408\u4e0d\u4f1a\u51fa\u73b0\uff1b</li> <li>\u8f93\u5165\u7ec4\u5408\u7684\u8f93\u51fa\u4e0d\u88ab\u4f7f\u7528\uff1b</li> </ul> <p>\u5bf9\u4e8e\u8fd9\u79cd\u9879\uff0c\u5728\u5361\u8bfa\u56fe\u4e2d\u7528 X \u6765\u8868\u793a\uff0c\u5728\u6700\u5c0f\u9879\u4e4b\u548c\u4e2d\u7528 $\\sum d(...)$ \u8868\u793a\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\u5b83\u4eec\u7684\u8f93\u51fa\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u9879\u6765\u65b9\u4fbf\u6211\u4eec\u7684\u4f18\u5316\u2014\u2014\u5f53\u6211\u4eec\u753b\u51fa\u6765\u7684\u6781\u5927\u77e9\u9635\u8d8a\u5927\uff0c\u6210\u672c\u5c31\u8d8a\u4f4e\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 BCD \u7801\u8868\u793a\u7684\u6570\u5b57\u5927\u4e8e\u7b49\u4e8e 5 \u65f6\u8fd4\u56de <code>1</code>\uff0c\u5219\u5b83\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u5f62\u5f0f\u6765\u4f18\u5316\uff1a</p> <p></p> <p>\u6839\u636e\u7ed3\u679c\uff0c\u5199\u51fa\u4f18\u5316\u540e\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a$F(W,X,Y,Z) = W + XY + XZ$\u3002</p> <p>!!! tip \"\u503c\u5f97\u601d\u8003\u7684\u4f8b\u9898\u2014\u2014\u7531\u5361\u8bfa\u56fe\u5f97\u5230\u4e58\u79ef\u7ed3\u679c\"     \u5c3d\u7ba1\u6211\u4eec\u4e0d\u505c\u5f3a\u8c03 \u4e0e \u548c \u6216 \u662f\u5bf9\u79f0\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u5f88\u591a\u64cd\u4f5c\u662f\u9274\u4e8e\u6211\u4eec\u5bf9 <code>1</code> \u7684\u504f\u7231\u624d\u4f1a\u987a\u624b\u7684\uff08\u4f60\u4f1a\u53d1\u73b0\uff0c\u628a\u4e58\u9664\u6362\u6210\u6211\u4eec\u5b8c\u5168\u4e0d\u719f\u6089\u7684\u7b26\u53f7\uff0c\u4f60\u751a\u81f3\u53ef\u80fd\u65e0\u4ece\u4e0b\u624b\uff09\u3002</p> <pre><code>\u6240\u4ee5\uff0c\u5728\u5361\u8bfa\u56fe\u7684\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u8981\u5229\u7528\u5361\u8bfa\u56fe\u5f97\u5230 $F$ \u4f18\u5316\u540e\u7684\u4e58\u79ef\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 $\\overline{F}$ \u4f18\u5316\u540e\u7684\u548c\u5f62\u5f0f\uff0c\u7136\u540e\u518d\u5bf9\u5176\u53d6\u53cd\u8fc7\uff0c\u5229\u7528\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\u6765\u5f97\u5230\u7ed3\u679c\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u53cd\u8f6c K-map \u4e2d\u6240\u6709\u7684 `0` \u548c `1`\uff0c\u7136\u540e\u7740\u773c\u4e8e SOM \u8fdb\u884c\u4f18\u5316\uff0c\u6700\u540e\u518d\u5bf9\u7ed3\u679c\u53d6\u53cd\uff0c\u7528\u5fb7\u00b7\u6469\u6839\u5b9a\u5f8b\u6765\u5f97\u5230\u7ed3\u679c\u3002\n\n!!! example \"eg\"\n    ![](img/26.png)\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_24","title":"\u8574\u542b\u9879\u3001\u4e3b\u8574\u542b\u9879\u4e0e\u57fa\u672c\u4e3b\u8574\u542b\u9879","text":"<p>\u8574\u542b\u9879(implicant) \u5206\u4e3a \u4e3b\u8574\u542b\u9879(prime implicant) \u548c \u57fa\u672c\u4e3b\u8574\u542b\u9879(essential prime implicant)\u3002 </p> <ul> <li>\u5728\u5361\u8bfa\u56fe\u4e2d\uff0c\u4e00\u4e2a\u8574\u542b\u9879\u5c31\u662f\u4efb\u610f\u4e00\u4e2a\u5305\u542b $2^n$ \u4e2a <code>1</code> \u7684\u5355\u5143\uff1b</li> <li>\u800c\u4e3b\u8574\u542b\u9879\u5219\u662f\u5728\u5361\u8bfa\u56fe\u4e2d\u7684 \u6781\u5927 \u8574\u542b\u9879\uff1b<ul> <li>\u5bf9\u4e8e\u5b58\u5728 Dont'cares \u7684 K-map\uff0c\u5982\u679c\u6211\u4eec\u5173\u6ce8\u7684\u662f <code>1</code>\uff0c\u90a3\u6211\u4eec\u79ef\u6781\u5730\u5c06\u4ed6\u4eec\u5f53\u4f5c <code>1</code> \u6765\u5904\u7406\uff0c\u53cd\u4e4b\u4ea6\u7136\uff1b</li> <li>\u6ce8\u610f\uff1a \u5355\u72ec\u7684 <code>X</code> \u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8574\u542b\u9879\uff1b</li> </ul> </li> <li>\u57fa\u672c\u4e3b\u8574\u542b\u9879\u662f\u5305\u542b \u53ea\u88ab\u5b83(\u57fa\u672c\u4e3b\u8574\u542b\u9879)\u8986\u76d6\u7684 <code>1</code> \u7684\u4e3b\u8574\u542b\u9879\uff1b</li> </ul> <p></p> <p>\u5982\u56fe\uff0c\u5de6\u4fa7\u7684\u4e24\u4e2a\u4e3b\u8574\u542b\u9879\u56e0\u4e3a\u5305\u62ec\u4e86 \u24f5 \u548c \u24f6 \u8fd9\u4e24\u4e2a\u552f\u4e00\u7684 <code>1</code>\uff0c\u6240\u4ee5\u662f\u57fa\u672c\u4e3b\u8574\u542b\u9879\uff1b</p> <p>\u800c\u53f3\u4fa7\u7684\u8574\u542b\u9879\u5219\u662f\u4e00\u4e2a\u5197\u4f59\u7684\u8574\u542b\u9879\uff1b</p> <p>Warning\uff1a \u5bf9\u4e8e\u4efb\u610f\u51fd\u6570\uff0c\u4e3b\u8574\u542b\u9879\u4e00\u5b9a\u5b58\u5728\uff0c\u4f46\u662f\u57fa\u672c\u4e3b\u8574\u542b\u9879\u4e0d\u4e00\u5b9a\u5b58\u5728\u3002</p> <p>!!! tip \"\ud83e\udd14\"     \u6b63\u56e0\u4e3a\u6709\u57fa\u672c\u4e3b\u8574\u542b\u9879\u7684\u5b58\u5728\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u51fd\u6570\uff0c\u4f18\u5316\u7684\u591a\u89e3\u7ed3\u679c\u603b\u6709\u4e00\u90e8\u5206\u662f\u4e0d\u53d8\u7684\uff08\u53ea\u4e0d\u8fc7\u6ca1\u6709\u57fa\u672c\u4e3b\u8574\u542b\u9879\u7684\u65f6\u5019\u8fd9\u90e8\u5206\u4e3a\u96f6\uff09\u3002</p> <p>!!! tip \"\u9ea6\u514b\u62c9\u594e\u56e0\u7b97\u6cd5\"     \u6709\u5f85\u7814\u7a76\uff01     \u94fe\u63a5\uff1ahttps://zh.wikipedia.org/wiki/%E5%A5%8E%E5%9B%A0-%E9%BA%A6%E5%85%8B%E6%8B%89%E6%96%AF%E5%9F%BA%E7%AE%97%E6%B3%95</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_25","title":"\u7ecf\u5178\u7ec4\u5408\u7535\u8def","text":"<p>!!! note \"\u5f15\u5165\"     \u5728\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u73b0\u6210\u7684\u7ec4\u5408\u7535\u8def\u80fd\u591f\u4f7f\u7528\uff0c\u6765\u65b9\u4fbf\u6211\u4eec\u8bbe\u8ba1\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_26","title":"\u4e09\u6001\u95e8","text":"<p>\u4e09\u6001\u7f13\u51b2\u5668(3-State Buffer)</p> <p>\u9664\u4e86\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a \u4f7f\u80fd\u7aef(enable) \u6765\u63a7\u5236\u8f93\u51fa\u3002</p> <p>\u6240\u8c13\u7684\u4e09\u6001\u6307\u7684\u662f\uff1a</p> <ul> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\uff0c\u4e14\u8f93\u5165\u4e3a <code>1</code> \u65f6\uff0c\u8f93\u51fa\u4e3a <code>1</code>\uff1b</li> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\uff0c\u4e14\u8f93\u5165\u4e3a <code>0</code> \u65f6\uff0c\u8f93\u51fa\u4e3a <code>0</code>\uff1b</li> <li>\u5f53\u4f7f\u80fd\u7aef\u4e3a <code>0</code>\uff0c\u8f93\u51fa\u4e3a <code>Hi-Z</code>/<code>Z</code>/<code>z</code>(\u6d6e\u52a8\uff0c\u9ad8\u963b\u6001)\uff1b</li> </ul> <p></p> <p>!!! note \"\u4f5c\u7528\"     \u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u6001\u95e8\u6765\u89e3\u51b3\u591a\u8def\u8f93\u51fa\u4e92\u8054\u7684\u95ee\u9898\u3002\u6b63\u5982\u5728 ICS \u7b14\u8bb0\u4e2d\u63d0\u5230\u7684\uff0c\u53ef\u4ee5\u8ba9\u591a\u4e2a\u8f93\u5165\u5728\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u88ab\u8f93\u51fa\u5230\u603b\u7ebf\u4e2d\u2014\u2014\u5b9e\u73b0\u7684\u624b\u6bb5\u5c31\u662f\u901a\u8fc7\u7535\u8def\u6765\u4f7f\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4f7f\u80fd\u7aef\u4e3a <code>1</code>\u3002</p> <pre><code>\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u4e2d\uff0c\u4e09\u6001\u95e8\u5b9e\u73b0\u603b\u7ebf\u7684\u76f8\u5173\u77e5\u8bc6\u5c06\u5728 **[\u7b2c\u516d\u7ae0](Chap06.md#\u4e09\u6001\u95e8\u5b9e\u73b0)** \u63d0\u5230\u3002\n</code></pre> <p>!!! tip \"\u788e\u788e\u5ff5\"</p> <pre><code>\u6240\u4ee5\u4ec0\u4e48\u662f\u300c\u9ad8\u963b\u6001\u300d\uff1f\u5b83\u8981\u5982\u4f55\u7406\u89e3\uff1f\u4ee5\u4e0b\u662f\u6211\u6839\u636e\u5b83\u7684\u5e94\u7528\u53cd\u63a8\u5f97\u5230\u7684\u7ed3\u8bba\uff1a\n\n\u9ad8\u963b\u6001\u540c\u5b83\u5b57\u9762\u610f\u601d\u76f8\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f53\u5b83\u6b64\u65f6\u662f\u65ad\u8def\uff0c\u800c\u9ad8\u963b\u6001\u91cd\u70b9\u8981\u4e0e\u4f4e\u7535\u5e73\u505a\u533a\u5206\uff1a\u5982\u679c\u73b0\u5728\u5b58\u5728\u4e00\u4e2a\u201c\u5bfc\u7ebf\u201d\uff0c\u5b83\u6709\u4e09\u4e2a\u7aef\uff0c\u5176\u4e2d\u6211\u4eec\u4eba\u4e3a\u5730\u8ba4\u4e3a\u5176\u4e2d\u4e24\u4e2a\u662f\u8f93\u5165\uff0c\u5206\u522b\u547d\u540d\u4e3a a \u548c b\uff0c\u53e6\u5916\u4e00\u4e2a\u8ba4\u4e3a\u662f\u8f93\u51fa\uff0c\u547d\u540d\u4e3a c\u3002\n\n\u6b64\u65f6\uff0c\u6211\u4eec\u662f\u4e0d\u5141\u8bb8 a \u548c b \u4e00\u4e2a\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e00\u4e2a\u4e3a\u4f4e\u7535\u5e73\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u4eba\u4e3a\u5b9a\u4e49\u7684\u8f93\u5165\u8f93\u51fa\u5e76\u4e0d\u5f71\u54cd\u7535\u6d41\u7684\u6d41\u52a8\u65b9\u5411\uff0c\u6240\u4ee5\u5f53 a \u4e3a `1`\uff0cb \u4e3a `0` \u65f6\uff0c\u7535\u6d41\u5f88\u53ef\u80fd\u4f1a\u53d8\u6210\u4ece a \u6d41\u5411 b\uff0c\u7535\u6e90\u53ef\u80fd\u76f4\u63a5\u63a5\u5730\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u7684\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6216\u95e8\u6765\u5b9e\u73b0\u8fd9\u4e2a\u903b\u8f91\u884c\u4e3a\uff08\u6362\u8a00\u4e4b\uff0c\u8fd9\u79cd\u201c\u4e09\u7aef\u201d\u7535\u8def\u662f\u76f8\u5f53\u5371\u9669\u7684\uff0c\u4e0d\u8fc7\u5f53\u6211\u4eec\u4eba\u4e3a\u5b9a\u4e49\u591a\u4e2a\u8f93\u51fa\u65f6\uff0c\u4e00\u822c\u4f5c\u4e3a\u63a5\u6536\u7aef\u7684\u7535\u8def\u90fd\u6709\u4e8c\u6781\u7ba1\u9632\u6b62\u9006\u6d41\uff0c\u6240\u4ee5\u5355\u8f93\u5165\u591a\u8f93\u51fa\u662f\u5f88\u5e38\u89c1\u7684\uff09\u3002\n\n\u4ece\u66f4\u62bd\u8c61\u5730\u89d2\u5ea6\u6765\u7406\u89e3\uff0c\u4e00\u6839\u5bfc\u7ebf\u6700\u591a\u627f\u8f7d\u4e00\u4efd\u4fe1\u606f\uff0c\u7136\u800c\u6709\u4e24\u4e2a\u8f93\u5165\u4ecb\u5165\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u6709 `0`/`1` \u4e24\u6001\uff0c\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u6211\u4eec\u90fd\u540c\u65f6\u62ff\u5230\u4e86\u6765\u81ea\u4e24\u4e2a\u8f93\u5165\u7684\u6570\u636e\uff0c\u800c\u5bf9\u4e8e\u53ea\u80fd\u627f\u8f7d\u4e00\u4efd\u4fe1\u606f\u7684\u5bfc\u7ebf\u6765\u8bf4\uff0c\u8fd9\u4e24\u4e2a\u4fe1\u606f\u51b2\u7a81\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981 `MUX` \u6765\u9009\u62e9\u6211\u4eec\u9700\u8981\u7684\u5230\u5e95\u662f\u54ea\u4e2a\u4fe1\u606f\uff0c\u7136\u540e\u518d\u7ed9\u5bfc\u7ebf\u3002\n\n\u800c\u4e09\u6001\u95e8\uff0c\u5728\u9ad8\u4f4e\u7535\u5e73\u5916\u5f15\u5165\u4e86\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u975e\u5e38\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u300c\u591a\u8f93\u5165\u300d\u5371\u9669\u7684\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e2a\u6570\u636e\u88ab\u8f93\u5165\u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u65ad\u5f00\uff0c\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u628a\u5f00\u5173\u65ad\u5f00\uff0c\u53ea\u8981\u6211\u4eec\u8ba9\u5bfc\u7ebf\u7684\u82e5\u5e72\u8f93\u5165\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u4e0d\u5728\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u80fd\u591f\u4f18\u96c5\u5730\u5b9e\u73b0\u591a\u8def\u8f93\u51fa\u4e92\u8054\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_27","title":"\u590d\u6742\u95e8","text":"<p>\u901a\u8fc7\u4e00\u4e9b\u57fa\u672c\u95e8\u7ec4\u5408\u51fa\u6765\u7684\u95e8\uff0c\u5b83\u4eec\u7684\u8868\u793a\u65b9\u6cd5\u5927\u81f4\u5982\u4e0b\uff1a</p> <p> </p>"},{"location":"ZJU_CS/DigitalDesign/Chap02/#_28","title":"\u7ecf\u5178\u95e8","text":"<p>\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0 $NAND$ \u95e8\u662f\u81ea\u7136\u642d\u5efa\u901f\u5ea6\u6700\u5feb\u7684\u95e8\u3002</p> <p>\u5e38\u89c1\u7684\u95e8\u7684\u5b9e\u9645\u5b9e\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/","title":"Chap 3 Combinational Logic Design","text":"<p>!!! info \"\u5f15\u8a00\"     \u6309\u7167\u529f\u80fd\uff0c\u903b\u8f91\u7535\u8def\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <pre><code>- **\u7ec4\u5408\u7535\u8def(Combinational Circuit)**\n    - \u62e5\u6709 m \u4e2a\u8f93\u5165\u548c n \u4e2a\u8f93\u51fa\uff0c\u5176\u4e2d\u5305\u542b\u4e86 $2^m$ \u79cd\u8f93\u5165\u7ec4\u5408\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684 n \u4e2a\u4e0d\u540c\u7684\u51fd\u6570\uff1b\n    - \u6700\u5173\u952e\u7684\u662f\uff0c\u5b83\u7684 **\u8f93\u51fa\u53ea\u4f9d\u8d56\u4e8e\u8fd9 m \u4e2a\u8f93\u5165\u7684\u7ec4\u5408**\uff08\u4e0d\u5305\u542b\u56de\u8def\uff09\uff1b\n- **\u65f6\u5e8f\u7535\u8def(Sequential Logic Cirtuit)**\n    - \u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0c\u65f6\u5e8f\u7535\u8def\u5177\u6709\u8bb0\u5fc6\u529f\u80fd\uff0c\u5373\u5b83\u7684\u8f93\u51fa\u53ef\u80fd\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u7ed3\u679c\uff1b\n</code></pre> <p>\u672c\u7ae0\u7740\u773c\u4e8e\u7ec4\u5408\u7535\u8def\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u76f8\u5173\u5185\u5bb9\u5c06\u5728 \u4e0b\u4e00\u7ae0 \u4ecb\u7ecd\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_1","title":"\u7ec4\u5408\u7535\u8def\u8bbe\u8ba1","text":"<p>!!! note \"\u8868\u793a\u903b\u8f91\u7684\u65b9\u6cd5\"     1. \u771f\u503c\u8868(Truth Table)\uff1b     2. \u5e03\u5c14\u51fd\u6570(Boolean Function)\uff1b     3. \u5361\u8bfa\u56fe(Karnaugh Maps)\uff1b     4. \u65f6\u5e8f\u56fe(Timing Diagram)\uff1b     5. \u903b\u8f91\u7535\u8def\u56fe(Logic Circuit)\uff1b</p> <pre><code>\u5176\u4e2d\uff0c\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5\u5728\u529f\u80fd\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u8868\u793a\u662f\u552f\u4e00\u7684\u3002\n</code></pre> <p>\u800c\u6211\u4eec\u7684\u8bbe\u8ba1\uff0c\u5c31\u662f\u5728\u6ee1\u8db3\u529f\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f18\u5316\u548c\u627e\u5230\u6700\u597d\u7684\u8bbe\u8ba1\u3002</p> <p>\u800c\u4e3b\u8981\u7684\u8bbe\u8ba1\u8fc7\u7a0b(Specification)\u5982\u4e0b\uff1a</p> <ol> <li>\u786e\u5b9a\u7cfb\u7edf\u7684\u884c\u4e3a\uff1b</li> <li>\u9610\u8ff0\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5e76\u7528\u771f\u503c\u8868\u6216\u903b\u8f91\u8868\u8fbe\u5f0f(Formulation)\u8868\u8fbe\u51fa\u6765\uff1b</li> <li>\u4f18\u5316\u903b\u8f91\u8868\u8fbe\u4ee5\u51cf\u5c11\u6210\u672c(\u6bd4\u5982\u4f7f\u7528\u5361\u8bfa\u56fe)\uff1b</li> <li>\u5c06\u4f18\u5316\u540e\u7684\u903b\u8f91\u8bbe\u8ba1\u5de5\u827a\u6620\u5c04\u5230\u786c\u4ef6\u5b9e\u73b0\u4e0a(Technology Mapping);</li> <li>\u9a8c\u8bc1\u6b63\u786e\u6027\uff08\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff09\uff1b</li> </ol> <pre><code>graph LR;\n\nA[\"\u5b9e\u9645\u95ee\u9898\"] ===&gt; B[\"\u771f\u503c\u8868\"]\n\nB ==&gt;|\"\u5316\u7b80\"| C[\"\u6700\u7b80\u529f\u80fd\"] ===&gt;|\"\u5de5\u827a\u6620\u5c04\"| D[\"\u7f51\u8868\"]\n\nB ==&gt;|\"\u53d8\u6362\"| E[\"\u5408\u9002\u7684\u8868\u8fbe\u5f0f\"] ===&gt;|\"\u5de5\u827a\u6620\u5c04\"| D\n</code></pre> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_2","title":"\u5206\u5c42\u8bbe\u8ba1","text":"<p>\u5206\u5c42\u8bbe\u8ba1\u5373\u5c06\u590d\u6742\u95ee\u9898\u6a21\u5757\u5316\u5206\u89e3\u4e3a\u82e5\u5e72\u5c42\u6b21\uff0c\u7136\u540e\u9010\u4e2a\u62bd\u8c61\u89e3\u51b3\u3002</p> <p>\u5176\u8bbe\u8ba1\u65b9\u6cd5\u5206\u4e3a \u81ea\u9876\u5411\u4e0b(Top-Down) \u548c \u81ea\u5e95\u5411\u4e0a(Bottom-Up)\u3002</p> <p>\u524d\u8005\u4ece\u9700\u6c42\u5f00\u59cb\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u89e3\u529f\u80fd\u8bbe\u8ba1\uff1b\u540e\u8005\u6839\u636e\u73b0\u6709\u7684\u5143\u4ef6\u53bb\u7ec4\u5408\u6210\u76ee\u6807\u529f\u80fd\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_3","title":"\u96c6\u6210\u7535\u8def","text":"<p>\u96c6\u6210\u7535\u8def(integrated circuits) \u53c8\u53eb \u82af\u7247(chip)\uff0c\u5206\u4e3a\u5982\u4e0b\u82e5\u5e72\u7b49\u7ea7\uff1a</p> <ul> <li>SSI(small-scale integrated) \u5185\u542b\u4e0d\u5230 10 \u4e2a gates\uff1b</li> <li>MSI(medium-scale integrated) \u5185\u542b 10 ~ 100 \u4e2a gates\uff1b</li> <li>LSI(large-scale integrated) \u5185\u542b \u6210\u767e\u4e0a\u5343 \u4e2a gates\uff1b</li> <li>VLSI(very large-scale integrated) \u5185\u542b \u6210\u5343\u4e0a\u4ebf \u4e2a gates\uff1b</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_4","title":"\u6280\u672f\u53c2\u6570","text":"<p>\u95e8\u7684\u5b9e\u73b0\u4e3b\u8981\u901a\u8fc7\u8fd9\u4e9b\u53c2\u6570\u7279\u6027\u6765\u63cf\u8ff0\uff1a</p> Name Description Fan-in \u4e00\u4e2a\u95e8\u53ef\u7528\u7684\u8f93\u5165 Fan-out \u4e00\u4e2a\u6805\u6781\u8f93\u51fa\u9a71\u52a8\u7684\u6807\u51c6\u8d1f\u8f7d\u6570\u91cf Logic Levels \u88ab\u8ba4\u4e3a\u662f\u9ad8\u4f4e\u7535\u5e73\u7684\u8f93\u5165\u8f93\u51fa\u7535\u538b\u8303\u56f4 Noise Margin \u5bf9\u5916\u754c\u566a\u58f0\u7684\u5bb9\u5fcd\u80fd\u529b(\u5177\u4f53\u6765\u8bf4\u662f\u4e0d\u4f1a\u5bfc\u81f4\u884c\u4e3a\u5f02\u53d8\u7684\u6700\u5927\u566a\u58f0\u538b\u503c) Cost for a gate \u7ee7\u627f\u7535\u8def\u7684\u95e8\u6210\u672c Propagation Delay \u4fe1\u53f7\u6539\u53d8\u540e\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u6240\u9700\u7684\u53d8\u5316\u65f6\u95f4 Power Dissipation \u7535\u6e90\u8f93\u51fa\u80fd\u8017\u548c\u95e8\u7684\u80fd\u8017"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_5","title":"\u6247\u5165\u6247\u51fa","text":"<p>\u6247\u5165\u63cf\u8ff0\u4e86\u4e00\u4e2a\u95e8\u80fd\u591f\u63a5\u53d7\u7684\u6700\u591a\u8f93\u5165\u91cf\uff0c\u5982\u4e00\u4e2a\u56db\u8f93\u5165\u4e0e\u975e\u95e8\u7684\u6247\u5165\u5c31\u662f 4\uff1b\u800c\u6247\u51fa\u63cf\u8ff0\u7684\u5219\u662f\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa(\u6805\u6781\u8f93\u51fa)\u5728\u4e0d\u964d\u4f4e\u5de5\u4f5c\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u8d1f\u8f7d\u591a\u5c11\u95e8\uff0c\u4f8b\u5982\u4e00\u4e2a\u975e\u95e8\u7684\u8f93\u51fa\u80fd\u591f\u540c\u65f6\u8d1f\u8f7d 4 \u4e2a\u975e\u95e8\u5e76\u4e14\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5219\u5176\u6247\u51fa\u4e3a 4\uff0c\u5176\u4e5f\u80fd\u901a\u8fc7\u6807\u51c6\u8d1f\u8f7d\u6765\u5b9a\u4e49\u3002</p> <p>!!! note \"\u6807\u51c6\u8d1f\u8f7d\"     \u6240\u8c13\u7684\u6807\u51c6\u8d1f\u8f7d\uff0c\u662f\u8861\u91cf\u201c\u8d1f\u8f7d\u201d\u7684\u4e00\u4e2a\u201c\u5355\u4f4d\u781d\u7801\u201d\u3002\u5176\u5927\u5c0f\u7b49\u4e8e\u4e00\u4e2a\u975e\u95e8(\u9006\u53d8\u5668)\u8d21\u732e\u7684\u8d1f\u8f7d\u538b\u529b\u3002</p> <p>\u90a3\u4e48\u8981\u5982\u4f55\u8bc4\u4f30\u8d1f\u8f7d\u5462\uff1f\u9996\u5148\u6211\u4eec\u5f15\u5165 \u8fc7\u6e21\u65f6\u95f4(transition time)\uff1a</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#transition-time","title":"\u8f6c\u6362\u65f6\u95f4 \uff08Transition Time\uff09","text":"<p>\u8f6c\u6362\u65f6\u95f4\u5206\u4e3a $\\mathrm{t_{LH}}$(rise time) \u548c $\\mathrm{t_{HL}}$(fall time) \u4e24\u4e2a\u90e8\u5206\u3002</p> <ul> <li>rise time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece $\\mathrm{V_{CC}}$ \u7684 10% \u5347\u9ad8\u5230 90% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> <li>fall time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece $\\mathrm{V_{CC}}$ \u7684 90% \u964d\u4f4e\u5230 10% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> </ul> <p>\u901a\u8fc7\u65f6\u5e8f\u56fe\u8868\u793a\u5c31\u662f\u8fd9\u6837\uff1a</p> <p></p> <p>\u968f\u7740\u8d1f\u8f7d\u589e\u52a0\uff0c\u8f6c\u6362\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\uff08\u7ed9\u7535\u5bb9\u5145\u7535\u7684\u65f6\u95f4\u589e\u52a0\uff09\uff0c\u800c\u6247\u51fa\u5b9a\u4e49\u4e2d\u63d0\u5230\u7684\u201c\u6700\u5927\u8d1f\u8f7d\u201d\uff0c\u5c31\u662f\u6307\u5b83\u7684\u8f6c\u6362\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5b83\u9884\u5b9a\u7684\u6700\u5927\u8f6c\u6362\u65f6\u95f4\u3002</p> <p></p> <p>\u4ece\u5de6\u5230\u53f3\u8868\u793a\u8d1f\u8f7d\u4e0d\u65ad\u589e\u52a0\u65f6\uff0crise time \u7684\u53d8\u5316\u8d8b\u52bf\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u7c7b\u4f3c\u7684\uff0c\u8d85\u51fa\u6247\u5165\u540e\uff0c\u95e8\u5bf9\u8f93\u5165\u7684\u53cd\u5e94\u5c31\u592a\u6162\u4e86\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#propagation-delay","title":"\u4f20\u64ad\u5ef6\u8fdf \uff08Propagation Delay\uff09","text":"<p>\u4f20\u64ad\u5ef6\u8fdf(propagation delay) \u8861\u91cf\u4e86\u95e8\u7684\u8f93\u5165\u53d8\u5316\u5bfc\u81f4\u8f93\u51fa\u53d8\u5316\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\u7531\u4e8e\u4ece\u4f4e\u7535\u5e73\u8f6c\u5316\u5230\u9ad8\u7535\u5e73\u548c\u9ad8\u7535\u5e73\u8f6c\u5316\u5230\u4f4e\u7535\u5e73\u6240\u9700\u8981\u7684\u65f6\u95f4\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4f20\u64ad\u5ef6\u8fdf\u540c\u6837\u6709\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u4f7f\u7528 $\\mathrm{t_{PHL}}$ \u548c $\\mathrm{t_{PLH}} \u6765\u8868\u793a$\u3002</p> <p>\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u4f20\u64ad\u5ef6\u8fdf\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u8f93\u5165\u548c\u8f93\u51fa\u7684\u53d8\u5316\u4e2d\u70b9\uff08\u5373\u53d8\u5316\u5230 $\\frac{1}{2}V_{CC}$ \u65f6\uff09\u7684\u65f6\u95f4\u5dee\uff0c\u901a\u8fc7\u65f6\u5e8f\u56fe\u8868\u793a\u5c31\u662f\u8fd9\u6837\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f15\u5165 $\\mathrm{ t_{pd} }$ \u6765\u7edf\u4e00\u8868\u793a $\\mathrm{t_{PHL}}$ \u548c $\\mathrm{t_{PLH}}$\u3002\u6570\u503c\u4e0a\uff0c$\\mathrm{ t_{pd} } = average(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})$ \u6216 $\\mathrm{ t_{pd} } = max(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})$\u3002</p> <p>!!! note \"\u601d\u8003\u9898\"     === \"\u9898\u9762\"         \u6839\u636e\u65f6\u5e8f\u56fe\uff0c\u5199\u51fa\u95e8\u7684\u4f20\u64ad\u5ef6\u8fdf\uff0c\u6b64\u5904 $\\mathrm{ t_{pd} } = average(\\mathrm{t_{PHL}}, \\mathrm{t_{PLH}})$\u3002</p> <pre><code>    ![](img/34.png)\n\n=== \"\u7b54\u6848\"\n    ![](img/35.png)\n</code></pre> <p>!!! question \"Transition Time vs. Propagation Delay\"     \u8f6c\u6362\u65f6\u95f4\u4e13\u6ce8\u4e8e\u8f93\u51fa\u7684\u53d8\u5316\uff0c\u800c\u4f20\u64ad\u5ef6\u8fdf\u5219\u5305\u542b\u4e86\u8f93\u5165\u7684\u53d8\u5316\u548c\u8f93\u51fa\u7684\u53d8\u5316\u6574\u4e2a\u8fc7\u7a0b\u3002</p> <pre><code>\u4ece\u65f6\u5e8f\u56fe\u4e0a\u7684\u8868\u793a\u6765\u770b\uff0c\u8f6c\u6362\u65f6\u95f4\u53ea\u9700\u8981\u8f93\u51fa\u7684\u65f6\u5e8f\u56fe\u5373\u53ef\u8868\u793a\uff1b\u4f46\u4f20\u64ad\u5ef6\u8fdf\u5219\u662f\u901a\u8fc7\u6bd4\u8f83\u8f93\u5165\u548c\u8f93\u51fa\u7684\u504f\u5dee\u6765\u8868\u793a\u7684\u3002\n\n![](img/36.png)\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_6","title":"\u5ef6\u8fdf\u6a21\u578b","text":"<p>\u4e3a\u4e86\u7814\u7a76\u4e3a\u4ec0\u4e48\u4f1a\u5b58\u5728\u95e8\u5ef6\u8fdf\uff0c\u523b\u753b\u95e8\u7684 \u56fa\u6709\u95e8\u5ef6\u8fdf(inherent gate delay)\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u5efa\u6a21\uff0c\u5e38\u89c1\u7684 \u5ef6\u8fdf\u6a21\u578b(delay model) \u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a</p> <ul> <li>\u4f20\u8f93\u5ef6\u8fdf(transport delay): \u8ba4\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5ef6\u8fdf\u662f\u4e00\u4e2a\u5b9a\u503c\u7684\uff1b</li> </ul> <p></p> <ul> <li>\u60ef\u6027\u5ef6\u8fdf(inertial delay): \u5f15\u5165\u4e86 \u62d2\u7edd\u65f6\u95f4(rejection time)\uff0c\u53ea\u6709\u5f53\u8f93\u5165\u8fbe\u5230\u4e00\u5b9a\u80fd\u91cf\u540e\uff0c\u624d\u4f1a\u51fa\u53d1\u6805\u6781\u8f93\u51fa\uff08\u5728\u8fd9\u79cd\u6a21\u578b\u4e0b\uff0c\u566a\u97f3\u7b49\u4f1a\u88ab\u8fc7\u6ee4\uff09\uff1b</li> </ul> <p></p> <p>\u5c06\u4e0d\u5b58\u5728\u5ef6\u8fdf\u7684\u6a21\u578b\u3001\u4f20\u8f93\u5ef6\u8fdf\u6a21\u578b\u548c\u60ef\u6027\u5ef6\u8fdf\u6a21\u578b\u505a\u6bd4\u8f83\u5730\u6765\u770b\uff0c\u5c31\u662f\u5982\u4e0b\u60c5\u51b5\uff1a</p> <p></p> <p>??? info ps     \u7531\u4e8e\u5b9e\u9645\u7535\u8def\u4e2d\u5b9e\u73b0\u5ef6\u8fdf\uff0c\u6570\u5b66\u4e0a\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e0e\u5b9e\u9645\u7535\u8def\u60c5\u51b5\u4f1a\u5b58\u5728\u4e0d\u540c\u2014\u2014\u5373\u5b58\u5728\u82e5\u5e72\u6570\u5b66\u4e0a\u65e0\u6cd5\u76f4\u63a5\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <pre><code>\u6240\u4ee5\u7814\u7a76\u5ef6\u8fdf\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_7","title":"\u5ef6\u8fdf\u8ba1\u7b97","text":"<p>\u8ba1\u7b97\u4e00\u4e2a\u7535\u8def\u7684\u5ef6\u8fdf\u65f6\uff0c\u6709\u4e24\u65b9\u9762\u9700\u8981\u8003\u8651\uff0c\u4e00\u65b9\u9762\u662f\u7535\u8def\u81ea\u8eab\u6240\u5bfc\u81f4\u7684\u4e00\u4e2a\u56fa\u5b9a\u5ef6\u8fdf\uff0c\u53e6\u5916\u4e00\u65b9\u9762\u5219\u662f\u7531\u4e8e\u4e0d\u540c\u7684\u8d1f\u8f7d\u5bfc\u81f4\u7684\u989d\u5916\u5ef6\u8fdf\u3002</p> <p></p> <p>!!!  \"\"     \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c0.07 \u4e3a\u56fa\u5b9a\u5ef6\u8fdf\uff0c0.021 \u4e3a\u4e00\u4e2a\u6807\u51c6\u8d1f\u8f7d\u5e26\u6765\u7684\u5ef6\u8fdf\u7cfb\u6570\uff0cSL(4.5 here) \u5219\u662f\u6807\u51c6\u5316\u7684\u8d1f\u8f7d\u91cf\u3002</p> <pre><code>\u800c\u5177\u4f53\u7684\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5728 Cell Library \u91cc\u5199\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_8","title":"\u5ef6\u8fdf\u5e26\u6765\u7684\u95ee\u9898","text":"<p>\u7531\u4e8e\u5b58\u5728\u5ef6\u8fdf\uff0c\u8bb8\u591a\u5728\u6570\u5b66\u610f\u4e49\u4e0a\u6ca1\u6709\u95ee\u9898\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u5728\u7535\u8def\u4e2d\u5c31\u5b58\u5728\u975e\u5e38\u5927\u7684\u95ee\u9898\u3002</p> <p>\u4f8b\u5982\uff0c\u4ece\u6570\u5b66\u89d2\u5ea6\u770b\uff0c$\\mathrm{Y=\\overline{A}A}$ \u7684\u503c\u6052\u4e3a <code>0</code>\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u7531\u4e8e\u5ef6\u8fdf\uff0c\u5176\u4eff\u771f\u6ce2\u5f62\u4e2d\u4f1a\u51fa\u73b0\u8fd9\u6837\u4e00\u4e2a \u6bdb\u523a(glitch)\uff0c\u800c\u8fd9\u5728\u5de5\u7a0b\u610f\u4e49\u4e0a\u6709\u5f88\u5927\u7684\u95ee\u9898\u3002</p> <p></p> <p>???+ note \"\u66f4\u590d\u6742\u7684 \ud83c\udf30\"     \u8ba9\u6211\u4eec\u5206\u6790\u4e0b\u9762\u8fd9\u4e2a\u4e8c\u8def\u9009\u62e9\u5668\uff0c\u5176\u529f\u80fd\u662f\u901a\u8fc7 S \u63a7\u5236\u8f93\u51fa\u8868\u8fbe\u7684\u662f A \u8fd8\u662f B\uff0c\u5728\u4f20\u8f93\u5ef6\u8fdf\u6a21\u578b\u4e0b\uff0c\u5176\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <pre><code>![](img/42.png)\n&gt; \u53ef\u4ee5\u53d1\u73b0\uff0cY \u4e2d\u51fa\u73b0\u4e86\u610f\u6599\u4e4b\u5916\u7684\u6bdb\u523a\u3002\n\n\u800c\u8fd9\u4e2d\u6bdb\u523a\u53ef\u4ee5\u7528\u6dfb\u52a0\u5197\u4f59\u9879\u6765\u89e3\u51b3\uff1a\n\n![](img/43.png)\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u8868\u8fbe\u5f0f\u6700\u7b80\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_9","title":"\u6b63\u903b\u8f91\u548c\u8d1f\u903b\u8f91","text":"<p>\u6b63\u903b\u8f91(positive logic) \u5c31\u662f <code>1</code> \u662f\u6709\u6548\u4fe1\u53f7\uff0c\u8d1f\u903b\u8f91(negative logic) \u5c31\u662f <code>0</code> \u662f\u6709\u6548\u4fe1\u53f7\u3002\u800c\u5728\u6b63\u903b\u8f91\u4e2d AND \u95e8\u7684\u4f5c\u7528\u5c31\u7b49\u6548\u4e8e\u8d1f\u903b\u8f91\u4e2d OR \u95e8\u7684\u4f5c\u7528\uff0c\u8fd9\u4e5f\u6b63\u662f\u524d\u51e0\u7ae0\u7684\u7b14\u8bb0\u4e2d\u63d0\u5230\u7684\u5bf9\u79f0\u3002</p> <p>\u800c\u6b63\u903b\u8f91\u7684\u7535\u8def\u7684\u7b26\u53f7\u4e00\u822c\u5c31\u662f\u6b63\u5e38\u7684\u903b\u8f91\u95e8\u7b26\u53f7\uff0c\u800c\u8d1f\u903b\u8f91\u7684\u903b\u8f91\u95e8\u7b26\u53f7\u5219\u53ef\u80fd\u6709\u5c0f\u4e09\u89d2\u6807\uff0c\u5373 \u6781\u6027\u6307\u793a\u5668(polarity indicator)\uff1a</p> <p></p> <p>\u5982\u56fe\uff0c\u5de6\u4fa7\u662f\u6b63\u903b\u8f91\u7535\u8def\u7684\u7b26\u53f7\uff0c\u53f3\u4fa7\u662f\u8d1f\u903b\u8f91\u7535\u8def\u7684\u7b26\u53f7\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_10","title":"\u5de5\u827a\u6620\u5c04","text":"<p>\u5de5\u827a\u6620\u5c04(technology mapping) \u662f\u6307\u5c06\u903b\u8f91\u56fe\u6216\u7f51\u8868\u8f6c\u5316\u4e3a\u53ef\u4ee5\u7528\u5de5\u827a\u5b9e\u73b0\u7684\u5fc3\u7684\u56fe\u6216\u7f51\u8868\u7684\u8fc7\u7a0b\u3002</p> <p>\u6709\u65f6\u6211\u4eec\u4f1a\u4f7f\u7528\u4e0e\u975e\u95e8\u548c\u975e\u95e8\u66ff\u6362\u4e0e\u95e8\u548c\u6216\u95e8(\u7535\u8def\u5c42\u9762\uff0c\u4e0e\u95e8\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u8fc7\u4e0e\u975e\u95e8\u5b9e\u73b0\u7684)\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\u6709\u4e00\u4e9b\u8fde\u7eed\u5bf9\u975e\u95e8\u53ef\u4ee5\u76f8\u4e92\u62b5\u6d88\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u60c5\u51b5\uff1a</p> <p></p> <p>\u84dd\u7eff\u8272\u5757\u4e2d\u5373\u4e3a\u88ab\u66ff\u6362\u540e\u7684\u5185\u5bb9\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u51fa\u73b0\u4e86\u82e5\u5e72\u53ef\u4ee5\u62b5\u6d88\u7684\u975e\u95e8\u3002</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6216\u975e\u95e8\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u60c5\u51b5\uff1a</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_11","title":"\u9a8c\u8bc1\u6b63\u786e\u6027","text":"<ul> <li>\u753b\u771f\u503c\u8868\u9a8c\u8bc1\uff08\u5373\u5b9e\u9a8c\u65f6\u7684\u4eff\u771f\uff09\u6216\u8005\u5e03\u5c14\u4ee3\u6570\u5f0f</li> <li>\u529f\u80fd\u5206\u6790<ul> <li>\u5b9a\u4e49\u5bf9\u4efb\u2f00\u4fe1\u53f7\u7684\u4f5c\u2f64\u4ee5\u53ca\u6574\u4e2a\u7535\u8def\u7684\u4f5c\u2f64</li> <li>\u753b\u65f6\u5e8f\u56fe</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_12","title":"\u7ec4\u5408\u903b\u8f91","text":""},{"location":"ZJU_CS/DigitalDesign/Chap03/#_13","title":"\u57fa\u672c\u903b\u8f91\u51fd\u6570","text":"<ul> <li>\u5e38\u91cf\u51fd\u6570(Value-Fixing)\uff1a$F=0\\;\\;or\\;\\;F=1$ | \u8f93\u51fa\u5b9a\u503c\uff1b</li> <li>\u4f20\u8f93\u51fd\u6570(Transferring)\uff1a$F=X$ | \u76f4\u63a5\u8f93\u51fa\u8f93\u5165\u503c\uff1b</li> <li>\u9006\u53d8\u51fd\u6570(Inverting)\uff1a$F=\\overline{X}$ | \u8f93\u51fa\u8f93\u5165\u7684\u76f8\u53cd\uff1b</li> <li>\u4f7f\u80fd\u51fd\u6570(Enabling)\uff1a$F=X\\cdot En \\;\\; or \\;\\; F = X + \\overline{En}$ | \u901a\u8fc7\u4f7f\u80fd\u63a7\u5236\u8f93\u51fa\u662f\u5426\u53ef\u53d8\uff0c\u5206\u4e3a\u4e24\u79cd\uff0c\u6bd4\u5982\u4e0e\u7684\u5f62\u5f0f\u4e2d\uff0c\u53ea\u6709 $En$ \u4e3a <code>1</code> \u65f6\uff0c$F$ \u8868\u73b0\u4e3a $X$ \u7684\u503c\uff1b\u53cd\u4e4b\u8f93\u51fa\u5fc5\u5b9a\u4e3a <code>0</code>\uff08\u6ce8\u610f\u533a\u5206\u5b83\u4e0e\u4e09\u6001\u95e8\u7684\u533a\u522b\uff0c\u9ad8\u963b\u6001or\u5b9a\u503c\uff09\uff1b</li> </ul> <p>!!! note \"\u77e5\u8bc6\u70b9\"     1. \u2f00\u4e2a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u79f0\u4e3a\u529f\u80fd\u5757.     2. SSI MSI LSI \u2f29\u4e2d\u2f24\u89c4\u6a21\u96c6\u6210\u7535\u8def     3. VLSI \u8d85\u2f24\u89c4\u6a21\u96c6\u6210\u7535\u8def</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_14","title":"\u57fa\u672c\u529f\u80fd\u5757","text":"<ul> <li>\u8bd1\u7801\u5668(Decoder)</li> <li> <p>\u7f16\u7801\u5668(Encoder)</p> </li> <li> <p>\uff08\u4e09\u7aef\uff09\u591a\u8def\u590d\u7528\u5668(Multiplexer) <code>MUX</code>\uff08\u7c7b\u4f3c\u4e8e\u65cb\u8f6c\u5f00\u5173\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7535\u8def\u56fe\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u5b9e\u9a8c\u8bfe\uff09</p> </li> <li>\uff08\u4e09\u7aef\uff09\u4fe1\u53f7\u5206\u914d\u5668(Demultiplexer) <code>DEMUX</code></li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_15","title":"\u8bd1\u7801\u5668","text":"<p>\u7a77\u4e3e\u53ef\u80fd\u6027\uff0c\u7a20\u5bc6 -&gt; \u7a20\u5bc6/\u7a00\u758f</p> <p>\u4e3a\u4e86\u8282\u7701\u95e8\u8f93\u5165\u6210\u672c\uff0c\u6211\u4eec\u5e38\u5e38\u4f7f\u7528 \u5206\u7ea7 (\u4ea6\u6216\u662f\u9012\u5f52) \u7684\u601d\u60f3\u6765\u6784\u9020\u591a\u8f93\u5165\u591a\u8bd1\u7801\u5668\u3002</p> <p>eg:</p> <p></p> <p>\u7531\u4e8e\u5e95\u5c42\u7684\u7535\u8def\u80fd\u591f\u76f4\u63a5\u5b9e\u73b0\u7684\u8fd0\u7b97\u5341\u5206\u5c40\u9650\uff0c\u6240\u4ee5\u9700\u8981\u7528\u8bd1\u7801\u5668\u6765\u5b9e\u73b0\u4e00\u4e9b\u57fa\u7840\u8fd0\u7b97\uff0c\u4f8b\u5982\u52a0\u6cd5\u3002</p> <p>\u4e00\u4f4d\u52a0\u6cd5\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bd1\u7801\u5668\u548c\u6216\u95e8\u5b9e\u73b0\uff0c\u6838\u5fc3\u5c31\u662f\u679a\u4e3e\u8f93\u5165\u7684\u5404\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u7528\u6216\u95e8\u62fe\u53d6 sum \u548c carry \u7684\u6700\u5c0f\u9879\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_16","title":"\u7f16\u7801\u5668","text":"<p>\u7a20\u5bc6/\u7a00\u758f -&gt; \u7a20\u5bc6</p> <p>\u5982\u4e0a\u5b9a\u4e49\u7684\u7f16\u7801\u5668\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5373\u4efb\u4f55\u65f6\u5019\u8f93\u5165\u53ea\u80fd\u6709\u4e00\u4e2a\u662f\u6d3b\u52a8\u7684\uff0c\u5373\u8f93\u5165\u662f one-hot \u7684\u3002</p> <p>!!! summary \"\u4f18\u5148\u7f16\u7801\u5668\"     === \u5b9a\u4e49     \u4f18\u5148\u7f16\u7801\u5668\u80fd\u591f\u5b9e\u73b0\u4f18\u5148\u7ea7\u51fd\u6570\uff0c\u5b83\u4e0d\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u800c\u662f\u603b\u662f\u5173\u6ce8\u6709\u6548\u8f93\u5165\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4e2a\u3002\u5373\u6bd4\u5982\u5f53\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4f4d\u662f <code>1</code> \u65f6\uff0c\u5176\u5b83\u6240\u6709\u4f18\u5148\u7ea7\u4e0d\u5982\u5b83\u7684\u4f4d\u7f6e\u7684\u503c\u90fd\u662f\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u5185\u5bb9\u4e86\u3002</p> <pre><code>=== \"\u4f8b\u5b50 \u4e2d\u65ad(interrupt)\u5224\u4f18\u5668\"\n\u4f18\u5148\u7f16\u7801\u5668\u7684\u4e00\u79cd\u5e94\u7528\u5c31\u662f\u4e2d\u65ad\u5224\u4f18\u5668\u3002\n\n![](img/48.png)\n&gt; \u5176\u4e2d $V$ \u8868\u793a\u8f93\u51fa\u662f\u5426\u6709\u6548\uff0c\u5728\u4e2d\u65ad\u5224\u4f18\u7cfb\u7edf\u4e2d\u5373\u8868\u793a\u662f\u5426\u6709\u4e2d\u65ad\u8bf7\u6c42\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_17","title":"\u591a\u8def\u590d\u7528\u5668","text":"<p>\u901a\u8fc7\u63a7\u5236\u7aef\u9009\u62e9\u8f93\u51fa\u7684\u662f\u82e5\u5e72\u8f93\u5165\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002</p> <p>\u901a\u8fc7\u4e09\u6001\u95e8\u6765\u5b9e\u73b0 <code>MUX</code> \u80fd\u591f\u964d\u4f4e\u95e8\u8f93\u5165\u4ee3\u4ef7\u3002</p> <p>???+ example \"eg\"          &gt; \u5b8c\u5168\u4f7f\u7528\u4e09\u6001\u95e8\u6765\u5b9e\u73b0\u56db\u8f93\u5165 <code>MUX</code>\uff0c\u95e8\u8f93\u5165\u5927\u5927\u51cf\u5c11\u3002</p> <p><code>MUX</code> \u8fd8\u53ef\u4ee5 \u5b9e\u73b0\u4efb\u610f\u7684\u903b\u8f91\u51fd\u6570\uff1a</p> <ul> <li>\u5c06\u63a7\u5236\u7aef\u5f53\u4f5c\u8f93\u5165\uff0c\u539f\u6765\u7684\u8f93\u5165\u5f53\u4f5c\u7ed3\u679c\uff1b</li> <li>\u5373\u53ef\u4ee5\u5c06\u4e00\u4e2a\u56db\u8f93\u5165 <code>MUX</code> \u5f53\u4f5c\u4e00\u4e2a\u4e8c\u8f93\u5165\u7684\u51fd\u6570\uff1b</li> </ul> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u539f\u6765\u7684\u63a7\u5236\u7aef\u5f53\u4f5c\u8f93\u5165\u7aef\uff0c\u5e76\u5728\u539f\u6765\u7684\u8f93\u5165\u7aef\u5199\u5165\u903b\u8f91\u51fd\u6570\u7684\u771f\u503c\u8868\uff0c\u4ee5\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u628a\u4e00\u90e8\u5206\u7684\u8f93\u5165\u5f53\u4f5c\u5e38\u91cf\u7aef\u6765\u7b80\u5316\u5143\u4ef6\uff08\u964d\u7ef4\uff09\uff1a</p> <p></p> <p>\u89c2\u5bdf\u5176\u6700\u5c0f\u9879\uff0c\u4f7f\u5176\u8f93\u51fa\u6240\u6709\u6700\u5c0f\u9879\u3002\u4f46\u662f\u5728\u964d\u7ef4\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u9700\u8981\u5168\u90fd\u662f C\uff0c\u5982\u679c\u5361\u8bfa\u56fe\u4e2d\u5b58\u5728\u53cc <code>1</code> \u6216\u8005\u53cc <code>0</code>\uff0c\u4e5f\u53ef\u4ee5\u4ecd\u7136\u4f7f\u7528\u5e38\u91cf\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_18","title":"\u4fe1\u53f7\u5206\u914d\u5668","text":"<p>\u7b80\u5199\u4e3a <code>DEMUX</code>\uff0c\u901a\u8fc7\u63a7\u5236\u7aef\u9009\u62e9\u8f93\u5165\u7ed9\u5230\u82e5\u5e72\u8f93\u51fa\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002</p> <p></p> <p>\u540e\u7eed \ud83d\udc49 \u53ef\u91cd\u7f16\u7a0b\u6280\u672f</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_19","title":"\u7b97\u672f\u903b\u8f91\u7535\u8def","text":"<p>\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u7684\u8ba1\u7b97\u4e3b\u8981\u5305\u62ec\u903b\u8f91\u8fd0\u7b97\u548c\u7b97\u672f\u8fd0\u7b97\uff0c\u524d\u8005\u7531\u4e8e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u57fa\u672c\u95e8\u5f88\u65b9\u4fbf\u5b9e\u73b0\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u8fc7\u591a\u8003\u8651\uff1b\u5728\u6b64\u4e3b\u8981\u4ecb\u7ecd\u7b97\u6570\u8fd0\u7b97\u3002\u5728\u8ba1\u7b97\u673a\u786c\u4ef6\u4e2d\uff0c\u627f\u62c5\u8ba1\u7b97\u5de5\u4f5c\u7684\u4e3b\u8981\u90e8\u4ef6\u4e3a <code>ALU</code>(Arithmetic Logical Unit)\u3002</p> <p>!!! info \"\u5f15\u5165\"     \u5728\u4e4b\u524d #\u8bd1\u7801\u5668 \u548c #\u591a\u8def\u590d\u7528\u5668 \u7684\u90e8\u5206\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e00\u4e9b\u5b9e\u73b0 1 bit \u52a0\u6cd5\u5668\u7684\u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u8be6\u7ec6\u770b\u770b\u52a0\u6cd5\u5668\u8fd9\u4e2a\u4e1c\u897f\u3002</p> <pre><code>\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u52a0\u6cd5\u5668\u6700\u5e95\u5c42\u7684\u5355\u5143\uff0c\u5373\u5b9e\u73b0 1 bit \u8fd0\u7b97\u7684 **\u534a\u52a0\u5668(half adder)** \u548c **\u5168\u52a0\u5668(full adder)**\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u5c06\u4ed6\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5b9e\u73b0 n bits \u7684\u52a0\u6cd5\u5668\uff0c\u5176\u4e2d\u4e3b\u8981\u4ecb\u7ecd **\u884c\u6ce2\u52a0\u6cd5\u5668(binary ripple carry adder)**\u3002\u6b64\u5916\uff0c\u57fa\u4e8e\u4e00\u4e9b\u7f16\u7801\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5b83\u6539\u88c5\u6210\u52a0\u51cf\u6cd5\u5668\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_20","title":"\u534a\u52a0\u5668 &amp; \u5168\u52a0\u5668","text":"<p>\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0c\u5176\u8f93\u51fa\u65e0\u7591\u6709\u5f53\u524d\u4f4d\u7684\u548c <code>S</code> \u548c\u8fdb\u4f4d <code>C</code>\uff0c\u800c\u8f93\u5165\u9664\u4e86\u4e24\u4e2a\u64cd\u4f5c\u6570 <code>X</code> \u548c <code>Y</code> \u4ee5\u5916\uff0c\u8fd8\u53ef\u80fd\u6709\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d <code>Z</code>(\u6216\u8005<code>C{n-1}</code>)\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u7b2c\u4e00\u4f4d\uff0c\u663e\u7136\u4e0d\u4f1a\u6709\u8fdb\u4f4d\uff0c\u6216\u8005\u8bf4 <code>Z=0</code>\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a <code>Z</code> \u53bb\u6389\uff0c\u5373\u8f93\u5165\u53ea\u6709 <code>X</code> \u548c <code>Y</code>\uff0c\u8fd9\u5c31\u662f \u534a\u52a0\u5668(half adder)\uff1b\u663e\u7136\uff0c\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u8f93\u5165\u4e2d\u6709\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d <code>Z</code>\uff0c\u5219\u79f0\u4e3a \u5168\u52a0\u5668(full adder)\u3002</p> <p>!!! note \"\"</p> <pre><code>=== \"\u534a\u52a0\u5668\"\n    !!! note \"\"\n\n        === \"\u903b\u8f91\u8868\u8fbe\u5f0f\"\n\n            $$\n            S=\\overline{X}Y+X\\overline{Y}=X\\oplus Y \\\\\n            C = XY\n            $$\n\n        === \"\u771f\u503c\u8868\"\n\n            &lt;figure markdown&gt;\n                ![](img/72.png)\n            &lt;/figure&gt;\n\n        === \"\u7535\u8def\u56fe\"\n\n            &lt;figure markdown&gt;\n                ![](img/73.png)\n            &lt;/figure&gt;\n\n=== \"\u5168\u52a0\u5668\"\n    !!! note \"\"\n\n        === \"\u903b\u8f91\u8868\u8fbe\u5f0f\"\n\n            $$\n            S=\\overline{X}\\,\\overline{Y}Z + \\overline{X}Y\\overline{Z} + X\\overline{Y}\\,\\overline{Z} + XYZ \\\\\n            C = XY + XZ + YZ\n            $$\n\n        === \"\u771f\u503c\u8868\"\n\n            &lt;figure markdown&gt;\n                ![](img/74.png)\n            &lt;/figure&gt;\n\n        === \"\u5361\u8bfa\u56fe\"\n\n            &lt;figure markdown&gt;\n                ![](img/75.png)\n            &lt;/figure&gt;\n\n        === \"\u903b\u8f91\u8868\u8fbe\u5f0f with XOR\"\n\n            $$\n            S = (X\\oplus Y)\\oplus Z \\\\\n            C = XY + Z(X\\oplus Y)\n            $$\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_21","title":"\u884c\u6ce2\u52a0\u6cd5\u5668","text":"<p>\u884c\u6ce2\u52a0\u6cd5\u5668\u662f\u6734\u7d20\u7684 n bits \u52a0\u6cd5\u5668\u5b9e\u73b0\u3002\u5176\u6838\u5fc3\u601d\u60f3\u4e5f\u5c31\u662f\u6a21\u62df\u6211\u4eec\u4f7f\u7528\u201c\u7ad6\u5f0f\u201d\u6765\u8ba1\u7b97\u52a0\u6cd5\uff0c\u4ece\u4f4e\u4f4d\u5f00\u59cb\u9010\u4f4d\u8ba1\u7b97\uff0c\u5e76\u5c06\u8fdb\u4f4d\u7ed9\u5230\u4e0b\u4e00\u4f4d\u4f5c\u4e3a\u8f93\u5165\u3002</p> <p>\u5b9e\u9645\u4e0a\u65e0\u8bba\u662f\u53ea\u7528\u534a\u52a0\u5668\u6216\u662f\u53ea\u7528\u5168\u52a0\u5668\uff0c\u90fd\u53ef\u4ee5\u5b9e\u73b0\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u4f46\u662f\u6b8a\u9014\u540c\u5f52\uff0c\u65e0\u975e\u662f\u901a\u8fc7\u5916\u90e8\u5668\u4ef6\u6765\u8fdb\u884c\u4e92\u76f8\u8f6c\u5316\u800c\u5df2\u3002\u5982\u679c\u53ea\u4f7f\u7528\u5168\u52a0\u5668\u6765\u5b9e\u73b0\uff0c\u5219\u4ee5 4 bits \u884c\u6ce2\u52a0\u6cd5\u5668\u4e3a\u4f8b\uff0c\u5176\u5927\u81f4\u903b\u8f91\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0c\u5728\u52a0\u6cd5\u5668\u4e2d\uff0c$C_0$ \u5fc5\u7136\u662f <code>0</code>\u3002</p> <p>\u52a0\u51cf\u6cd5\u5668\uff0c\u6216\u8005\u8bf4\u52a0\u6cd5\u5668\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5728 <code>ALU</code> \u4e2d\u662f\u6700\u5f71\u54cd\u6548\u7387\u7684\u90e8\u5206\uff0c\u800c\u4e14\u5982\u679c\u4f7f\u7528\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u968f\u7740\u4f4d\u6570\u589e\u52a0\u6548\u7387\u4f1a\u8d8a\u6765\u8d8a\u6162\u3002</p> <p>\u6240\u4ee5\u4f1a\u6709\u7c7b\u4f3c\u4e8e\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4e4b\u7c7b\u7684\u4e1c\u897f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u66f4\u591a\u7684\u5185\u5bb9\u53ef\u4ee5\u770b xyx \u7684\u8ba1\u7ec4\u7b14\u8bb0\u3002\uff08\u6570\u903b\u4e2d\u6700\u591a\u4e86\u89e3\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u5373\u53ef\u3002\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_22","title":"\u4e8c\u8fdb\u5236\u51cf\u6cd5","text":"<p>\u9996\u5148\uff0c\u5728\u5f00\u59cb\u4e8c\u8fdb\u5236\u51cf\u6cd5\u7684\u4ecb\u7ecd\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u4e86\u89e3 \u8865\u7801(2's complement)\u3002</p> <p>\u7ed3\u5408\u8865\u7801\uff0c\u6211\u4eec\u518d\u6765\u89c2\u5bdf\u884c\u6ce2\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u51cf\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\uff0c\u5e76\u5bf9\u6574\u4e2a\u6570\u52a0\u4e00\uff0c\u518d\u76f4\u63a5\u5c06\u5b83\u4eec\u76f8\u52a0\u5373\u53ef\uff0c\u5373\u5c06\u51cf\u6cd5\u8f6c\u5316\u4e3a\u8865\u7801\u4e0b\u7684\u52a0\u6cd5\u3002</p> <p></p> <p>\u5176\u4e2d\u52a0\u4e00\u8fd9\u4e00\u6b65\u6070\u597d\u53ef\u4ee5\u901a\u8fc7\u5728\u52a0\u6cd5\u5668\u4e2d\u5fc5\u5b9a\u4e3a <code>0</code> \u7684 $C_0$ \u6765\u5b9e\u73b0\uff0c\u7136\u540e\u6211\u4eec\u518d\u5728\u8f93\u5165\u4e2d\u6dfb\u52a0 <code>MUX</code>\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u51cf\u6cd5\u5668\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap03/#_23","title":"\u6709\u7b26\u53f7\u6570\u7684\u8868\u793a\u4e0e\u8ba1\u7b97","text":"<ul> <li>\u6ce8\u610flab8\u4e2d\u51cf\u6cd5\u64cd\u4f5c\u6570\u4e0e\u8fdb\u4f4d\u540e\u6709\u4e2aXOR\u95e8\uff01</li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap04/","title":"Chap 4 Sequential Circuits","text":"<p>4.6\u4e0d\u5728\u8bfe\u7a0b\u5927\u7eb2\u4e0a</p> <p>\u4e0a\u4e00\u7ae0\u8bb2\u7684\u662f\u7ec4\u5408\u7535\u8def\uff0c\u867d\u7136\u7ec4\u5408\u7535\u8def\u80fd\u591f\u5b9e\u73b0\u8bf8\u591a\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u4f9d\u7136\u5b58\u5728\u4e00\u4e9b\u7684\u95ee\u9898\uff1a</p> <ol> <li>\u5bf9\u4e8e\u590d\u6742\u7684\u903b\u8f91\uff0c\u62bd\u8c61\u5c42\u7ea7\u591a\uff0c\u5bfc\u81f4\u786c\u4ef6\u5c42\u9762\u5f00\u9500\u5927\u3001\u8017\u65f6\u957f\uff0c\u4e00\u65b9\u9762\u63d0\u9ad8\u6210\u672c\uff0c\u4e00\u65b9\u9762\u964d\u4f4e\u6548\u7387\uff1b</li> <li>\u7ec4\u5408\u7535\u8def\u6ca1\u6cd5\u5b9e\u73b0\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u6240\u6709\u7684\u529f\u80fd\u6a21\u5757\u5bf9\u4e8e\u7279\u5b9a\u7684\u8f93\u5165\u7ed9\u51fa\u76f8\u540c\u7684\u8f93\u51fa\uff1b</li> </ol> <p>\u800c\u65f6\u5e8f\u7535\u8def\u5219\u62e5\u6709\u5b58\u50a8\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u6765\u8bf4\uff0c\u8f93\u51fa\u9664\u4e86\u4e0e\u8f93\u5165\u6709\u5173\uff08\u751a\u81f3\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\uff09\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u81ea\u8eab \u72b6\u6001(state) \u6709\u5173\u3002</p> <p>\u65f6\u5e8f\u7535\u8def\u4e3b\u8981\u5206\u4e3a\u4e24\u7c7b\uff08\u4e3b\u8981\u5206\u7c7b\u4f9d\u636e\u662f\u8f93\u5165\u4fe1\u53f7\u7684\u65f6\u95f4\u548c\u5185\u90e8\u72b6\u6001\u6539\u53d8\u7684\u65f6\u95f4\uff09\uff1a\u540c\u6b65\u65f6\u5e8f\u7535\u8def(synchronous sequential circuit) \u548c \u5f02\u6b65\u65f6\u5e8f\u7535\u8def(asynchronous sequential circuit)\u3002</p> <p>!!! note \"\u5b9a\u4e49\"     The behavior of a synchronous sequential circuit can be defined from the knowledge of its signals at discrete instants of time. The behavior of an asynchronous sequential circuit depends upon the inputs at any instant of time and the order in continuous time in which the inputs change.</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5f02\u6b65\u7535\u8def\u7684\u8bbe\u8ba1\u76f8\u5bf9\u56f0\u96be\uff08\u884c\u4e3a\u4e0e\u95e8\u7684\u4f20\u64ad\u5ef6\u8fdf\u548c\u8f93\u5165\u4fe1\u53f7\u53d8\u5316\u7684\u65f6\u95f4\u5e8f\u5217\u5bc6\u5207\u76f8\u5173\uff09\uff0c\u4f46\u4ecd\u7136\u5341\u5206\u5fc5\u8981\uff0c\u6bd4\u5982\u89e6\u53d1\u5668\u5c31\u662f\u4ee5\u4e00\u90e8\u9501\u5b58\u5668\u4e3a\u6a21\u5757\u8bbe\u8ba1\u7684\uff1b\u800c\u540c\u6b65\u7535\u8def\u7684\u4f7f\u7528\u66f4\u52a0\u5e7f\u6cdb\uff0c\u901a\u5e38\u8fd9\u4e9b\u201c\u79bb\u6563\u7684\u65f6\u523b\u201d\u90fd\u662f\u7531 \u65f6\u949f\u53d1\u751f\u5668(clock generator) \u8fd9\u79cd\u65f6\u5e8f\u5668\u4ef6\u4ea7\u751f\u5468\u671f\u6027\u7684 \u65f6\u949f\u8109\u51b2(clock pulse) \u5e8f\u5217\u6765\u5b9e\u73b0\u7684\uff08\u8fd9\u79cd\u7535\u8def\u4e00\u822c\u88ab\u79f0\u4e3a \u949f\u63a7\u65f6\u5e8f\u7535\u8def(clocked sequential circuit)\uff0c\u7531\u4e8e\u8bbe\u8ba1\u76f8\u5bf9\u5bb9\u6613\uff0c\u9c81\u68d2\u6027\u5f3a\uff0c\u6240\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\uff09\u3002</p> <p></p> <p>!!! summary \"\u7f13\u51b2\"</p> <pre><code>\u7f13\u51b2\u5668(buffer) \u4e00\u822c\u901a\u8fc7\u4e24\u4e2a**\u975e\u95e8**\u4e32\u8054\uff0c\u5e76\u5c06\u8f93\u5165\u8fde\u901a\u8f93\u51fa\u5b9e\u73b0\uff0c\u8fd9\u6837\u80fd\u591f\u5b9e\u73b0\u4fe1\u606f\u7684\u5b58\u50a8\uff0c\u7136\u800c\u65e0\u6cd5\u4fee\u6539\u3002\u800c\u9501\u5b58\u5668\u5c31\u662f\u5728\u7f13\u51b2\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u975e\u95e8\u66ff\u6362\u4e3a\u6216\u975e\u95e8\u6216\u4e0e\u975e\u95e8\u5b9e\u73b0\u7684\u3002\n\n![](img/79.png)\n&gt; \u5176\u4e2d\uff0c\u4ece\u7ed9\u5b9a\u8f93\u5165\u5230\u66f4\u65b0\u8f93\u51fa\u6709\u4e00\u4e2a $t_G$ \u7684\u5ef6\u65f6\u3002\n\n![20231224165211](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/20231224165211.png)\n</code></pre> <p>!!! info \"\u5f15\u5165\"</p> <pre><code>\u663e\u7136\uff0c\u6839\u636e\u4e0a\u9762\u7684\u6982\u8ff0\uff0c\u65f6\u5e8f\u7535\u8def\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u4fe1\u606f\u5b58\u50a8\u5143\u4ef6\u3002\u5f53\u8f93\u5165\u4fe1\u53f7\u4e0d\u53d1\u751f\u53d8\u5316\u65f6\uff08\u91cd\u70b9\u662f\u53d8\u5316\uff0c\u5373\u8f93\u5165\u548c\u5b58\u50a8\u4fe1\u606f\u672a\u5fc5\u5b58\u5728\u5bf9\u5e94\u5173\u7cfb\uff09\u5b58\u50a8\u5143\u4ef6\u5c31\u80fd\u591f\u4fdd\u6301\u5176\u5185\u90e8\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002\n\n\u5b58\u50a8\u5143\u4ef6\u4e3b\u8981\u7531 **\u9501\u5b58\u5668(latch)** \u548c **\u89e6\u53d1\u5668(flip-flop)** \u4e24\u79cd\uff0c\u5176\u4e2d\u524d\u8005\u662f\u540e\u8005\u7684\u57fa\u7840\uff0c\u540e\u8005\u7531\u524d\u8005\u6784\u6210\uff0c \u6216\u8005\u8bf4\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u4f7f\u7528\u540e\u8005\u3002\n\n![20231224170129](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/20231224170129.png)\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_1","title":"\u9501\u5b58\u5668","text":""},{"location":"ZJU_CS/DigitalDesign/Chap04/#sr-sr","title":"SR &amp; S'R' \u9501\u5b58\u5668","text":"<p>SR \u9501\u5b58\u5668\u548c S'R' \u9501\u5b58\u5668\u7684\u57fa\u672c\u539f\u7406\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u524d\u8005\u7528\u7684\u662f\u6216\u975e\u95e8\uff0c\u540e\u8005\u7528\u7684\u662f\u4e0e\u975e\u95e8\u3002</p> <p>SR \u9501\u5b58\u5668\u548c S'R' \u9501\u5b58\u5668\u7684\u8f93\u5165\u90fd\u662f S(Set) \u548c R(Reset) \u4e24\u4e2a\u90e8\u5206\uff0c\u8f93\u51fa\u90fd\u662f Q \u548c Q' \u4e24\u4e2a\u90e8\u5206\u3002</p> <p>!!! note \"SR &amp; S'R' \u9501\u5b58\u5668\"      \u540d\u79f0\u4e0a \u7684\u5171\u540c\u70b9\u662f\uff0c\u5f53 S \u4e3a <code>1</code> \u65f6\uff0cQ \u90fd\u4f1a\u662f <code>1</code>\uff1b\u5bf9\u4e8e R \u548c Q' \u4e5f\u662f\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0cS'R'\u9501\u5b58\u5668\u8f93\u5165\u7684\u5e76\u4e0d\u662f\u8fd9\u91cc\u6240\u8bf4\u7684 S\uff0c\u800c\u662f\u5c06 S' \u4f5c\u4e3a\u8f93\u5165\u3002</p> <p>!!! note \"\"</p> <pre><code>=== \"SR \u9501\u5b58\u5668\"\n    &lt;figure markdown&gt;\n        ![](img/80.png)\n    &lt;/figure&gt;\n=== \"S'R' \u9501\u5b58\u5668\"\n    &lt;figure markdown&gt;\n        ![](img/81.png)\n    &lt;/figure&gt;\n</code></pre> <p>\u4e00\u4e2a\u8bb0\u5fc6\u65b9\u6cd5\u662f\uff0cSR \u7684\u95e8\u5143\u4ef6\u5bf9 <code>1</code> \u654f\u611f\uff0c\u6240\u4ee5\u662f \u6216\u975e\u95e8 \u7684\u5b9e\u73b0\uff1b\u800c S'R' \u7684\u95e8\u5143\u4ef6\u5bf9 <code>0</code> \u654f\u611f\uff0c\u6240\u4ee5\u662f \u4e0e\u975e\u95e8 \u7684\u5b9e\u73b0\u3002\u800c\u901a\u8fc7 \u300c\u5f53 S \u4e3a <code>1</code> \u65f6\uff0cQ \u90fd\u4f1a\u662f <code>1</code>\u300d\u53ef\u4ee5\u5f97\u5230 S\u3001R \u4e0e Q\u3001Q' \u7684\u4f4d\u7f6e\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u7684\u5b58\u50a8\u5143\u4ef6\u5e76\u4e0d\u662f\u5355\u7eaf\u7684 SR/S'R' Latches\uff0c\u6240\u4ee5\u5b83\u4eec\u5f53\u7136\u662f\u5b58\u5728\u95ee\u9898\u7684\u3002\u7531\u4e8e\u7535\u8def\u5b58\u5728\u5ef6\u65f6\uff0c\u6240\u4ee5 S \u548c R \u7684\u8f93\u5165\u5f88\u96be\u540c\u65f6\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u4e00\u4e2a\u63a7\u5236\u7aef\uff0c\u5f53\u786e\u4fdd\u4e24\u4e2a\u8f93\u5165\u90fd\u5230\u4f4d\u7684\u65f6\u5019\u518d\u4f7f\u80fd\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\uff0c\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668(SR Latch with Control Input)\uff08S'R'\u7565\uff09\uff1a</p> <p></p> <p>\u6ce8\u610f\uff01SR \u9501\u5b58\u5668\u901a\u8fc7 \u6216\u975e\u95e8 \u5b9e\u73b0\uff0c\u4f46\u5e26\u8f93\u5165\u63a7\u5236\u7684 SR \u9501\u5b58\u5668\u5219\u901a\u8fc7 \u4e0e\u975e\u95e8 \u5b9e\u73b0\uff01</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#d","title":"D \u9501\u5b58\u5668","text":"<p>D \u9501\u5b58\u5668\u5b9e\u9645\u4e0a\u662f\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668\u7684\u6539\u8fdb\u3002\u5176\u4e2d\u6211\u4eec\u5173\u6ce8\u5230\uff0c\u867d\u7136 S \u548c R \u8d77\u4f5c\u7528\u7684\u6709\u4e09\u79cd\u72b6\u6001</p> <p>\u6211\u4eec\u5173\u6ce8\u5230\uff0c\u5373\u4f7f\u662f\u5e26\u63a7\u5236\u8f93\u5165\u7684 SR \u9501\u5b58\u5668\uff0c\u4e5f\u5b58\u5728\u4e00\u4e2a\u300cundefined\u300d\u72b6\u6001\uff0c\u800c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u51fa\u73b0\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\uff0c\u80fd\u4e0d\u80fd\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u7531\u4e8e\u53ef\u4ee5\u901a\u8fc7 C \u6765\u63a7\u5236\u662f\u5426\u4fdd\u6301\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f3a\u5236\u8981\u6c42 $S = \\overline R$\uff0c\u4e8e\u662f\u5c31\u907f\u514d\u4e86 undefined \u60c5\u51b5\u7684\u51fa\u73b0\uff0c\u8fd9\u5c31\u662f D \u9501\u5b58\u5668\u3002</p> <p></p> <p>\u53ea\u6709\u5f53 C \u4e3a <code>1</code> \u65f6\uff0cD \u9501\u5b58\u5668\u624d\u80fd\u5199\u5165\u6570\u636e\uff1b\u800c\u5f53 C \u4e3a <code>0</code> \u65f6\uff0cD \u9501\u5b58\u5668\u7684\u6570\u636e\u5c31\u4e0d\u4f1a\u53d8\u5316\u3002</p> <p>!!! warning \"\u900f\u660e\u7684\u5371\u5bb3\uff1a\u7a7a\u7ffb\"</p> <pre><code>**\u900f\u660e** \u662f\u6307\u5728\u65f6\u949f\u8109\u51b2\u4e3a`1`\u65f6\uff0c\u8f93\u5165\u4fe1\u53f7\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u5c06\u6539\u53d8\u9501\u5b58\u5668\u72b6\u6001\u3002\n\n\u5f53\u7136\uff0cD \u9501\u5b58\u5668\u4e5f\u5b58\u5728\u95ee\u9898\u3002\u5982\u679c\u6211\u95e8\u5c06 $\\overline Q$ \u63a5\u5230 $D$ \u4e0a\uff0c\u5c31\u4f1a\u53d1\u73b0 D \u9501\u5b58\u5668\u5c06\u4e0d\u505c\u7684\u53d8\u5316\u5176\u4e2d\u7684\u6570\u636e\uff0c\u51fa\u73b0 **\u7a7a\u7ffb**\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a C \u7f6e `0` \u65f6 Q \u7684\u8f93\u51fa\u7a76\u7adf\u662f\u4ec0\u4e48\uff0c\u800c\u8fd9\u662f\u975e\u5e38\u5371\u9669\u7684\u3002 \u8fd9\u4e2a\u72b6\u6001\u53d6\u51b3\u4e8e C \u4e3a`1`\u7684\u65f6\u95f4\n\n\u5f53\u65f6\u949f\u8109\u51b2\u4e00\u76f4\u4e3a\u903b\u8f91\u7535\u5e73`1`\u7684\u65f6\u5019\uff0c\u5982\u679c\u9501\u5b58\u5668\u7684\u8f93\u5165\u4fe1\u53f7\u53d1\u751f\u53d8\u5316\uff0c\u9501\u5b58\u5668\u5c06\u54cd\u5e94\u8fd9\u79cd\u53d8\u5316\u8fdb\u5165**\u65b0\u7684\u72b6\u6001**\uff0c\u800c\u4e0d\u662f\u4fdd\u6301 **\u539f\u6765\u7684\u72b6\u6001**\n\n\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a D \u9501\u5b58\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u76f4\u63a5\u66b4\u9732\u51fa\u6765\u3001\u540c\u65f6\u5141\u8bb8\u53d8\u5316\u7684\uff08\u4e0d\u662f\u540c\u65f6\u53d8\u5316\uff0c\u662f\u6307\u5728 Input \u53ef\u4ee5\u53d8\u7684\u65f6\u5019 Output \u4e5f\u80fd\u53d8\uff09\uff0c\u5373 **\u900f\u660e(transparent)** \u7684\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u91cc\uff0c\u540c\u65f6\u5b58\u5728 **\u53ef\u4ee5\u4e92\u76f8\u5f71\u54cd** \u7684\u4e24\u4e2a\u4e1c\u897f\u3002\u8fd9\u4e5f\u662f\u89e6\u53d1\u5668\u6240\u89e3\u51b3\u7684\u95ee\u9898\u3002\n</code></pre> <p>!!!Question     \u7531\u4e8e\u8fd9\u79cd\u900f\u660e\u6027\uff0cD \u9501\u5b58\u5668\u4e5f\u88ab\u79f0\u4e3a \u900f\u660e\u9501\u5b58\u5668(transparent latch)\uff0c\u800c SR \u9501\u5b58\u5668\u5219\u88ab\u79f0\u4e3a \u975e\u900f\u660e\u9501\u5b58\u5668(opaque latch)\u3002</p> <p>~~&gt;\u6ce8\u610f\uff0c\u662f\u6570\u636e\u8f93\u5165\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u5c06\u6539\u53d8\u9501\u5b58\u5668\u72b6\u6001\uff0cSR\u9501\u5b58\u5668\u8981\u662f\u53d8\u6210\u4e8600\uff0c\u5c31\u662f\u9501\u4f4f\u4e86\u800c\u4e0d\u662f\u6539\u53d8\uff0c\u56e0\u6b64\u4ed6\u4e0d\u662f\u900f\u660e\u7684~~</p> <p>\u9501\u5b58\u5668\u90fd\u662f\u900f\u660e\u7684\uff01\u53ea\u4e0d\u8fc7 SR \u9501\u5b58\u5668\u7684\u900f\u660e\u6027\u662f\u7531\u4e8e\u5b83\u7684\u8f93\u5165\u662f\u5f02\u6216\u7684\uff0c\u6240\u4ee5\u5f53\u8f93\u5165\u4e3a <code>0</code> \u65f6\uff0c\u8f93\u51fa\u4e0d\u53d8\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u662f\u4e0d\u900f\u660e\u7684\u3002</p> <p>\u7531\u4e8e\u8fd9\u79cd\u4e0d\u53ef\u9760\u64cd\u4f5c\uff0c\u56e0\u6b64\u6240\u6709\u7531\u5355\u4e00\u65f6\u949f\u4fe1\u53f7\u89e6\u53d1\u7684\u9501\u5b58\u5668\uff0c\u5176\u8f93\u51fa\u7aef\u5747\u4e0d\u80fd\u76f4\u63a5\u6216\u8005\u7ecf\u7531\u7ec4\u5408\u903b\u8f91\u8fde\u63a5\u5230\u81ea\u8eab\u6216\u8005\u5176\u4ed6\u9501\u5b58\u5668\u7684\u8f93\u5165\u7aef</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_2","title":"\u89e6\u53d1\u5668","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u7531\u300c\u900f\u660e\u300d\u5f15\u53d1\u7684\u95ee\u9898\uff0c\u800c\u91c7\u7528\u89e6\u53d1\u5668\u7684\u8bbe\u8ba1\u3002\u901a\u8fc7\u7ec4\u5408\u4e24\u4e2a\u9501\u5b58\u5668\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ol> <li>\u5728\u6709\u8109\u51b2\uff08\u9ad8\u7535\u5e73\uff09\u65f6\uff0c\u4fee\u6539\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fdd\u6301\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff1b\u5728\u6ca1\u6709\u8109\u51b2\uff08\u4f4e\u7535\u5e73\uff09\u65f6\u5019\u4fdd\u6301\u7b2c\u4e00\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u4fee\u6539\u7b2c\u4e8c\u4e2a\u9501\u5b58\u5668\u7684\u503c\uff0c\u66f4\u65b0\u89e6\u53d1\u5668\u7684\u72b6\u6001\uff0c\u5373 \u4e3b\u4ece\u5f0f(master-slave)\u89e6\u53d1\u5668\uff1b</li> <li>\u4ec5\u5728\u65f6\u949f\u7684\u8fb9\u7f18\u89e6\u53d1\uff0c\u5373\u5728\u7279\u5b9a\u65f6\u523b\u4ec5\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\uff0c\u5373 \u8fb9\u6cbf\u89e6\u53d1\u5f0f(edge-triggered)\u89e6\u53d1\u5668\uff1b</li> </ol> <p>\u8fb9\u6cbf\u89e6\u53d1\u5f0f D \u89e6\u53d1\u5668\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u89e6\u53d1\u5668\u3002</p> <p>\u6784\u9020\u89e6\u53d1\u5668\u7684\u4e00\u79cd\u5e38\u7528\u65b9\u6cd5\u662f\u5982\u56fe 4-9 \u6240\u793a\u7684\u90a3\u6837\u5c06\u4e24\u4e2a\u9501\u5b58\u5668\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u6837\u7684\u89e6\u53d1\u5668\u901a\u5e38\u79f0\u4e3a\u4e3b\u4ece\u5f0f(master-slave)\u89e6\u53d1\u5668\u3002\u5de6\u4fa7\u7684\u9501\u5b58\u5668\u79f0\u4e3a\u4e3b\u9501\u5b58\u5668\uff0c\u5b83\u5728\u65f6\u949f\u4e3a\u9ad8\u65f6\u636e\u8f93\u4eba\u6539\u53d8\u5b83\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u968f\u540e\u5728\u65f6\u949f\u53d8\u4e3a\u4f4e\u7535\u5e73\u65f6\u88ab\u4f20\u9001\u5230\u53f3\u4fa7\u7684\u4ece\u9501\u5b58\u5668\u3002\u6839\u636e\u6784\u5efa\u4e3b\u4ece\u5f0f\u89e6\u53d1\u5668\u6240\u4f7f\u7528\u7684\u9501\u5b58\u5668\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u89e6\u53d1\u5668\u6709\u4e24\u79cd\u65b9\u5f0f\u54cd\u5e94\u65f6\u949f\u7684\u53d8\u5316\uff1a</p> <p>\u8109\u51b2\u89e6\u53d1\uff1a 1)\u5f53\u51fa\u73b0\u65f6\u949f\u8109\u51b2\u65f6\uff0c\u8f93\u5165\u4fe1\u53f7\u63a7\u5236\u89e6\u53d1\u5668\u7684\u72b6\u6001\uff0c 2)\u5f53\u6ca1\u6709\u51fa\u73b0\u65f6\u949f\u8109\u51b2\u65f6\uff0c\u89e6\u53d1\u5668\u7684\u72b6\u6001\u624d\u4f1a\u53d1\u751f\u6539\u53d8</p> <p>\u7528SR \u9501\u5b58\u5668\u6784\u6210\u7684\u4e3b\u4ece\u5f0f\u89e6\u53d1\u5668\u662f\u8109\u51b2\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\uff0c\u56e0\u4e3a\u4e3b\u9501\u5b58\u5668\u7684\u8f93\u5165S\u6216R\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5728\u65f6\u949f\u8109\u51b2\u51fa\u73b0\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u90fd\u4f1a\u6539\u53d8\u4e3b\u9501\u5b58\u5668\u7684\u8f93\u51fa\u503c\u3002\u56e0\u6b64\uff0c\u4e3b\u4ece\u5f0f SR\u89e6\u53d1\u5668\u5728\u6574\u4e2a\u65f6\u949f\u8109\u51b2\u4e3a\u9ad8\u7535\u5e73\u7684\u671f\u95f4\u90fd\u4f9d\u8d56\u4e8e\u5b83\u7684\u8f93\u5165\u503c</p> <p>\u8fb9\u6cbf\u89e6\u53d1\uff1a \u4e0e\u6b64\u4e0d\u540c\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff0c\u5219\u662f\u6784\u9020\u89e6\u53d1\u5668\u4f7f\u5f97\u53ea\u6709\u5728\u65f6\u949f\u75310\u53d8\u4e3a1\u6216\u8005\u75311\u53d8\u4e3a0\u65f6\u89e6\u53d1\u5668\u624d\u88ab\u89e6\u53d1\uff0c\u5176\u4ed6\u6240\u6709\u65f6\u95f4(\u5305\u62ec\u65f6\u949f\u8109\u51b2\u7ef4\u6301\u4e3a 1)\uff0c\u89e6\u53d1\u5668\u90fd\u5904\u4e8e\u65e0\u6548\u72b6\u6001\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#sr","title":"SR \u4e3b\u4ece\u89e6\u53d1\u5668","text":"<p>\u867d\u7136\u5b83\u53eb FF\uff0c\u4f46\u5b83\u5e76\u4e0d\u7b26\u5408 FF \u7684\u7279\u5f81\uff0c\u7136\u800c\u5206\u7c7b\u4e0a\u53c8\u5c5e\u4e8e pulse-triggered FF\u3002</p> <p>SR \u89e6\u53d1\u5668\u77e5\u6240\u4ee5\u662f\u6240\u8c13\u7684 pulse-triggered \u7684\uff0c\u662f\u56e0\u4e3a\u5728 S \u548c R \u8f93\u5165\u90fd\u4e3a <code>0</code> \u65f6\uff0c\u5982\u679c\u51fa\u73b0\u566a\u97f3\uff0c\u5c31\u4f1a\u5bfc\u81f4 Slave \u5199\u5165\u5f02\u5e38\u6570\u636e\u3002</p> <p>\u4f46\u662f\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f SR \u81ea\u8eab\u6709\u4e24\u4e2a\u4fdd\u6301\u6001\u5bfc\u81f4\u7684\u5f0a\u7aef\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5c31\u4e0d\u5e94\u8be5\u6709\u8f93\u5165\u4e3a S \u548c R \u90fd\u4e3a <code>0</code> \u7684\u60c5\u51b5\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_3","title":"\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668","text":"<p>!!!     \u4e66\u4e0a\u8bf4\u8fd9\u662f\u4e00\u79cd\u4e3b\u4ece\u4e3b\u4ece\u5f0f\u89e6\u53d1\u5668\uff0c\u5176\u4e2d\u4e3b\u9501\u5b58\u5668\u662f\u4e00\u4e2aD\u9501\u5b58\u5668\uff0c\u4ece\u9501\u5b58\u5668\u662f\u4e00\u4e2aSR\u9501\u5b58\u5668\u6216\u8005\u4e00\u4e2aD\u9501\u5b58\u5668</p> <pre><code>\u56e0\u4e3a\u4e3b\u9501\u5b58\u5668\u662f\u4e00\u4e2aD \u9501\u5b58\u5668\uff0c\u6240\u4ee5\u89e6\u53d1\u5668\u8868\u73b0\u51fa\u8fb9\u6cbf\u89e6\u53d1\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u8109\u51b2\u89e6\u53d1\u884c\u4e3a\u3002\n</code></pre> <p>\u4e0a\u9762\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u8fb9\u6cbf\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\u4e3b\u8981\u5bf9\u8109\u51b2\u7684 \u4e0a\u5347\u6cbf \u6216 \u4e0b\u964d\u6cbf \u654f\u611f\u3002</p> <p>\u4e0b\u56fe\u4e3a\u6b63\u8fb9\u6cbf\u89e6\u53d1 D \u89e6\u53d1\u5668\u7684\u5927\u81f4\u539f\u7406\u56fe\u3002</p> <p></p> <p>\u5f53\u65f6\u949f\u7b49\u4e8e<code>0</code>\u65f6\uff0c\u4e3b\u9501\u5b58\u5668\u6253\u5f00\u5e76\u900f\u660e\uff0c\u8f93\u51fa\u4e0e\u8f93\u4ebaD\u4fdd\u6301\u4e00\u81f4\uff0c\u4ece\u9501\u5b58\u5668\u5173\u95ed\u89e6\u53d1\u5668\u7684\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002\u5f53\u6b63\u8fb9\u6cbf\u51fa\u73b0\uff0c\u5373\u65f6\u949f\u8f93\u5165\u53d8\u4e3a<code>1</code>\u65f6\uff0c\u4e3b\u9501\u5b58\u5668\u5173\u95ed\uff0c\u72b6\u6001\u5c06\u88ab\u9501\u5b9a\uff0c\u4ece\u9501\u5b58\u5668\u6253\u5f00\uff0c\u5e76\u590d\u5236\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001\u3002\u6240\u590d\u5236\u7684\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001\u662f\u5728\u8109\u51b2\u4e0a\u5347\u6cbf\u8fd9\u4e00\u77ac\u95f4\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u8fd9\u79cd\u884c\u4e3a\u770b\u8d77\u6765\u662f\u4e00\u79cd\u8fb9\u6cbf\u89e6\u53d1\u884c\u4e3a\u3002</p> <p>\u5f53\u65f6\u949f\u7b49\u4e8e<code>1</code>\u65f6\uff0c\u4e3b\u9501\u5b58\u5668\u5173\u95ed\u4e0d\u518d\u53d8\u5316\uff0c\u4ece\u800c\u4e3b\u9501\u5b58\u5668\u7684\u72b6\u6001\u548c\u4ece\u9501\u5b58\u5668\u7684\u72b6\u6001\u90fd\u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002\u6700\u540e\uff0c\u65f6\u949f\u8f93\u5165\u7531<code>1</code>\u53d8\u4e3a`0.\u4e3b\u9501\u5b58\u5668\u6253\u5f00\uff0c\u8f93\u51fa\u4fe1\u53f7\u8ddf\u968fD\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002  \u4f46\u662f\uff0c\u5728\u65f6\u949f\u75311\u8df3\u53d8\u4e3a0\u65f6\uff0c\u4ece\u9501\u5b58\u5668\u5173\u95ed\uff0c\u968f\u540e\u4e3b\u9501\u5b58\u5668\u53d1\u751f\u7684\u53d8\u5316\u624d\u4f1a\u5230\u8fbe\u4ece\u9501\u5b58\u5668\u3002\u56e0\u6b64\uff0c\u4ece\u9501\u5b58\u5668\u6240\u5b58\u50a8\u7684\u503c\u5728\u8fd9\u6837\u7684\u8df3\u53d8\u4e2d\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0cD \u89e6\u53d1\u5668\u6ca1\u6709\u300c\u4fdd\u6301\u300d\u6001\u3002\u5982\u679c\u8981\u4f7f D \u89e6\u53d1\u5668\u4fdd\u6301\uff0c\u53ef\u4ee5\u4f7f\u65f6\u949f\u8109\u51b2\u5931\u6548\u6216\u901a\u8fc7 <code>MUX</code> \u5c06\u8f93\u51fa\u63a5\u5230\u8f93\u5165\u5b9e\u73b0\u3002\u5176\u4e2d\u524d\u8005\u4e0d\u592a\u5e38\u7528\uff0c\u56e0\u4e3a\u53d7\u95e8\u63a7\u7684\u65f6\u949f\u8109\u51b2\u8fdb\u5165\u89e6\u53d1\u5668\u65f6\u6709\u5ef6\u8fdf\uff0c\u5373 \u65f6\u949f\u504f\u79fb(clock skew)</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_4","title":"\u6807\u51c6\u56fe\u5f62\u7b26\u53f7","text":"<p>\u5e26\u5706\u5708\u8868\u793a\u8d1f\u903b\u8f91\u3002</p> <p>!!!Question     \u4e3b\u4ece\u7684D\u548c\u8fb9\u6cbf\u7684D\u7684\u533a\u522b \u5bf9\u4e8e\u8109\u51b2\u89e6\u53d1\u5f0f\u89e6\u53d1\u5668\uff0c\u5728\u5176\u8f93\u51fa\u7aef\u7684\u524d\u9762\u6709\u4e00\u4e2a\u76f4\u89d2\u7b26\u53f7\uff0c\u79f0\u4e4b\u4e3a\u5ef6\u65f6\u8f93\u51fa\u6307\u793a\u5668(postponedoutput indicator)\uff0c\u8fd9\u4e2a\u7b26\u53f7\u8868\u793a\u8f93\u51fa\u4fe1\u53f7\u5728\u8109\u51b2\u7684\u7ed3\u5c3e\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u5728\u8f93\u4eba\u7aefC\u52a0\u4e00\u4e2a\u5c0f\u5706\u5708\uff0c\u53ef\u4ee5\u8868\u793a\u4e3b\u4ece\u5f0f\u89e6\u53d1\u5668\u662f\u8d1f\u8109\u51b2(\u8109\u51b2\u4e3a 0\uff0c\u65f6\u949f\u503c\u4e3a1\u65f6\u65e0\u6548)\u89e6\u53d1\u7684\u3002</p> <p>\u5b57\u6bcd C\u524d\u9762\u7684\u7bad\u5934\u72b6\u7b26\u53f7\u8868\u793aC\u662f\u4e00\u4e2a\u52a8\u6001\u8f93\u5165 (dynamic input)\uff0c\u8be5\u89e6\u53d1\u5668\u662f\u8fb9\u6cbf\u89e6\u53d1\u7684\uff0c\u8fd9\u4e2a \u52a8\u6001\u6307\u793a(dynamicindicator) \u7b26\u53f7\u8868\u793a\u89e6\u53d1\u5668\u54cd\u5e94\u8f93\u5165\u65f6\u949f\u8109\u51b2\u7684\u8fb9\u6cbf\u8df3\u53d8\u3002</p> <p>\u5728\u77e9\u5f62\u5757\u5916\u9762\u9760\u8fd1\u52a8\u6001\u6307\u793a\u7b26\u7684\u5c0f\u5706\u5708\u8868\u793a\u7535\u8def\u5728\u65f6\u949f\u8d1f\u8fb9\u6cbf\u89e6\u53d1\uff0c\u6ca1\u6709\u5706\u5708\u8868\u793a\u7535\u8def\u5728\u65f6\u949f\u7684\u6b63\u8fb9\u6cbf\u89e6\u53d1</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_5","title":"\u76f4\u63a5\u8f93\u5165","text":"<p>\u8fd9\u4e9b\u76f4\u63a5\u8f93\u5165\u5f80\u5f80\u662f\u5f02\u6b65\u7684\uff0c\u4e00\u822c\u7528\u6765\u5f02\u6b65\u7f6e\u4f4d\uff08\u76f4\u63a5\u7f6e\u4f4d\u6216\u9884\u7f6e\uff09\u6216\u5f02\u6b65\u590d\u4f4d\uff08\u76f4\u63a5\u590d\u4f4d\u6216\u6e05\u96f6\uff09\u3002</p> <p>\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u6765\u8bf4\uff0c\u300c\u590d\u4f4d\u300d\u6216\u300c\u7f6e\u4f4d\u300d\u8fd9\u79cd\u8f93\u5165\u5e38\u5e38\u4f5c\u4e3a\u521d\u59cb\u5316\uff0c\u5373\u786e\u5b9a\u5404\u4e2a\u89e6\u53d1\u5668\u7684\u300c\u521d\u59cb\u72b6\u6001\u300d\u3002</p> <p>\u5f02\u6b65\uff1a\u72ec\u7acb\u4e8e\u65f6\u949f\u63a7\u5236</p> <p></p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_6","title":"\u65f6\u5e8f\u7535\u8def\u5206\u6790","text":"<p>\u4e3a\u4e86\u5206\u6790\u65f6\u5e8f\u7535\u8def\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5de5\u5177\u6765\u8868\u793a\u65f6\u5e8f\u7535\u8def\u7684\u4e00\u4e9b\u7279\u5f81\u4e0e\u903b\u8f91\u3002 \u89c2\u5bdf\u65f6\u5e8f\u7535\u8def\u548c\u7ec4\u5408\u7535\u8def\u7684\u533a\u522b\uff0c\u53d1\u73b0\u6700\u6838\u5fc3\u7684\u5c31\u662f\u903b\u8f91\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u300c\u72b6\u6001\u300d\u53c2\u4e0e\u8fd0\u7b97\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u5404\u4e2a\u7ec4\u5408\u7535\u8def\u5206\u6790\u4e2d\u91c7\u7528\u7684\u8868\u793a\u65b9\u6cd5\u4e2d\uff0c\u6dfb\u52a0\u8868\u793a\u300c\u72b6\u6001\u300d\u7684\u4fe1\u606f\u3002</p> <p>\u8f93\u51fa\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001\u90fd\u662f\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\u7684\u51fd\u6570</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u5c06\u300c\u72b6\u6001\u300d\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u8f93\u5165\uff0c\u4f5c\u4e3a\u589e\u91cf\u6dfb\u52a0\u5230\u8868\u8fbe\u65b9\u5f0f\u4e2d\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u8868\u8ff0\u4f1a\u663e\u5f97\u5f88\u91cd\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u5bfb\u627e\u4e00\u79cd\u66f4\u597d\u7684\u529e\u6cd5\u6765\u8868\u8fbe\u65f6\u5e8f\u7535\u8def\u4e2d\u7684\u903b\u8f91\uff0c\u8fd9\u5c31\u662f\u300c\u72b6\u6001\u56fe\u300d\u3002</p> <p>!!! Note \"\"     \u5982\u679c\u4e00\u4e2a\u903b\u8f91\u7535\u8def\u5305\u542b\u8fd9\u6837\u7684\u89e6\u53d1\u5668\uff0c\u8fd9\u4e9b\u89e6\u53d1\u5668\u7684\u65f6\u949f\u8f93\u5165\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u88ab\u4e00\u4e2a\u65f6\u949f\u4fe1\u53f7\u6240\u9a71\u52a8\uff0c\u540c\u65f6\u5728\u7535\u8def\u6b63\u5e38\u5de5\u4f5c\u65f6\u4e0d\u4f7f\u7528\u76f4\u63a5\u7f6e\u4f4d\u548c\u76f4\u63a5\u590d\u4f4d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u79f0\u8fd9\u6837\u7684\u7535\u8def\u4e3a\u540c\u6b65\u65f6\u5e8f\u7535\u8def\u3002\u5176\u4e2d\u7684\u89e6\u53d1\u5668\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\uff0c\u903b\u8f91\u7535\u8def\u4e2d\u53ef\u4ee5\u5305\u62ec\u4e5f\u53ef\u4ee5\u4e0d\u5305\u62ec\u7ec4\u5408\u903b\u8f91\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_7","title":"\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b","text":"<p>\u89e6\u53d1\u5668\u7684\u8f93\u5165\u65b9\u7a0b(flip-flop input equation) \u4e3b\u8981\u662f\u4e3a\u5176\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u6570\u8868\u8fbe\u65b9\u5f0f\u3002\u5b83\u7684\u4e3b\u8981\u60f3\u6cd5\u662f\uff1a1.\u8868\u8fbe\u6bcf\u4e00\u4e2a\u89e6\u53d1\u5668\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b2.\u8868\u8fbe\u6bcf\u4e00\u4e2a\u76f4\u63a5\u8f93\u51fa\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u3002\u5176\u4e2d\uff0c\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u7b26\u53f7\u8868\u793a\u4e86\u5176\u7c7b\u578b\uff08\u5373\u7b26\u53f7\uff09\u4e0e\u8f93\u51fa\uff08\u5373\u4e0b\u6807\uff09\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u7535\u8def\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u89e6\u53d1\u5668 $D_A$ \u548c $D_B$\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ec4\u5408\u903b\u8f91\u8f93\u51fa $Y$\uff0c\u56e0\u800c\u53ef\u4ee5\u6839\u636e\u7535\u8def\u7684\u7279\u5f81\uff0c\u5f97\u5230\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5f0f\u5b50\uff1a</p> <p>$$ \\begin{aligned}     D_A &amp; = AX + BX \\     D_B &amp; = \\overline{A}X \\     Y   &amp; = (A + B)\\overline{X} \\end{aligned} $$</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_8","title":"\u72b6\u6001\u8868","text":"<p>\u5f53\u7136\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u903b\u8f91\u6709\u65f6\u5019\u4e5f\u53ef\u4ee5\u901a\u8fc7\u72b6\u6001\u8868\u6765\u63cf\u8ff0\uff0c\u53ea\u4e0d\u8fc7\u4e0e\u7ec4\u5408\u7535\u8def\u7684 \u771f\u503c\u8868 \u4e0d\u540c\uff0c\u72b6\u6001\u8868(state table) \u6709\u56db\u680f\uff1a\u5f53\u524d\u72b6\u6001(present state)\u3001\u8f93\u5165(input)\u3001\u4e0b\u4e00\u72b6\u6001(next state)\u3001\u8f93\u51fa(output)\u3002\u5176\u542b\u4e49\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u901a\u8fc7\u7535\u8def\u56fe\u5f97\u5230\u72b6\u6001\u8868\uff0c\u9700\u8981\u9996\u5148\u5f97\u5230\u300c\u5f53\u524d\u72b6\u6001\u300d\u5411\u300c\u4e0b\u4e00\u72b6\u6001\u300d\u8f6c\u79fb\u7684\u65b9\u7a0b\uff0c\u5373\u5bf9\u4e8e\u67d0\u4e2a\u65f6\u523b $t$ \u7684\u89e6\u53d1\u5668 $A$ \u7684\u8f93\u51fa $A(t)$\uff0c\u9700\u8981\u5f97\u5230\u5b83\u4e0b\u4e00\u523b\u7684\u72b6\u6001 $A(t+1) = f(A(t), ...)$\u3002</p> <p>\u540c\u6837\u4ee5\u8fd9\u4e2a\u7535\u8def\u4e3a \ud83c\udf30\uff1a</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u5bf9 $D_A$ \u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a$A(t+1) = D_A = A(t)X + B(t)X$\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a $A(t+1) = D_A = AX+BX$\u3002\u7c7b\u4f3c\u5730\u4e5f\u80fd\u5f97\u5230 $B$ \u7684\u8f6c\u79fb\u65b9\u7a0b\u3002</p> <p>\u4e8e\u662f\uff0c\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5b83\u7684\u72b6\u6001\u8868\uff1a</p> Present State<code>AB</code> Input<code>X</code> Next State<code>AB</code> Output<code>Y</code> <code>00</code> <code>0</code> <code>00</code> <code>0</code> <code>00</code> <code>1</code> <code>01</code> <code>0</code> <code>01</code> <code>0</code> <code>00</code> <code>1</code> <code>01</code> <code>1</code> <code>11</code> <code>0</code> <code>10</code> <code>0</code> <code>00</code> <code>1</code> <code>10</code> <code>1</code> <code>10</code> <code>0</code> <code>11</code> <code>0</code> <code>00</code> <code>1</code> <code>11</code> <code>1</code> <code>10</code> <code>0</code> <p>!!! note \"Mealy model circuit &amp; Moore model circuit\"     \u5982\u679c\u8f93\u51fa\u65e2\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u4e5f\u4f9d\u8d56\u4e8e\u8f93\u5165\u7684\u65f6\u5e8f\u7535\u8def\uff0c\u5219\u79f0\u4e3a \u7c73\u52d2\u578b\u7535\u8def(Mealy model circuit)\uff1b\u800c\u5982\u679c\u8f93\u51fa\u53ea\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u5219\u79f0\u4e3a \u6469\u5c14\u578b\u7535\u8def(Moore model circuit)\u3002</p> <pre><code>\u5728 **[\u72b6\u6001\u56fe](#\u72b6\u6001\u56fe)** \u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u518d\u4e00\u6b21\u9047\u5230\u8fd9\u4e24\u4e2a\u4eba\u540d\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_9","title":"\u72b6\u6001\u56fe","text":"<p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u72b6\u6001\u8868\u6bd4\u8f83\u6e05\u6670\u7684\u8868\u8fbe\u4e86\u4e0d\u540c\u7684\u72b6\u6001\u548c\u8f93\u5165\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5bf9\u4e8e\u300c\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u662f\u5982\u4f55\u8f6c\u6362\u7684\u300d\u8fd9\u4ef6\u4e8b\u7684\u63cf\u8ff0\u5e76\u4e0d\u6e05\u6670\u3002\u800c\u5bf9\u4e8e\u300c\u8054\u7cfb\u300d\u8fd9\u4ef6\u4e8b\uff0c\u6709\u5411\u56fe\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4ecb\u7ecd \u72b6\u6001\u56fe(state diagram)\u3002</p> <p>\u72b6\u6001\u56fe\u627f\u8f7d\u7684\u4fe1\u606f\u91cf\u548c\u72b6\u6001\u8868\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4e5f\u662f\u9700\u8981\u8868\u8fbe \u5f53\u524d\u72b6\u6001(present state)\u3001\u8f93\u5165(input)\u3001\u4e0b\u4e00\u72b6\u6001(next state)\u3001\u8f93\u51fa(output) \u8fd9\u56db\u4e2a\u4e1c\u897f\u3002\u53ea\u4e0d\u8fc7\u300c\u4e0b\u4e00\u72b6\u6001\u300d\u662f\u901a\u8fc7\u6709\u5411\u8fb9\u6765\u8868\u793a\u7684\u3002\u5f53\u524d\u72b6\u6001\u4f5c\u4e3a\u4e00\u4e2a node \u7684\u5c5e\u6027\uff1b\u800c\u8f93\u5165\u4f5c\u4e3a edge \u7684\u4e00\u4e2a\u5c5e\u6027\uff1b\u81f3\u4e8e\u8f93\u51fa\uff0c\u6839\u636e\u5b83\u662f\u653e\u5728 edge \u4e0a\u8fd8\u662f node \u4e0a\uff0c\u5206\u4e3a \u7c73\u52d2\u578b(Mealy) \u548c \u6469\u5c14\u578b(Moore) \u4e24\u79cd\u3002</p> <p>!!! example \"Mealy\"</p> <pre><code>\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a \u7c73\u52d2\u578b \u7684\u72b6\u6001\u56fe\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u8868\u3002\n\n![](img/89.png)\n\n![20231224212406](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/20231224212406.png)\n&gt; \u56e0\u4e3a\u7c73\u52d2\u578b\u7535\u8def\u7684 **\u8f93\u51fa\u4e0e\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u90fd\u6709\u5173**\uff0c\u6240\u4ee5\u8f93\u51fa\u4f1a\u548c\u8f93\u5165\u653e\u5728\u4e00\u8d77\uff0c\u5373\u653e\u5728 edge \u91cc\u3002\n&gt; \n&gt; \u5bf9\u4e8e\u7c73\u52d2\u578b\uff0cnode \u5185\u7684\u4e8c\u8fdb\u5236\u4e3a present state \u4e2d\u7684 `AB`\uff1bedge \u4e0a\u5206\u522b\u4e3a input \u548c output\uff1a`X`/`Y`\uff1b\u6709\u5411\u8fb9\u8868\u8fbe\u4e86\u6bcf\u4e2a\u72b6\u6001\u5728\u7279\u5b9a\u8f93\u5165\u4e0b\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\n&gt;\n&gt; \u4f8b\u5982\uff0c\u5173\u6ce8 node `00`\uff0c\u5b83\u6709\u4e00\u6761\u81ea\u73af `0`/`0`\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e00\u884c\uff1b\u5b83\u6709\u4e00\u6761 edge `1`/`0` \u6307\u5411 node `01`\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868\u7684\u7b2c\u4e8c\u884c\u3002\n\n\u5f53\u7136\uff0c\u7c73\u52d2\u578b\u662f\u6709 **\u7f3a\u9677** \u7684\uff0c\u5728\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u4e4b\u540e\u7684\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u5b83\u6765\u5bf9\u6bcf\u4e00\u4e2a\u72b6\u6001\u8bbe\u8ba1\u8f93\u51fa\u65b9\u7a0b\u3002\u6b64\u65f6\u7531\u4e8e\u4e24\u4e2a\u8f93\u51fa\u5171\u4eab\u540c\u4e00\u4e2a\u76ee\u6807\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u4e24\u4e2a\u8f93\u51fa\u7ed3\u5408\u5230\u540c\u4e00\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u8fd9\u5c06\u63d0\u9ad8\u8bbe\u8ba1\u96be\u5ea6\u548c\u7ec4\u5408\u7535\u8def\u6210\u672c\u3002\n</code></pre> <p>!!! example \"Moore\"</p> <pre><code>\u800c\u4e0b\u9762\u662f\u4e00\u4e2a \u6469\u5c14\u578b \u7684\u72b6\u6001\u56fe\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u8868\u3002\n\n![](img/88.png)\n\n&gt; \u56e0\u4e3a\u6469\u5c14\u578b\u7535\u8def\u7684 **\u8f93\u51fa\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173**\uff0c\u6240\u4ee5\u8f93\u51fa\u4f1a\u548c\u5f53\u524d\u72b6\u6001\u653e\u5728\u4e00\u8d77\uff0c\u5373\u653e\u5728 node \u91cc\u3002\n&gt; \n&gt; \u5bf9\u4e8e\u6469\u5c14\u578b\uff0cnode \u5185\u7684\u4e8c\u8fdb\u5236\u8868\u793a present state \u548c output\uff1a`A`/`Z`\uff1bedge \u4e0a\u5217\u4e3e\u4e86\u8fd9\u79cd\u8f6c\u79fb\u53ef\u80fd\u7684 inputs\uff1a`XY`\u3002\n&gt; \n&gt; \u4f8b\u5982\uff0c\u5173\u6ce8 node `0`/`0`\uff0c\u5b83\u6709\u4e24\u6761\u81ea\u73af `00` \u548c `11`\uff0c\u5206\u522b\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u56db\u884c\uff1b\u5b83\u6709\u4e24\u6761 edge `01` \u548c `10` \u6307\u5411 node `1`/`1`\uff0c\u5bf9\u5e94 \u72b6\u6001\u8868 \u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u3002\n\n\u6469\u5c14\u578b\u4e5f\u5b58\u5728 **\u7f3a\u9677** \u7684\uff0c\u975e\u5e38\u663e\u7136\uff0c\u76f8\u6bd4\u4e8e\u7c73\u52d2\u578b\uff0c\u6469\u5c14\u578b\u9700\u8981\u66f4\u591a\u7684\u72b6\u6001\u3002\n</code></pre> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u7c73\u52d2\u578b\u503e\u5411\u4e8e\u8868\u8fbe\u300c\u5728\u7279\u5b9a\u72b6\u6001\u4e0b\uff0c\u7279\u5b9a\u8f93\u5165\u5c06\u5bfc\u81f4\u67d0\u79cd\u7ed3\u679c\uff0c\u4ee5\u53ca\u72b6\u6001\u8f6c\u79fb\u300d\uff1b\u800c\u6469\u5c14\u578b\u503e\u5411\u4e8e\u8868\u8fbe\u300c\u7279\u5b9a\u8f93\u5165\u5c06\u5bfc\u81f4\u67d0\u4e2a\u72b6\u6001\u5411\u53e6\u5916\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\uff0c\u800c\u8f93\u51fa\u66f4\u50cf\u662f\u4e00\u79cd\u72b6\u6001\u7684\u7ed3\u679c\u300d\u3002</p> <p>\u72b6\u6001\u56fe\u8fd8\u6709\u8fdb\u9636\u5f62\u6001\uff0c\u4e4b\u540e\u4f1a\u63d0\u53ca\uff0c\u5c31\u662f \u72b6\u6001\u673a\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_10","title":"\u7b49\u4ef7\u72b6\u6001","text":"<p>\u6682\u7565</p> <p>!!! info \"\u5ef6\u65f6\u5206\u6790\"</p> <pre><code>\u5ef6\u65f6\u5206\u6790\u662f\u4e00\u4e2a\u91cd\u96be\u70b9\uff0c\u5bf9\u4e8e\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u5206\u6790\uff0c\u5c06\u5728\u4e4b\u540e\u5355\u72ec\u5f00\u4e00\u4e2a\u5c0f\u7ed3\u91cd\u70b9\u4ecb\u7ecd\u3002\n\n\u8bf7\u53c2\u8003 **[\u5ef6\u65f6\u5206\u6790](#\u5ef6\u65f6\u5206\u6790)**\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_11","title":"\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1","text":"<p>\u7c7b\u6bd4\u7ec4\u5408\u903b\u8f91\u7535\u8def\u901a\u8fc7\u771f\u503c\u8868\u8bbe\u8ba1\u7535\u8def\uff0c\uff08\u540c\u6b65\uff09\u65f6\u5e8f\u7535\u8def\u4e3b\u8981\u4f9d\u636e\u72b6\u6001\u8868\uff08\u6216\u7b49\u4ef7\u8868\u8fbe\uff0c\u5982\u72b6\u6001\u56fe\uff09\u6765\u8bbe\u8ba1\u7535\u8def\u3002\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u89e6\u53d1\u5668\u4ee5\u53ca\u5176\u5b83\u7ec4\u5408\u7535\u8def\u7684\u9009\u62e9\u4e0e\u8bbe\u8ba1\uff1a</p> <ul> <li>\u89e6\u53d1\u5668\u7684\u6570\u91cf\u57fa\u672c\u53d6\u51b3\u4e8e\u6574\u4e2a\u9700\u6c42\u4e2d \u72b6\u6001 \u7684\u6570\u91cf\uff0c$n$ \u4e2a\u89e6\u53d1\u5668\u80fd\u591f\u8868\u8fbe $2^n$ \u4e2a\u4e8c\u8fdb\u5236\u72b6\u6001\uff1b</li> <li>\u7ec4\u5408\u7535\u8def\u7684\u4e3b\u8981\u8bbe\u8ba1\u56f4\u7ed5 \u89e6\u53d1\u5668 \u7684 \u8f93\u5165 \u548c \u8f93\u51fa \u5c55\u5f00\uff1b</li> </ul> <p>\u800c\u4e3b\u8981\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u548c\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u8bbe\u8ba1\u662f\u7c7b\u4f3c\u7684\uff0c\u5982\u4e0b\uff1a</p> <ol> <li>\u786e\u5b9a\u7cfb\u7edf\u7684\u884c\u4e3a\uff1b<ol> <li>\u63cf\u8ff0\u7cfb\u7edf\u884c\u4e3a\u8fc7\u7a0b\u4e2d\uff0c\u8981\u6ce8\u610f\u72b6\u6001\u7684\u590d\u7528\uff08\u4e0d\u8fc7\u5e76\u975e\u72b6\u6001\u8d8a\u5c11\u6210\u672c\u5c31\u8d8a\u5c0f\uff0c\u8fd9\u91cc\u6709\u89e6\u53d1\u5668\u6570\u91cf\u548c\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684 trade-off\uff09\uff1b</li> <li>\u786e\u5b9a\u7535\u8def\u7684\u521d\u59cb\u72b6\u6001\uff08\u590d\u4f4d\u72b6\u6001(reset state)\uff0c\u901a\u8fc7\u7ed9\u5b9a\u590d\u4f4d(reset)\u4fe1\u53f7\u5b9e\u73b0\uff09\uff1b<ul> <li>\u590d\u4f4d\u4e00\u822c\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\uff1b</li> </ul> </li> </ol> </li> <li>\u9610\u8ff0\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5e76\u7528\u771f\u503c\u8868\u6216\u903b\u8f91\u8868\u8fbe\u5f0f\u8868\u8fbe\u51fa\u6765\uff0c\u5f97\u5230\u72b6\u6001\u8868\u6216\u8005\u72b6\u6001\u56fe\uff1b</li> <li>\u7ed9\u8bbe\u8ba1\u597d\u7684\u72b6\u6001\u7f16\u7801\u8d4b\u503c\uff0c\u5f97\u5230\u5177\u4f53\u7684\u72b6\u6001\u8868\u2014\u2014\u72b6\u6001\u5206\u914d\uff1b<ol> <li>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u6309\u8ba1\u6570\u987a\u5e8f\u3001 \u6309\u683c\u96f7\u7801\u3001\u7528\u72ec\u70ed\u7801 \u6765\u7ed9\u72b6\u6001\u8d4b\u503c\uff0c\u66f4\u7cfb\u7edf\u7684\u65b9\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u505a\u8ba8\u8bba\uff1b</li> <li>\u5176\u4e2d\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u6240\u9700\u8981\u7684\u72b6\u6001\u4e0d\u80fd\u5b8c\u6574\u586b\u5145 $2^n$ \u79cd\u60c5\u51b5\uff0c\u9700\u8981\u8bbe\u8ba1\u65e0\u6548\u72b6\u6001\uff0c\u8fd9\u79cd\u65f6\u5019\u53ef\u4ee5\u4e0d\u8003\u8651\u5b83\u4eec\uff1b</li> </ol> </li> <li>\u6839\u636e\u72b6\u6001\u8868\u786e\u5b9a\u4f7f\u7528\u7684\u89e6\u53d1\u5668\u53ca\u5176\u8f93\u5165\u65b9\u7a0b\uff1b</li> <li>\u6839\u636e\u72b6\u6001\u8868\u786e\u5b9a\u8f93\u51fa\u65b9\u7a0b\uff1b</li> <li>\u4f18\u5316\u8f93\u5165\u65b9\u7a0b\u548c\u8f93\u51fa\u65b9\u7a0b\uff1b</li> <li>\u5c06\u4f18\u5316\u540e\u7684\u903b\u8f91\u8bbe\u8ba1\u5de5\u827a\u6620\u5c04\u5230\u786c\u4ef6\u5b9e\u73b0\u4e0a\uff1b</li> <li>\u9a8c\u8bc1\u6b63\u786e\u6027\uff08\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff09\uff1b<ul> <li>\u4e3b\u8981\u5c31\u662f\u770b\u80fd\u4e0d\u80fd\u590d\u73b0\u72b6\u6001\u56fe\uff1b</li> </ul> </li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_12","title":"\u72b6\u6001\u673a","text":"<p>\u5c3d\u7ba1\u5728\u5c0f\u89c4\u6a21\u7684\u8bbe\u8ba1\u4e2d\uff0c\u72b6\u6001\u56fe\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u968f\u7740\u8bbe\u8ba1\u7684\u7cfb\u7edf\u89c4\u6a21\u53d8\u5927\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u52a0\u6cdb\u7528\u7684\u65b9\u5f0f\u6765\u8868\u8fbe\u7c7b\u4f3c\u7684\u65f6\u5e8f\u903b\u8f91\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u72b6\u6001\u56fe\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u8bbe\u8ba1\u4e86 \u72b6\u6001\u673a(State-Machine Diagram) \u6765\u505a\u8fd9\u4ef6\u4e8b\u3002</p> <p>\u72b6\u6001\u673a\u6df7\u7528\u4e86\u7c73\u52d2\u578b\u548c\u6469\u5c14\u578b\u7684\u8f93\u51fa\u683c\u5f0f\uff0c\u4f18\u52a3\u5728 \u72b6\u6001\u56fe \u4e2d\u6709\u6240\u63d0\u53ca\u3002\u5e76\u4e14\uff0c\u6709\u9650\u56fe\u5c06\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5199\u5165\uff0c\u603b\u4f53\u4e0a\u5bf9\u7535\u8def\u8bbe\u8ba1\u66f4\u53cb\u597d\u3002\u4e0b\u56fe\u662f\u72b6\u6001\u673a\u7684\u4e00\u4e2a\u201c\u8303\u5f0f\u201d\u3002</p> <p>!!! note \"Generic State Diagram Template\"     </p> <pre><code>\u9996\u5148\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u201c\u8303\u5f0f\u201d\uff1a\n\n&gt; \u5177\u4f53\u89e3\u91ca\u72b6\u6001\u673a\u6709\u54ea\u4e9b\u5185\u5bb9\uff0c\u4ee5\u53ca\u5404\u4e2a\u90e8\u5206\u4e4b\u95f4\u7684\u903b\u8f91\u3002\u5173\u4e8e\u5404\u4e2a\u90e8\u5206\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8bf7\u53c2\u8003 Template\u3002\n&gt;\n&gt; \u53e6\u5916\uff0c\u4e3a\u4e86\u7b80\u5316\u8bed\u53e5\uff0c\u4e0b\u9762\u7684\u8bf4\u6cd5\u7701\u7565\u4e86\u65f6\u949f\uff0c\u8bf7\u8bb0\u5f97\u8003\u8651\u3002\n\n\u72b6\u6001\u673a\u6a21\u578b\u4e3b\u8981\u6709\u4e09\u8981\u7d20\uff1a**\u8f93\u5165\u6761\u4ef6(Input Conditions)**\u3001**\u72b6\u6001\u8f6c\u79fb(Transitions)** \u548c **\u8f93\u51fa\u884c\u4e3a(Output Actions)**\u3002\u603b\u4f53\u6765\u8bf4\uff0c\u8f93\u5165\u6761\u4ef6\u544a\u8bc9\u6211\u4eec\u6574\u4e2a\u72b6\u6001\u673a\u8981\u5982\u4f55\u53d8\u5316\uff1b\u72b6\u6001\u8f6c\u79fb\u63cf\u8ff0\u4e86\u72b6\u6001\u673a\u7684\u5185\u90e8\u8f6c\u79fb\u884c\u4e3a\uff0c\u5373\u56fe\u8bba\u4e0a\u7684\u6709\u5411\u8054\u901a\u5173\u7cfb\uff1b\u8f93\u51fa\u884c\u4e3a\u63cf\u8ff0\u52a8\u6001\u53d8\u5316\u8fc7\u7a0b\u4e2d\u72b6\u6001\u673a\u7684\u5bf9\u5916\u8868\u8fbe\u3002\u5176\u4e2d\uff0c\u72b6\u6001\u8f6c\u79fb\u548c\u8f93\u51fa\u884c\u4e3a\u662f\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u72b6\u6001\u673a\u7684\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u8f93\u5165\u6761\u4ef6\u662f\u6211\u4eec\u7528\u6765\u505a\u5b9e\u65f6\u5224\u65ad\u7684\u5916\u90e8\u4f9d\u636e\u3002\n\n---\n\n\u300c\u8f93\u5165\u6761\u4ef6\u300d\u662f\u7531\u8f93\u5165\u53d8\u91cf\u5f62\u6210\u7684\u4e00\u4e2a\u5e03\u5c14\u65b9\u7a0b\uff0c\u5728\u6574\u4e2a\u72b6\u6001\u673a\u4e2d\uff0c\u8f93\u5165\u662f\u53d8\u5316\u7684\u201c\u56e0\u53d8\u91cf\u201d\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u72b6\u6001\u8f6c\u79fb\u8fd8\u662f\u8f93\u51fa\uff0c\u90fd\u53d6\u51b3\u4e8e\u8f93\u5165\u6761\u4ef6\u3002\u800c\u5bfc\u81f4\u7279\u5b9a\u884c\u4e3a\u7684\u8f93\u5165\u6761\u4ef6\u5219\u88ab\u5206\u7c7b\u4e3a **\u8f6c\u79fb\u6761\u4ef6(Transition Condition)TC** \u548c **\u8f93\u51fa\u6761\u4ef6(Output Condition)OC**\u3002\n\n---\n\n\u300c\u72b6\u6001\u8f6c\u79fb\u300d\u5728\u56fe\u4e2d\u8868\u73b0\u4e3a\u6709\u5411\u8fb9\uff0c\u5f53 TC \u6210\u7acb\u65f6\uff0c\u72b6\u6001\u8f6c\u79fb\u53d1\u751f\uff1b\u6216\u8005\u5bf9\u4e8e\u65e0\u6761\u4ef6\u8f6c\u79fb\uff0c\u53ea\u8981\u5f97\u5230\u65f6\u949f\u8109\u51b2\u5c31\u4f1a\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\n\n---\n\n\u300c\u8f93\u51fa\u884c\u4e3a\u300d\u5728\u72b6\u6001\u673a\u4e2d\u6709\u56db\u79cd\u89e6\u53d1\u65b9\u6cd5\uff08\u5373\u56db\u79cd OC\uff09\uff1a**Moore**\u3001**\u4e0d\u4f9d\u8d56\u8f6c\u79fb(Transition-condition Independent)TCI** Mealy\u3001**\u4f9d\u8d56\u8f6c\u79fb(Transition-condition Dependent)TCD** Mealy \u548c **\u4f9d\u8d56\u8f6c\u79fb\u548c\u8f93\u51fa\u6761\u4ef6(Transition and Output-condition Dependent)TOCD** Mealy\u3002\u6839\u636e\u5b57\u9762\u610f\u601d\u6765\u770b\uff1a\n\n- Moore \u53ea\u4e0e\u72b6\u6001\u6709\u5173\uff0c\u6240\u4ee5\u5728\u56fe\u4e2d\u4ece\u72b6\u6001\u8282\u70b9\u5f15\u51fa\uff1b\n- TCI Mealy \u4e0e\u72b6\u6001\u548c\u8f93\u51fa\u6761\u4ef6\u6709\u5173\uff0c\u6240\u4ee5\u5728\u56fe\u4e2d\u4ece\u72b6\u6001\u8282\u70b9\u5f15\u51fa\u5199\u5728 OC \u540e\u9762\uff08`OC`/`TCI OA`\uff09\uff1b\n- TCD Mealy \u4e0e\u8f6c\u79fb\u6761\u4ef6\u6709\u5173\uff0c\u5f53\u8f6c\u79fb\u6210\u7acb\u7684\u65f6\u5019\u53d1\u751f Output Action\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u5728 TC \u540e\u9762\uff08`TC`/`TCD OA`\uff09\uff1b\n- TOCD Mealy \u5728\u8f6c\u79fb\u53d1\u751f\u65f6\u5019\u624d\u53ef\u80fd\u6761\u4ef6\u6210\u7acb\uff0c\u5373\u5f53 TC \u548c OC \u90fd\u6210\u7acb\u65f6\u624d\u53d1\u751f Output Action\uff0c\u6240\u4ee5\u9700\u8981\u4ece TC \u5f15\u51fa OC\uff0c\u5e76\u8ddf\u5728 OC \u540e\u9762\uff08`TC`\u2014\u2014`OC`/`TOCD OA`\uff09\uff1b\n        - \u5982\u679c\u51fa\u73b0\u590d\u6570\u7684 TOCD OA\uff0c\u5219\u4f7f\u7528 `,` \u5206\u9694\uff1b\n\n&gt; In a given state, an output action occurs if: (a) it is unconditional (Moore), (b)  TCI and its output condition OC = 1, \\(c) TCD and its transition condition TD = 1, and (d) TOCD and its transition condition TC and output condition OC are both equal to 1, i.e, TC\u00b7OC = 1. Note that Moore and TCI output actions attached to a state, apply to all transitions from the state as well.\n\n\u56de\u5230\u8f93\u51fa\u884c\u4e3a\u672c\u8eab\uff0c\u5f53 OC \u6210\u7acb\u65f6\u8f93\u51fa\u884c\u4e3a\u53d1\u751f\uff0c\u4e00\u822c\u4f1a\u5c06\u8f93\u51fa\u53d8\u91cf\u6807\u51fa\uff0c\u5982\u679c\u5199\u7684\u662f NOT X\uff0c\u8868\u793a OC \u6210\u7acb\u65f6 X \u5e94\u4e3a `0`\uff1b\u5982\u679c\u5199\u7684\u662f X\uff0c\u5219\u8868\u793a OC \u6210\u7acb\u65f6 X \u4e3a `1`\u3002\n\n!!! warning \"\u6ce8\u610f\u70b9\"\n    \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u70b9\u9700\u8981\u8fa8\u6790\uff0c\u7531\u4e8e\u300cTransition\u300d\u8868\u793a\u7684\u662f\u201c\u4e0b\u4e00\u4e2a\u201d\u72b6\u6001\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5f53\u524d\u65f6\u523b\uff0c\u5f53\u524d\u8282\u70b9\u7684\u8f93\u51fa\u548c\u51fa\u5ea6\u7684\u8f93\u51fa\u4e0d\u80fd\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u56e0\u4e3a Moore \u8f93\u51fa\u884c\u4e3a\u7684 Z \u548c TC=AB \u90a3\u6761\u8fb9\u7684 Z' \u51b2\u7a81\uff0c\u6240\u4ee5\u975e\u6cd5\u3002\n\n    ![](img/92.png)\n\n    ---\n\n    \u5f53\u7136\uff0c\u975e\u6cd5\u72b6\u6001\u673a\u5e76\u4e0d\u53ea\u6709\u8fd9\u4e00\u4e2a\u5224\u636e\u3002\u4e0d\u8fc7\u6838\u5fc3\u601d\u60f3\u5c31\u662f **\u4e0d\u80fd\u6709\u6b67\u4e49\u6216\u51b2\u7a81\u4e14\u9700\u8981\u5145\u5206**\uff0c\u66f4\u6570\u5b66\u7684\u8868\u8fbe\u662f\uff0c\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n    1.\u975e\u4ea4\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001 $S_i$\uff0c\u5b83\u7684\u4efb\u610f\u4e24\u4e2a\u51fa\u5ea6 $(T_{ij},T_{jk})$ \u90fd\u4e0d\u80fd\u540c\u65f6\u6210\u7acb\uff0c\u5373\u5e94\u6709\uff1a\n\n    $$\n    \\forall (T_{ij},T_{ik})\\;,\\;\\;T_{ij}\\cdot T_{ik} = 0\n    $$\n\n    2.\u5145\u5206\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001 $S_i$\uff0c\u5b83\u7684\u6240\u6709\u51fa\u5ea6\u6761\u4ef6\u5e94\u8be5\u6db5\u76d6\u6240\u6709\u53ef\u80fd\uff0c\u5373\u5e94\u6709\uff1a\n\n    $$\n    \\sum_{j}T_{ij} = 1\n    $$\n\n    Tips: \u4e0a\u9762\u662f\u5bf9 Transition Condition \u7684\u7ea6\u675f\uff0c**\u5c06 TC \u6362\u6210 OC \u4e5f\u9700\u8981\u6210\u7acb**\u3002\n\n---\n\n???+ summary \"\u7f29\u5199\u5bf9\u7167\u8868\"\n    |\u7f29\u5199    |\u542b\u4e49                                       |\u6ce8\u91ca|\n    |---    |---                                        |---|\n    |TC     |Transition Condition                       |\u8f6c\u79fb\u6761\u4ef6\uff1a\u5bfc\u81f4 Transition \u7684 Input Condition|\n    |OC     |Output Condition                           |\u8f93\u51fa\u6761\u4ef6\uff1a\u5bfc\u81f4 Output Actions \u7684 Input Condition|\n    |TCI    |Transition-condition Independent           |\u4e0d\u4f9d\u8d56\u8f6c\u79fb\uff1a\u53ea\u4e0e State \u6709\u5173\u7684 Output Actions|\n    |TCD    |Transition-condition Dependent             |\u4f9d\u8d56\u8f6c\u79fb\uff1aTransition Condition \u6210\u7acb\u624d\u6709 Output Actions|\n    |TOCD   |Transition and Output-condition Dependent  |\u4f9d\u8d56\u8f6c\u79fb\u548c\u8f93\u51fa\u65b9\u7a0b\uff1aTransition Condition \u548c Output Condition \u90fd\u6210\u7acb\u624d\u6709 Output Actions|\n\n???+ example \"State Machine Diagram \ud83c\udf30\"\n    ![](img/91.png)\n    &gt; \u6ce8\u610f\uff0c\u56fe\u4e2d\u6709\u4e00\u4e2a\u9519\u8bef\uff08\u5927\u6982\uff09\uff0c\u53f3\u4fa7 $S_1$ \u7684 OC \u5e94\u4e3a $(\\overline{A}\\cdot\\overline{B})$\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_13","title":"\u5ef6\u65f6\u5206\u6790","text":"<p>\u9996\u5148\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u7ed9\u51fa\u89c2\u5ff5\uff0c\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u5206\u6790\u6709\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u548c\u4e00\u4e2a\u6b21\u8981\u90e8\u5206\uff1a</p> <ol> <li>\u7ec4\u5408\u7535\u8def\u5bfc\u81f4\u7684\u5ef6\u65f6\uff1b</li> <li>\u89e6\u53d1\u5668\u5bfc\u81f4\u7684\u5ef6\u65f6\uff1b</li> <li>\u7535\u8def\u7684\u677e\u5f1b\u65f6\u95f4\uff1b</li> </ol> <p>\u5e76\u4e14\u5f80\u5f80\u662f\u6839\u636e\u89e6\u53d1\u5668\u7684\u7c7b\u578b\uff0c\u8ba1\u7b97\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u65f6\u95f4\u3002\u6700\u6838\u5fc3\u7684\u95ee\u9898\u5c31\u662f\u8ba1\u7b97\u7535\u8def\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u7684\u6700\u77ed\u65f6\u949f\u5468\u671f\u3002\u63a5\u4e0b\u6765\uff0c\u81ea\u4e0b\u800c\u4e0a\u7684\u8fdb\u884c\u7ec6\u8282\u8865\u5145\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_14","title":"\u7ec4\u5408\u7535\u8def\u5ef6\u65f6","text":"<p>\u8fd9\u4e00\u90e8\u5206\u7684\u8be6\u7ec6\u5185\u5bb9\u5df2\u7ecf\u5728 \u4e0a\u4e00\u7ae0 \u4ecb\u7ecd\u8fc7\u4e86\uff0c\u5728\u8fd9\u91cc\uff0c\u4e3a\u4e86\u7b80\u5316\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u5168\u90e8\u91c7\u7528 $t_{pd}$\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_15","title":"\u89e6\u53d1\u5668\u5ef6\u65f6","text":"<p>\u89e6\u53d1\u5668\u5ef6\u65f6\u76f8\u6bd4\u7ec4\u5408\u7535\u8def\u5ef6\u65f6\u590d\u6742\u5f88\u591a\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u91c7\u6837\u3002\u4e5f\u5c31\u662f\u8bf4\u5b83\u7684\u201c\u5ef6\u65f6\u201d\u5e76\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u7535\u4fe1\u53f7\u4f20\u64ad\u7684\u5ef6\u8fdf\uff0c\u8fd8\u6709\u4e3a\u4e86\u4fdd\u8bc1\u4fe1\u53f7\u7a33\u5b9a\u8bbe\u8ba1\u7684\u4e00\u4e9b\u5185\u5bb9\u3002</p> <p>\u5927\u81f4\u6765\u8bf4\u6709\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>Setup Time\uff1a\u91c7\u6837\u8fb9\u7f18\uff08\u65f6\u949f\u8fb9\u6cbf\uff09\u524d\u8f93\u5165\u4fe1\u53f7\u9700\u8981\u4fdd\u6301\u7a33\u5b9a\u7684\u65f6\u95f4\uff1b</li> <li>Hold Time\uff1a\u91c7\u6837\u8fb9\u7f18\u540e\u8f93\u5165\u4fe1\u53f7\u9700\u8981\u4fdd\u6301\u7a33\u5b9a\u7684\u65f6\u95f4\uff1b</li> <li>Propagation Time\uff1a\u89e6\u53d1\u5668\u7684\u91c7\u6837\u8fb9\u7f18\u5230\u8f93\u51fa\u7a33\u5b9a\u7684\u65f6\u95f4\uff08\u4f20\u64ad\u65f6\u95f4\uff09\uff1b</li> </ul> <p>!!! note \"\"     \u4e00\u7bc7\u4ecb\u7ecd Setup Time \u548c Hold Time \u7684 \u6587\u7ae0\u3002</p> <p> </p> <p>$tclk\uff08\u5206\u949f\uff09 = t su + th + t pd$ \u6211\u4eec\u552f\u4e00\u53ef\u4ee5\u63a7\u5236\u7684\u662ftp\u3002\u8fd9\u4e00\u5ef6\u8fdf\u8868\u793a\u60a8\u8bd5\u56fe\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\u591a\u5c11\u5de5\u4f5c</p> <p>\u6839\u636e\u89e6\u53d1\u5668\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u4e3b\u8981\u7684 Setup Time \u4e5f\u4e0d\u540c\uff1a</p> <p></p> <p>\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u4e9b\u70b9\u662f\uff1a</p> <ol> <li>\u8fd9\u51e0\u4e2a\u65f6\u95f4\u70b9\u8d77\u70b9/\u7ec8\u70b9\u90fd\u662f\u89e6\u53d1\u8fb9\u7f18\uff1b</li> <li>Propagation Time \u4e00\u5b9a\u957f\u4e8e Hold Time\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u7535\u8def\u5ef6\u8fdf\u65f6\u53ea\u8003\u8651 Propagation Time\uff1b</li> <li>Pulse-trigger \u548c Edge-trigger \u5728\u8868\u73b0\u4e0a\u7684\u533a\u522b\u5728\u4e8e Setup Time\uff0c\u524d\u8005\u9700\u8981\u8986\u76d6\u6574\u4e2a pulse(<code>pos</code> or <code>neg</code>)\uff1b</li> </ol>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_16","title":"\u677e\u5f1b\u65f6\u95f4","text":"<p>\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u7ed9\u6574\u4e2a\u7535\u8def\u7684\u4e00\u4e2a\u201c\u5bb9\u5dee\u201d\u65f6\u95f4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8bef\u5dee\uff0c\u4f46\u662f\u7531\u4e8e\u901a\u8fc7\u524d\u4e24\u8005\u8ba1\u7b97\u51fa\u6765\u7684\u662f\u6700\u77ed\u65f6\u95f4\uff0c\u6240\u4ee5\u677e\u5f1b\u65f6\u95f4\u5fc5\u5b9a\u975e\u8d1f\u3002\uff08\u4e0d\u80fd\u5012\u6263\uff01\uff09 \u5982\u679c\u51fa\u73b0\u4e86\u8d1f\u6570\uff0c\u90a3\u4e48\u5c31\u8bf4\u660etp\u592a\u5c0f\u4e86</p>"},{"location":"ZJU_CS/DigitalDesign/Chap04/#_17","title":"\u65f6\u5e8f\u7535\u8def\u5ef6\u65f6","text":"<p>\u65f6\u5e8f\u7535\u8def\u7684\u5ef6\u65f6\u8ba1\u7b97\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u8ba1\u7b97\u65f6\u5e8f\u7535\u8def\u8fd0\u4f5c\u7684\u6700\u5927\u9891\u7387\uff08\u7531\u6b64\u65f6\u949f\u5468\u671f\u8981\u6700\u5c0f\uff09\u4ee5\u8bbe\u8ba1\u65f6\u949f\u9891\u7387\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7b97\u51fa\u7535\u8def\u80fd\u591f\u7a33\u5b9a\u5de5\u4f5c\u7684\u6700\u5c0f\u65f6\u949f\u671f\u3002</p> <p>\u8fd9\u5c31\u9700\u8981\u6d4b\u91cf\u5728\u6bcf\u6761\u8def\u5f84\u4e0a\u4fe1\u53f7\u53d8\u5316\u7684\u4f20\u64ad\u5ef6\u8fdf\u3002\u6bcf\u6761\u8def\u5f84\u5ef6\u8fdf\u7531\u4e09\u90e8\u5206\u7ec4\u6210: 1)\u89e6\u53d1\u5668\u4f20\u64ad\u5ef6\u8fdftpd,FF\uff0c 2)\u8def\u5f84\u4e0a\u4e00\u7cfb\u5217\u95e8\u4ea7\u751f\u7684\u7ec4\u5408\u903b\u8f91\u5ef6\u8fdftpd,COMB\uff0c 3)\u89e6\u53d1\u5668\u7684\u5efa\u7acb\u65f6\u95f4ts\u3002 \u5f53\u4e00\u4e2a\u4fe1\u53f7\u53d8\u5316\u6cbf\u7740\u8def\u5f84\u4f20\u64ad\u65f6\uff0c\u5b83\u7684\u5ef6\u8fdf\u7b49\u4e8e\u8fd9\u4e9b\u5ef6\u8fdf\u4e4b\u548c\u3002 \u65f6\u949f\u5468\u671f\uff1atp</p> <p>\u5176\u8ba1\u7b97\u9075\u5faa\u4e00\u5b9a\u65b9\u6cd5\uff1a</p> <p></p> <p>\u56fe\u4e2d $t_{pd,FF}$ \u6307\u89e6\u53d1\u5668\u7684 propagation time\uff0c$t_{COMB}$ \u6307\u7ec4\u5408\u7535\u8def\u7684\u603b\u4f20\u64ad\u65f6\u95f4\uff08\u4e00\u822c\u60c5\u51b5\u4e0b $t_{COMB} = \\max{\\sum_i t_{pd,gate_i}}$\uff09\uff0c$t_{s}$ \u6307\u89e6\u53d1\u5668\u7684 setup time\uff0c$t_{slack}$ \u8868\u793a\u7535\u8def\u7684\u677e\u5f1b\u65f6\u95f4\u3002</p> <p>\u4e00\u7bc7\u6587\u7ae0</p> <p> </p> <p>!!! note \"\uff08\u5047\uff09\u7ecf\u9a8c\u4e4b\u8c08\"     \u4e00\u822c\u4ece\u4e00\u4e2a FF \u7684\u8f93\u51fa\u51fa\u53d1\u5230 FF \u7684\u8f93\u5165\u7ed3\u675f\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/","title":"Chap 5 Digital Hardware Implementation","text":"<p>!!! warning \"\u6ce8\u610f\"     \u672c\u7ae0\u8282\u5728\u8865\u5929\u4e2d\u5b8c\u6210\uff0c\u5185\u5bb9\u53ef\u80fd\u6bd4\u8f83\u7b80\u7565\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#_1","title":"\u53ef\u91cd\u7f16\u7a0b\u6280\u672f","text":"<p>\u53ef\u91cd\u7f16\u7a0b\u6280\u672f(programmable implementation technologies)</p> <p>\u76f4\u63a5\u66f4\u6539\u7535\u8def\u6765\u4fee\u6539\u7535\u8def\u529f\u80fd\u88ab\u79f0\u4e3a\u786c\u7f16\u7a0b\uff0c\u800c\u53ef\u91cd\u53d8\u6210\u6280\u672f\u8ba9\u6211\u4eec\u80fd\u591f\u4e0d\u66f4\u6539\u786c\u4ef6\u5e03\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u903b\u8f91\u529f\u80fd\u7684\u91cd\u65b0\u7f16\u8f91\u3002</p> <p>!!! example \"FPGA\"     - \u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u95e8\u9635\u5217(Field Programmable Gate Array)FPGA     - \u67e5\u627e\u8868(lookup table)LUT</p> <p>\u7f16\u7a0b\u6280\u672f(programming technologies) \u5728\u786c\u4ef6\u5c42\u9762\u6709\u4e09\u79cd\u5b9e\u73b0\u624b\u6bb5\uff1a</p> <ul> <li>\u63a7\u5236\u8fde\u63a5\u6765\u5b9e\u73b0\uff08\u4e0d\u662f\u53ef\u91cd\u7f16\u7a0b\uff09\uff1b<ul> <li>Mask programing\uff08\u63a9\u7801\u7f16\u7a0b\uff09</li> <li>Fuse\uff08\u4fdd\u9669\u4e1d\uff09</li> <li>Anti-fuse</li> </ul> </li> <li>\u63a7\u5236\u95e8\u7ea7\u7535\u8def\u7535\u538b\uff1b<ul> <li>Single-bit storage element</li> <li>Stored charge on a floating gate<ul> <li>Erasable</li> <li>Electrically erasable</li> <li>Flash (as in Flash Memory) </li> </ul> </li> </ul> </li> <li>\u4f7f\u7528\u67e5\u627e\u8868(LUT)\uff1b<ul> <li>Storage elements for the function<ul> <li>\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a <code>MUX</code>\uff0c\u5e76\u5c06\u8f93\u5165\u7aef\u63a5\u5185\u5b58\uff0c\u901a\u8fc7\u4fee\u6539\u5185\u5b58\u7684\u503c\u6765\u4fee\u6539 <code>MUX</code> \u7684\u884c\u4e3a\uff0c\u8fdb\u800c\u5b9e\u73b0\u51fd\u6570\u91cd\u7f16\u7a0b</li> </ul> </li> </ul> </li> </ul> <p>\u8bfe\u7a0b\u4e2d\u4ecb\u7ecd\u7684\u53ef\u91cd\u7f16\u7a0b\u7684\u5668\u4ef6\u4e3b\u8981\u6709\u5982\u4e0b\u56db\u79cd\uff1a</p> <ul> <li>\u53ea\u8bfb\u5185\u5b58 Read Only Memory (ROM) </li> <li>\u53ef\u7f16\u7a0b\u9635\u5217\u903b\u8f91 Programmable Array Logic (PAL^\u24c7^)</li> <li>\u53ef\u7f16\u7a0b\u903b\u8f91\u9635\u5217 Programmable Logic Array (PLA)</li> <li>Complex Programmable Logic Device (CPLD) or Field-Programmable Gate Array(FPGA)</li> </ul> <p>\u524d\u4e09\u8005\u90fd\u53ea\u80fd\u91cd\u5199\u4e00\u6b21\uff0c\u5982\u4e0b\u662f\u5b83\u4eec\u7684\u91cd\u5199\u5185\u5bb9\uff1a</p> <p></p> <p>!!! info \"\u5f15\u5165\"     \u7531\u4e8e\u4e4b\u540e\u51fa\u73b0\u7684\u7535\u8def\u56fe\u4f1a\u975e\u5e38\u5e9e\u5927\uff0c\u6240\u4ee5\u9700\u8981\u5f15\u5165\u4e00\u4e9b\u903b\u8f91\u7b26\u53f7\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#_2","title":"\u903b\u8f91\u7b26\u53f7\u4ecb\u7ecd","text":"<p>!!! example \"Buffer\u2014\u2014\u7b80\u5316\u8868\u793a\u4e00\u4e2a\u53d8\u91cf\u7684\u81ea\u8eab\u548c\u5176\u975e\"     </p> <p>!!! example \"Wire connecting\"     \u5728\u53ef\u7f16\u7a0b\u903b\u8f91\u7535\u8def\u4e2d\uff0c\u7ebf\u7684\u8fde\u63a5\u4e0d\u518d\u53ea\u6709\u5355\u7eaf\u7684\u8fde\u901a\u548c\u4e0d\u8fde\u901a\u7684\u5173\u7cfb\uff1a</p> <pre><code>\u5bf9\u4e8e\u4e24\u6761\u76f8\u4ea4\u5bfc\u7ebf\uff1a\n\n- \u5982\u679c\u6ca1\u6709\u7279\u6b8a\u7b26\u53f7\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 is not connected \uff1b\n\n![](img/53.png)\n\n- \u5982\u679c\u6709\u4e00\u4e2a \u274c\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 programmable\uff1b\n\n![](img/55.png)\n\n- \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u52a0\u7c97\u7684\u70b9\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u4ea4\u53c9\u70b9 not programmable\uff1b\n\n![](img/54.png)\n</code></pre> <p>\u7279\u522b\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u5668\u4ef6\u7684\u6240\u6709\u8f93\u5165\u90fd\u662f programmable\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u9009\u62e9\u628a\u8fd9\u4e2a \u274c \u753b\u5230\u903b\u8f91\u95e8\u4e0a\uff08\u5982\u4e0b\u56fe e \u548c f\uff09\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#rom","title":"ROM","text":"<p>ROM \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u800c ROM \u7684\u5927\u5c0f\u5982\u4e0b\u8ba1\u7b97\uff08\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff09\uff1a</p> <p>$$ \\begin{aligned}     ROM\\;\\;size\\;\\;&amp;=\\;\\;address\\;\\;width\\;\\;\\times\\;\\;word\\;\\;width&amp;\\                    &amp;=\\;\\;2^2\\;\\;\\times\\;\\;4\\;\\;=\\;\\;16\\;\\;bit&amp; \\end{aligned} $$</p> <p>!!!+ example \"eg\"     \u66f4\u6e05\u6670\u7684\u8868\u793a\u5176\u5185\u90e8\u903b\u8f91\u7684\uff0c\u53ef\u4ee5\u5c06 ROM \u5199\u6210\u8fd9\u6837\uff1a     </p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#pal","title":"PAL","text":"<p>\u53ef\u91cd\u7f16\u7a0b\u8f93\u5165\u7ec4\u5408\u6765\u5f97\u5230\u56fa\u5b9a\u8f93\u51fa\u3002</p> <p>\u5176\u5177\u6709\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u56e0\u4e3a\u8868\u8fbe\u51fd\u6570\u7684\u65b9\u6cd5\u4e0d\u662f\u901a\u8fc7 SOM \u6216\u8005 POM \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\u7684\u4e00\u4e2a\u6539\u8fdb\u662f\uff0c\u901a\u8fc7\u5c06\u4e00\u4e2a\u65e2\u6709\u7684 PAL \u8f93\u51fa\u5f53\u4f5c\u8f93\u5165\uff0c\u8f93\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002</p> <p>???+ example \"eg\"     </p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#pla","title":"PLA","text":"<p>\u4e0e PAL \u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u4e5f\u80fd\u5bf9\u8f93\u51fa\u7ec4\u5408\u8fdb\u884c\u91cd\u7f16\u7a0b\u3002</p> <p>\u5176\u540c PAL \u4e00\u6837\u5177\u6709\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u56e0\u4e3a\u8868\u8fbe\u51fd\u6570\u7684\u65b9\u6cd5\u4e0d\u662f\u901a\u8fc7 SOM \u6216\u8005 POM \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570\u3002</p> <p>\u5728\u57fa\u7840\u4e0a\u4e00\u4e2a\u6539\u8fdb\u662f\u5728\u8f93\u51fa\u7684\u65f6\u5019\u518d\u505a\u4e00\u6b21\u5f02\u6216\uff08\u4e0d\u7528\u975e\u95e8\u4f53\u73b0\u4e86\u53ef\u91cd\u7f16\u7a0b\u7684\u601d\u60f3\uff09\uff0c\u4ee5\u4ea7\u751f\u65b0\u7684\u9879\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002 Attention:\u6ce8\u610fXOR\u7684\u4f5c\u7528\uff01\uff01\uff01</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fa\u73b0\u4e86\u65b0\u7684\u9879\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#lookup-tables","title":"Lookup Tables","text":"<p>\u901a\u8fc7\u8ba9\u6570\u636e\u6e90\u63a5\u5185\u5b58\uff0c\u5e76\u901a\u8fc7\u4fee\u6539\u771f\u503c\u8868\u5185\u7684\u503c\uff0c\u5373\u4fee\u6539\u5185\u5b58\u91cc\u7684\u503c\uff0c\u6765\u5b9e\u73b0\u6570\u636e\u6e90\u7684\u53d8\u5316\uff0c\u6765\u6539\u53d8 <code>MUX</code> \u7684\u884c\u4e3a\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u51fd\u6570\u8f93\u5165\u7684\u6570\u91cf\u4f1a\u53d8\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u901a\u8fc7\u7075\u6d3b\u7ec4\u5408\u7684\u65b9\u6cd5\uff08\u6bd4\u5982\u901a\u8fc7\u56db\u9009\u4e8c\u9009\u4e00\u7684\u65b9\u5f0f\uff0c\u7528\u4e09\u4e2a\u4e8c\u9009\u4e00\u7684 <code>MUX</code> \u6765\u5b9e\u73b0\u56db\u9009\u4e00\uff09\u6765\u5b9e\u73b0\u591a\u8f93\u5165\u3002</p> <p>\u5e38\u89c1\u7684 <code>LUT</code> \u5927\u5c0f\u4ee5 16bits \u6216 64bits \u7684 4 \u8f93\u5165\u6216 6 \u8f93\u5165\u4e3a\u4e3b\u3002</p> <p>\u7531\u4e8e <code>LUT</code> \u5b58\u7684\u672c\u8d28\u4e0a\u662f\u771f\u503c\u8868\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u8f93\u5165\u7b26\u5408\u8981\u6c42\u7684\u903b\u8f91\u51fd\u6570\u3002</p> <p>\u6240\u4ee5\uff0c\u95ee\u9898\u5c31\u53d8\u5316\u4e3a\u5982\u4f55\u7528\u8f83\u5c0f\u7684 <code>LUT</code> \u6765\u7ec4\u5408\u5b9e\u73b0\u590d\u6742\u7684\u903b\u8f91\u51fd\u6570\u3002</p> <p><code>LUT</code> \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p><code>FPGA</code> \u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>CLB(Configurable Logic Block)<ul> <li>\u5927\u91cf\u5b58\u50a8 <code>LUT</code></li> </ul> </li> <li>SM(Switch Matrix)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u4ea4\u6362\u77e9\u9635</li> </ul> </li> <li>IOB(Input &amp; Output Block)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u8f93\u5165\u8f93\u51fa\u5355\u5143</li> </ul> </li> </ul>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#clb","title":"CLB","text":"<p>CLB \u662f <code>FPGA</code> \u4e2d\u7684\u57fa\u7840\u903b\u8f91\u5355\u5143\u3002</p> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#sm","title":"SM","text":"<p>\u901a\u8fc7\u76f8\u5f53\u590d\u6742\u7684\u7b97\u6cd5\uff0c <code>SM</code> \u4f1a\u6839\u636e\u76ee\u6807\u903b\u8f91\uff0c\u9009\u62e9\u94fe\u63a5\u4e0d\u540c\u7684 <code>CLB</code> \u4ee5\u5b9e\u73b0\u590d\u6742\u903b\u8f91\u3002</p> <p>\u5b83\u5177\u6709\u8fd9\u4e9b\u57fa\u672c\u5c5e\u6027\uff1a</p> <ol> <li>Flexibility: \u8bc4\u4f30\u4e00\u6761\u7ebf\u53ef\u4ee5\u8fde\u63a5\u5230\u591a\u5c11\u7ebf\uff1b</li> <li>Topology: \u54ea\u4e9b\u7ebf\u53ef\u4ee5\u88ab\u8fde\u63a5\u5230\uff1b</li> <li>Routability: \u6709\u591a\u5c11\u56de\u8def\u53ef\u4ee5\u88ab\u8def\u7531\uff1b</li> </ol> <p></p>"},{"location":"ZJU_CS/DigitalDesign/Chap05/#iob","title":"IOB","text":"<p><code>IOB</code> \u7528\u6765\u5bf9\u5916\u90e8\u8bbe\u5907\u8fdb\u884c\u8fde\u63a5\uff0c\u7528\u6765\u63a7\u5236\u8f93\u5165\u548c\u8f93\u51fa\u3002</p> <p></p> <p>!!! note \"eg for <code>FPGA</code>\"     \u901a\u8fc7 <code>FPGA</code> \u5b9e\u73b0 $f=x_1x_2+\\overline{x_2x_3}$\uff1a</p> <pre><code>\u5206\u89e3\u95ee\u9898\uff1a\n$f_1 = x_1x_2,\\;\\;f_2=\\overline{x_2x_3},\\;\\;f=f_1+f_2$\u3002\n\n![](img/69.png)\n</code></pre> <p>\u5728\u8f6f\u4ef6\u5c42\u9762\u7f16\u7a0b\u5b8c\u540e\uff0c\u4f1a\u751f\u6210\u4f4d\u6d41\u6587\u4ef6(<code>bitfile</code>)\uff0c\u4e0b\u8f7d\u5230\u677f\u65f6\u4f1a\u66f4\u65b0 <code>FPGA</code> \u4e2d\u7684\u5185\u5bb9\u3002</p> <p>!!! summary \"\u7ec4\u5408\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u6cd5\"     \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e0d\u7ba1\u662f\u53ef\u91cd\u7f16\u7a0b\u8fd8\u662f\u4e0d\u53ef\u91cd\u7f16\u7a0b\uff0c\u90fd\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u8fdb\u884c\u4e00\u6b21\u5c0f\u7ed3\uff1a</p> <pre><code>1. `Decoder`s &amp; `OR` gates\n     - \u5c06\u8bd1\u7801\u51fa\u6765\u7684\u9700\u8981\u7684\u76ee\u6807\u7ec4\u5408\u90fd `OR` \u5728\u4e00\u8d77\uff1b\n2. `MUX`s\n     - \u901a\u8fc7\u591a\u8def\u9009\u62e9\u5668\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff1b \n3. `ROM`s\n4. `PAL`s\n5. `PLA`s\n6. `LUT`s\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/","title":"Chap 6 Registers &amp; Register Transfers","text":""},{"location":"ZJU_CS/DigitalDesign/Chap06/#_1","title":"\u5bc4\u5b58\u5668","text":"<p>\u5bc4\u5b58\u5668(registers) \u7c97\u7565\u7684\u6765\u8bf4\u5c31\u662f\u4e00\u5806\u89e6\u53d1\u5668\u4ee5\u53ca\u5bf9\u5e94\u7684\u72b6\u6001\u63a7\u5236\u7535\u8def\uff0c\u7528\u6765\u5b9e\u73b0\u591a\u4f4d\u6570\u636e\u7684\u5b58\u50a8\u7b49\u64cd\u4f5c\u3002</p> <p>\u5176\u4e2d\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u5bc4\u5b58\u5668\u53eb \u8ba1\u6570\u5668(counter)\uff0c\u975e\u5e38\u76f4\u767d\u7684\uff0c\u5b83\u7684\u884c\u4e3a\u5c31\u662f\u968f\u7740\u65f6\u949f\u5468\u671f\u4e0d\u65ad\u5728\u56fa\u5b9a\u7684\u72b6\u6001\u5e8f\u5217\u4e2d\u5faa\u73af\u3002\u66f4\u5f62\u8c61\u7684\uff0c\u4e00\u822c\u662f\u5b9e\u73b0\u81ea\u52a8\u7684\u8ba1\u6570\u529f\u80fd\uff0c\u50cf\u7535\u5b50\u65f6\u949f\u90a3\u6837\u3002</p> <p>Registers are useful for storing and manipulating \u63a7\u5236\uff0c\u64cd\u7eb5\uff0c\u5f71\u54cdinformation; counters are employed in circuits that sequence and control operations in a digital system.</p> <p>\u5b9e\u73b0\u5bc4\u5b58\u5668\u4e00\u4e2a\u6700\u76f4\u767d\u7684\u60f3\u6cd5\u5c31\u662f\u516c\u7528\u63a7\u5236\u7ebf\u8def\u548c\u5206\u5217\u6570\u636e\u7ebf\u8def\u6765\u63a7\u5236\u591a\u4e2a\u89e6\u53d1\u5668\uff0c\u5982\u4e0b\u56fe\u662f\u4f7f\u7528 D <code>FF</code> \u5b9e\u73b0\u7684\u4e00\u4e2a 4-bit register\uff1a</p> <p></p> <p>\u4e00\u4e2a\u5bc4\u5b58\u5668\u5305\u542b\u4e00\u7ec4\u89e6\u53d1\u5668\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u89e6\u53d1\u5668\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4f4d\u4fe1\u606f\uff0c\u56e0\u6b64\u7531n\u4e2a\u89e6\u53d1\u5668\u7ec4\u6210\u7684n\u4f4d\u5bc4\u5b58\u5668\u5c31\u53ef\u4ee5\u4fdd\u5b58n\u4f4d\u7684\u4e8c\u8fdb\u5236\u4fe1\u606f\u3002\u5728\u6700\u4e3a\u5e7f\u4e49\u7684\u5b9a\u4e49\u4e2d\uff0c\u4e00\u4e2a\u5bc4\u5b58\u5668\u7531\u4e00\u7ec4\u89e6\u53d1\u5668\u4ee5\u53ca\u5b9e\u73b0\u5176\u72b6\u6001\u8f6c\u6362\u7684\u95e8\u7535\u8def\u7ec4\u6210\uff0c\u8fd9\u79cd\u5e7f\u4e49\u5b9a\u4e49\u5305\u542b\u4e86\u7b2c4\u7ae0\u6240\u8bb2\u5230\u7684\u5404\u79cd\u65f6\u5e8f\u7535\u8def\u3002</p> <p>\u4e00\u822c\u800c\u8a00\uff0c\u5bc4\u5b58\u5668\u662f\u6307\u4e00\u7ec4\u7528\u4e8e\u5b8c\u6210\u7279\u5b9a\u6570\u636e\u5904\u7406\u4efb\u52a1\u7684\u89e6\u53d1\u5668\u4ee5\u53ca\u9644\u52a0\u7684\u7ec4\u5408\u95e8\u7535\u8def\u3002\u5176\u4e2d\uff0c\u89e6\u53d1\u5668\u7528\u6765\u9501\u5b58\u6570\u636e\uff0c\u800c\u95e8\u7535\u8def\u5219\u7528\u6765\u51b3\u5b9a\u8f93\u5165\u89e6\u53d1\u5668\u7684\u6570\u636e\u662f\u65b0\u7684\u8fd8\u662f\u7ecf\u8fc7\u8f6c\u6362\u7684\u3002  ==??==</p> <p>\u6211\u4eec\u79f0\u65b0\u6570\u636e\u88ab\u5199\u5165\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\u4e3a \u8f7d\u5165(load)\uff0c\u800c\u5982\u679c\u6240\u6709\u4f4d\u8f7d\u5165\u64cd\u4f5c\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u8109\u51b2\u4e2d\u5b8c\u6210\uff0c\u6211\u4eec\u79f0\u4e4b\u662f \u5e76\u884c(parallel) \u7684\u3002</p> <p>\u5bc4\u5b58\u5668\u548c\u8ba1\u6570\u5668\u4f5c\u4e3a\u65f6\u5e8f\u529f\u80fd\u6a21\u5757\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6570\u5b57\u7cfb\u7edf\uff0c\u5c24\u5176\u662f\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u8bbe\u8ba1\u4e2d\u5bc4\u5b58\u5668\u7528\u4e8e\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\u4fe1\u606f\uff0c\u800c\u8ba1\u6570\u5668\u5219\u4e3b\u8981\u7528\u4e8e\u5bf9\u6570\u5b57\u7cfb\u7edf\u4e2d\u7684\u64cd\u4f5c\u8fdb\u884c\u6392\u5e8f\u4e0e\u63a7\u5236\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_2","title":"\u4fdd\u6301","text":"<p>\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u56fe\u7684\u5bc4\u5b58\u5668\u5728\u6bcf\u4e2a\u65f6\u949f\u90fd\u5141\u8bb8\u8f7d\u5165\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u90fd\u4f1a\u6539\u53d8\u4e3a\u8f93\u5165\u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u5373\u4f7f\u6211\u4eec\u4e0d\u7ba1\u5b83\u5b83\u4e5f\u80fd\u4fdd\u6301\u4e4b\u524d\u7684\u503c\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u6848\u3002</p> <p>!!! tip \"\u65b9\u6848\"     === \"plan A\"     \u5176\u4e2d\u4e00\u4e2a\u505a\u6cd5\u662f\u9700\u8981\u9009\u62e9\u6027\u7684\u8ba9\u5b83\u8ddf\u968f\u65f6\u949f\u8109\u51b2\u5207\u6362\u72b6\u6001\u3002\u505a\u6cd5\u5c31\u662f\u5c06 Control \u4fe1\u53f7\u4fee\u6539\u4e3a $C = \\overline{Load} + Clock$\uff0c\u5982\u6b64\u800c\u6765\uff0c\u5f53 $Load = 0$ \u65f6\uff0c\u59cb\u7ec8\u6709 $C = 1$\uff0c\u8109\u51b2\u6d88\u5931\uff0c\u5bc4\u5b58\u5668\u65e0\u6cd5\u88ab\u8f7d\u5165\uff1b\u5f53 $Load = 1$ \u65f6\uff0c\u6709 $C = Clock$\uff0c\u3002\u5982\u4e0b\u56fe\uff0c\u8fd9\u79cd\u6280\u672f\u53eb \u95e8\u63a7\u65f6\u949f(clock gating)\u3002</p> <pre><code>\u4e3a\u4e86\u4f7f\u7535\u8def\u6b63\u5e38\u5de5\u4f5c\uff0cLoad\u5fc5\u987b\u5728Clock\u4e3a0\u671f\u95f4\u7a33\u5b9a\u5728\u6b63\u786e\u503c0\u62161\uff0c\u53ef\u4ee5\u8ba9Load\u4fe1\u53f7\u6765\u81ea\u65f6\u949f\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684\u89e6\u53d1\u5668\n\n![](img/96.png)\n\n\n=== \"plan B\"\n\u53e6\u5916\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u5728\u4e0d\u5e0c\u671b\u5b83\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4e0d\u65ad\u5c06\u5b83\u7684\u8f93\u5165\u8f7d\u5165\uff0c\u4e5f\u5c31\u662f\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a `MUX` \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u7528 `EN` \u4f7f\u80fd\u7aef\u6765\u9009\u62e9\u662f\u8f7d\u5165\u65b0\u503c\u8fd8\u662f\u4fdd\u6301\u4e4b\u524d\u7684\u503c\uff0c\u5982\u4e0b\u56fe\u3002\n\n![](img/97.png)\n\u5f53EN=1\u65f6\uff0c\u9009\u62e9\u6570\u636eD\u5e76\u52a0\u8f7d\u5230\u8be5\u5355\u5143;\u5f53EN=0\u65f6\uff0c\u9009\u62e9Q\uff0c\u8f93\u51fa\u4fe1\u53f7\u53cd\u9988\u52a0\u8f7d\u5230\u89e6\u53d1\u5668\uff0c\u4ee5\u4fdd\u7559\u8be5\u5355\u5143\u7684\u5f53\u524d\u72b6\u6001\u3002\n\n\u7531\u4e8eD\u89e6\u53d1\u5668\u4e0d\u50cf\u5176\u4ed6\u7c7b\u578b\u7684\u89e6\u53d1\u5668\uff0c**\u6ca1\u6709\u4fdd\u7559\u539f\u72b6\u6001\u7684\u8f93\u5165\u6761\u4ef6**\uff08\u56e0\u4e3a\u4e00\u5b9a\u662f\u76f8\u53cd\u7684 ==\u609f\u4e86\uff01==\uff09:\u5728\u6bcf\u4e2a\u65f6\u949f\u8109\u51b2\uff0c\u90fd\u662f\u7531D\u8f93\u5165\u51b3\u5b9a\u8f93\u51fa\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u4ece\u8f93\u51fa\u5230\u8f93\u5165\u7684\u53cd\u9988\u8fde\u63a5\u662f\u5fc5\u8981\u7684\u3002\u4e3a\u4e86\u4f7f\u8f93\u51fa\u4e0d\u53d8\uff0c\u6709\u5fc5\u8981\u4f7f D\u8f93\u5165\u7b49\u4e8e\u5f53\u524d\u7684\u8f93\u51fa\u3002\n</code></pre> <p>!!! warning \"clock skew\"     \u7136\u800c\uff0c\u5728\u95e8\u63a7\u65f6\u949f\u6280\u672f\u4e2d\uff0c\u7531\u4e8e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u903b\u8f91\u95e8\uff0c\u65f6\u949f\u8109\u51b2\u5230\u8fbe Control \u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u989d\u5916\u7684\u4f20\u64ad\u5ef6\u65f6\uff0c\u5373 \u65f6\u949f\u504f\u79fb(clock skew)\u3002\u800c\u8fd9\u5fae\u5c0f\u7684\u5ef6\u65f6\u4f1a\u5bfc\u81f4\u5728\u6574\u4e2a\u540c\u6b65\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u540c\u7ec4\u4ef6\u5f97\u5230\u7684\u65f6\u949f\u8109\u51b2\u6709\u504f\u5dee\uff0c\u800c\u8fd9\u662f\u6211\u4eec\u6240\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u3002\u6240\u4ee5\u5728\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5e94\u5f53\u907f\u514d\u6216\u5c3d\u53ef\u80fd\u7f29\u5c0f\u65f6\u949f\u504f\u79fb\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_3","title":"\u5bc4\u5b58\u5668\u5355\u5143","text":"<p>!!! info \"\u5c0f\u8282\u5bfc\u8bfb\"     \u672c\u5c0f\u8282\u5728\u4e66\u672c\u4e2d\u7684\u4f4d\u7f6e\u9760\u540e\uff0c\u4f46\u662f\u8003\u8651\u5230\u5185\u5bb9\u7684\u8fde\u7eed\u6027\u6211\u51b3\u5b9a\u63d0\u524d\uff0c\u672c\u8282\u5185\u5bb9\u4f1a\u6d89\u53ca\u4e00\u4e9b\u4e4b\u540e\u7684\u5185\u5bb9\uff0c\u5b9e\u9645\u4e0a\u7684\u7edd\u5bf9\u6027\u77e5\u8bc6\u8f83\u5c11\uff0c\u53ef\u4ee5\u7c97\u770b\u8fc7\u7559\u4e0b\u5370\u8c61\uff0c\u5927\u90e8\u5206\u77e5\u8bc6\u9700\u8981\u901a\u8fc7\u6848\u4f8b\u5206\u6790\u548c\u5b9e\u8df5\u83b7\u5f97\uff0c\u662f\u7c7b\u4f3c\u4e8e\u8bbe\u8ba1\u6307\u5bfc\u601d\u60f3\u7684\u5185\u5bb9\u3002</p> <p>!!! bug \"bug\"     \u8fd8\u4e0d\u4f1a\u8bbe\u8ba1\uff0c\u770b\u4e66\u4e0a\u4f8b\u5b50</p> <p>\u5bc4\u5b58\u5668\u5355\u5143(Register Cell) \u662f\u5bc4\u5b58\u5668\u7684\u4e2a\u4f53\u5355\u5143\uff0c\u4e3b\u8981\u5305\u62ec\u4e00\u4e2a <code>FF</code> \u53ca\u5b9e\u73b0\u5176\u7ec4\u5408\u903b\u8f91\u7684\u7ec4\u5408\u7535\u8def\u3002</p> <p>A single-bit cell of an iterative combinational circuit, connected to a flip-flop that provides the output, forms a two-state sequential circuit called a register cell</p> <p>\u5bf9\u4e8e n bits \u7684\u5bc4\u5b58\u5668\u5355\u5143\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u5176 1 bit \u7684\u5bc4\u5b58\u5668\u5355\u5143\uff0c\u5e76\u590d\u5236 n \u4efd\u5b9e\u73b0\u3002</p> <p>\u8bbe\u8ba1\u5bc4\u5b58\u5668\u5355\u5143\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5bc4\u5b58\u5668\u5355\u5143\u8fdb\u884c\u5b9a\u4e49\u3002\u800c\u6307\u5b9a(Specify)\u4e00\u4e2a\u5bc4\u5b58\u5668\u5355\u5143\u7684\u529f\u80fd\u7684\u4e3b\u8981\u6709\u8fd9\u4e9b\u65b9\u9762\uff1a</p> <ul> <li>\u5bc4\u5b58\u5668\u7684\u529f\u80fd\u51fd\u6570\uff1b<ul> <li>\u4e00\u822c\u6307\u5bc4\u5b58\u5668\u4f20\u8f93\uff1b</li> </ul> </li> <li>\u63a7\u5236\u4fe1\u53f7\u6784\u6210\uff1b<ul> <li>\u6709\u54ea\u4e9b\u63a7\u5236\u4fe1\u53f7\u3001\u662f\u5426\u7f16\u7801\u3001\u5982\u4f55\u51b3\u5b9a\u662f\u5426 Load \u7b49\uff1b</li> </ul> </li> <li>\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u6570\u636e\uff1b<ul> <li>\u6709\u54ea\u4e9b\u8f93\u5165\u6570\u636e\u3001\u662f\u5426\u9700\u8981\u9884\u5148\u5904\u7406\u7b49\uff1b</li> </ul> </li> </ul> <p>\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u5206\u4e3a <code>MUX</code> \u5b9e\u73b0\u548c\u65f6\u5e8f\u903b\u8f91\u5b9e\u73b0\u4e24\u79cd\u65b9\u6cd5\u3002</p> <p>\u524d\u8005\u5c31\u662f \u57fa\u4e8e Mux \u5b9e\u73b0\u4f20\u8f93 \u4e2d\u5c06\u8981\u63d0\u5230\u7684\u90a3\u6837\uff0c\u5173\u4e8e\u4e0a\u9762\u54ea\u4e9b\u5185\u5bb9\u5728\u8be5\u5c0f\u8282\u4e2d\u7684\u4f53\u73b0\u5982\u4e0b\u56fe\uff1b</p> <p></p> <p>\u4e5f\u5c31\u662f\u901a\u8fc7\u5206\u522b\u5b9e\u73b0\u903b\u8f91\uff0c\u7136\u540e\u901a\u8fc7\u63a7\u5236\u4fe1\u53f7\u9009\u62e9\u6570\u636e\u8f93\u5165\u6765\u5b9e\u73b0\u3002</p> <p>\u800c\u540e\u8005\u6309\u7167\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u786e\u5b9a\u72b6\u6001\u56fe\u540e\u6839\u636e\u72b6\u6001\u53d8\u5316\u8bbe\u8ba1\u65f6\u5e8f\u7535\u8def\uff0c\u8bbe\u8ba1\u4f18\u5316\u51b3\u5b9a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u7b2c\u56db\u7ae0#\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_4","title":"\u5bc4\u5b58\u5668\u4f20\u8f93","text":"<p>!!! warning \"\u8bf4\u660e\"     \u628a transfer \u7ffb\u8bd1\u4e3a\u201c\u4f20\u8f93\u201d\u662f\u6211\u8111\u74dc\u4e00\u62cd\u7684\u884c\u4e3a\uff0c\u6211\u5e76\u4e0d\u77e5\u9053\u7ffb\u8bd1\u6210\u4ec0\u4e48\u6bd4\u8f83\u5408\u9002\uff0c\u5982\u679c\u8bfb\u8005\u6709\u66f4\u597d\u7684\u7ffb\u8bd1\uff0c\u8bf7\u544a\u8bc9\u6211\uff01</p> <p>\u6570\u5b57\u7cfb\u7edf\uff1a \u4e00\u4e2a\u590d\u6742\u7cfb\u7edf\u9664\u4e86\u4fe1\u606f\u7684\u5b58\u50a8\u8fd8\u9700\u8981\u4fe1\u606f\u7684\u4f20\u8f93\u548c\u5904\u7406\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7075\u6d3b\u3001\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u9700\u8981\u4fe1\u606f\u4e4b\u95f4\u80fd\u591f\u5e7f\u6cdb\u5730\u4ea4\u4e92\u3002\u5927\u90e8\u5206\u7535\u5b50\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a \u63a7\u5236\u5355\u5143(Control Unit) \u6765\u8d1f\u8d23\u6307\u6325\uff08\u51b3\u5b9a\u6307\u4ee4\u7684\u5e8f\u5217\uff09 \u6570\u636e\u901a\u8def(Datapath) \u8fdb\u884c\u6570\u636e\u5904\u7406\u3002</p> <p>Datapaths are defined by their registers and the operations performed on binary data stored in the registers.</p> <p>\u6570\u636e\u901a\u8def\u7531\u4e00\u7ec4\u5bc4\u5b58\u5668\u4ee5\u53ca\u5bf9\u5bc4\u5b58\u5668\u4e2d\u6240\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u64cd\u4f5c\u6240\u5b9a\u4e49</p> <p>\u5bf9\u4e8e\u5bc4\u5b58\u5668\u81ea\u8eab\u800c\u8a00\uff0c\u5b83\u53ef\u80fd\u5b9e\u73b0 \u8f7d\u5165(load)\u3001\u6e05\u7a7a(clear)\u3001\u79fb\u4f4d(shift)\uff08\u5173\u4e8e\u8fd9\u91cc\u7684shift\u7684\u542b\u4e49\u6211\u5b58\u7591\uff09 \u548c \u8ba1\u6570(count) \u7b49\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u79fb\u52a8\u548c\u5904\u7406\uff0c\u88ab\u79f0\u4e3a \u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c(Register Transfer Operations)\uff0c\u5b83\u4eec\u4e3b\u8981\u5305\u542b\u8fd9\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u7cfb\u7edf\u4e2d\u7684\u5bc4\u5b58\u5668\u96c6\u5408\uff1b</li> <li>\u5bf9\u4e8e\u5bc4\u5b58\u5668\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u64cd\u4f5c\uff1b</li> <li>\u7cfb\u7edf\u4e2d\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\u7684\u63a7\u5236\uff1b</li> </ol> <p>\u4e00\u4e2a\u5bc4\u5b58\u5668\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u57fa\u672c\u64cd\u4f5c(elementary operation)\uff0c\u6bd4\u5982\u52a0\u8f7d\u3001\u8ba1\u6570\u3001\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u79fb\u4f4d\u3002 \u4f8b\u5982\uff0c\u53f3\u79fb\u5bc4\u5b58\u5668\u662f\u4e00\u4e2a\u80fd\u628a\u6570\u636e\u5f80\u53f3\u79fb\u4f4d\u7684\u5bc4\u5b58\u5668\u3002\u8ba1\u6570\u5668\u662f\u4e00\u4e2a\u6bcf\u6b21\u52a0\u4e00\u7684\u5bc4\u5b58\u5668\u3002<code>\u89e6\u53d1\u5668\u662f\u4e00\u4e2a\u80fd\u7f6e\u4f4d\u6216\u6e05\u96f6\u7684\u4e00\u4f4d\u5bc4\u5b58\u5668</code>\u3002==\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u4efb\u4f55\u65f6\u5e8f\u7535\u8def\u7684\u89e6\u53d1\u5668\u548c\u5176\u76f8\u5173\u8054\u7684\u95e8\u7535\u8def\u90fd\u80fd\u53eb\u4f5c\u5bc4\u5b58\u5668==</p> <p>\u5176\u4e2d\uff0c\u6700\u57fa\u7840\u7684\u90a3\u90e8\u5206\u64cd\u4f5c\u88ab\u79f0\u4e3a \u5fae\u64cd\u4f5c(microoperation)\uff0c\u5b83\u4eec\u662f\u5b9e\u73b0\u590d\u6742\u64cd\u4f5c\u7684\u57fa\u7840\uff0c\u4f8b\u5982\u5c06 R1 \u7684\u6570\u636e\u8f7d\u5165 R2\uff0c\u5c06 R1 \u548c R2 \u76f8\u52a0\uff0c\u6216\u662f\u81ea\u589e R1 \u7b49\u3002\u5b83\u4eec\u901a\u5e38\u4ee5\u6bd4\u7279\u5411\u91cf\u4e3a\u8f7d\u4f53\u5e76\u884c\u5b9e\u73b0\u7684\u3002</p> <p>\u672c\u7ae0\u4ecb\u7ecd\u5bc4\u5b58\u5668\u3001\u5bc4\u5b58\u5668\u7684\u5b9e\u73b0\u548c\u5bc4\u5b58\u5668\u4f20\u8f93\uff0c\u4f7f\u7528\u4e00\u79cd\u7b80\u5355\u7684\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00(RTL)\u6765\u63cf\u8ff0\u5bc4\u5b58\u5668\u5e76\u5b9a\u4e49\u5bf9\u5bc4\u5b58\u5668\u5b58\u50a8\u5185\u5bb9\u8fdb\u884c\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u8bed\u8a00\u4f7f\u7528\u4e00\u7ec4\u8868\u8fbe\u5f0f\u548c\u7c7b\u4f3cHDL\u53ca\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u53e5\u8fdb\u884c\u63cf\u8ff0\uff0c\u5b83\u80fd\u7b80\u5355\u5730\u5b9a\u4e49\u90e8\u5206\u6216\u5168\u90e8\u590d\u6742\u6570\u5b57\u7cfb\u7edf\uff0c\u6bd4\u5982\u4e00\u53f0\u8ba1\u7b97\u673a\u3002\u8fd9\u79cd\u5b9a\u4e49\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u7cfb\u7edf\u66f4\u52a0\u8be6\u7ec6\u7684\u8bbe\u8ba1\u57fa\u7840\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_5","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c &amp; \u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00","text":"<p>\u5bf9\u4e8e\u7b80\u5355\u7684\u65f6\u5e8f\u903b\u8f91\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u72b6\u6001\u673a\u7b49\u65b9\u5f0f\u6765\u63cf\u8ff0\u5b83\u4eec\u7684\u884c\u4e3a\uff0c\u4f46\u662f\u5bf9\u4e0e\u89c4\u6a21\u66f4\u5927\u7684\u7cfb\u7edf\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4ef6\u5f88\u75db\u82e6\u7684\u4e8b\u60c5\u3002\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u4e13\u6ce8\u4e8e\u884c\u4e3a\u903b\u8f91\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u5bc4\u5b58\u5668\u4f20\u8f93\u4e2d\u7684\u903b\u8f91\u884c\u4e3a\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00(Register Transfer Language)RTL\u3002</p> <p>\u901a\u5e38\u5177\u6709\u7279\u6b8a\u529f\u80fd\u7684\u5bc4\u5b58\u5668\u90fd\u4f1a\u7528\u5176\u540d\u79f0\u7f29\u5199\u5927\u5199\u8868\u793a\uff0c\u4f8b\u5982 AR(Address Register)\uff0cPC(Program Counter)\uff0cIR(Instruction Register) \u6216\u8005\u66f4\u666e\u901a\u7684 R2(Register 2)\u3002</p> <p>n\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u5355\u4e2a\u89e6\u53d1\u5668\u901a\u5e38\u4ece0\u5230n-1\u8fdb\u884c\u7f16\u53f7\u4ece\u6700\u4f4e\u4f4d0\u4f4d(\u901a\u5e38\u662f\u6700\u53f3\u7684\u4e00\u4f4d)\u5411\u6700\u9ad8\u4f4d\u9012\u589e\u3002\u7531\u4e8e0\u4f4d\u5728\u53f3\u7aef\uff0c\u56e0\u6b64\u8fd9\u79cd\u7f16\u53f7\u65b9\u5f0f\u79f0\u4e3a\u5c0f\u7aef(little-endian)\u683c\u5f0f\u5b58\u50a8\u3002\u53cd\u4e4b\uff0c0\u4f4d\u4f4d\u4e8e\u6700\u5de6\u7aef\uff0c\u5219\u79f0\u4e3a\u5927\u7aef(big-endian)\u683c\u5f0f\u5b58\u50a8\u3002</p> <p>reg [31:0] a; // 32\u4f4d\u5bc4\u5b58\u5668a,\u6bcf\u4e00\u4f4d\u4ee3\u8868\u4e00\u4e2a\u89e6\u53d1\u5668</p> <p>Little-endian &amp; Big-endian</p> <p>\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u4f1a\u7528\u8fd9\u4e9b\u5f62\u5f0f\u6765\u56fe\u5f62\u5316\u7684\u8868\u793a\u5bc4\u5b58\u5668\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u5e38\u89c1\u64cd\u4f5c\u7528 RTL \u8868\u793a\u65b9\u6cd5\u548c\u7b26\u53f7\u5982\u4e0b\uff1a</p> <p></p> <p>\u9017\u53f7\u4ee3\u8868\u540c\u65f6\u8fdb\u884c</p> <p>!!! warning \"warning\"     \u5bc4\u5b58\u5668\u540e\u9762\u7684\u4f4d\u662f\u7528\u5c0f\u62ec\u53f7\uff0c\u533a\u5206RTL\u4e0everilog</p> <p>==\u80cc== </p> <p>concatenation:\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u4e8b\u60c5\uff1f</p> <p>\u9700\u8981\u989d\u5916\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8868\u8fbe\u6761\u4ef6\u8bed\u53e5\uff0c\u4f8b\u5982\u6211\u4eec\u60f3\u8868\u8fbe\uff1a</p> <p>$$ if\\, (K_1 = 1) \\,then\\, (R2 \\leftarrow R1) $$</p> <p>\u5219\u53ef\u4ee5\u5199\u4e3a\uff1a</p> <p>$$ K_1 : R2 \\leftarrow R1 $$</p> <p> </p> <p>\u6211\u4eec\u6ce8\u610f\u5230\u5728\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u53e5\u4e2d\u5e76\u6ca1\u6709\u5c06\u65f6\u949f\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u5047\u8bbe\u6240\u6709\u7684\u4f20\u8f93\u64cd\u4f5c\u90fd\u51fa\u73b0\u5728\u65f6\u949f\u53d1\u751f\u8df3\u53d8\u7684\u60c5\u51b5\u4e0b\u3002\u5c3d\u7ba1\u63a7\u5236\u6761\u4ef6K1 \u5728t\u65f6\u523b\u5c31\u5df2\u88ab\u6fc0\u6d3b\uff0c\u4f46\u5b9e\u9645\u7684\u4f20\u8f93\u64cd\u4f5c\u662f\u5728\u89e6\u53d1\u5668\u88ab\u4e0b\u4e00\u4e2a\u4e0a\u5347\u6cbf\u89e6\u53d1\u65f6(\u65f6\u523bt+1)\u624d\u53d1\u751f\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_6","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0","text":"<p>!!! info \"\u5f15\u5165\"     \u5982\u4f55\u5b9e\u73b0\u5bc4\u5b58\u5668\u6240\u5b58\u50a8\u7684\u6570\u636e\u4e4b\u95f4\u7684\u5904\u7406\u4e0e\u4ea4\u4e92\u662f\u672c\u7ae0\u8282\u7684\u6838\u5fc3\u547d\u9898\u3002\u5982\u679c\u8bf4 \u5fae\u64cd\u4f5c \u5904\u7406\u7684\u662f\u6570\u636e\u4e4b\u95f4\u7684\u5904\u7406\uff0c\u90a3 \u5bc4\u5b58\u5668\u4f20\u8f93 \u5219\u7740\u773c\u4e8e\u6570\u636e\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</p> <pre><code>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5982\u4f55\u628a\u6570\u636e\u7ed9\u5230\u522b\u7684\u5bc4\u5b58\u5668\u3001\u5982\u4f55\u83b7\u53d6\u522b\u7684\u5bc4\u5b58\u5668\u7ed9\u5230\u7684\u6570\u636e\u3001\u5982\u4f55\u4f20\u8f93\u548c\u9009\u62e9\u8fd9\u4e9b\u6570\u636e\uff0c\u5c31\u662f\u672c\u5c0f\u8282\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\n\u7279\u522b\u7684\uff0c\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0 **[\u8f6c\u79fb](#\u8f6c\u79fb)** \u64cd\u4f5c\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#mux","title":"\u57fa\u4e8e MUX \u5b9e\u73b0\u4f20\u8f93","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5355\u4e00\u5bc4\u5b58\u5668\uff0c\u5b83\u7684 \u8f93\u5165 \u53ef\u80fd\u6709\u591a\u79cd\u6765\u6e90\uff0c\u4f8b\u5982\u5176\u5b83\u5bc4\u5b58\u5668\uff0c\u53c8\u6216\u8005\u662f\u5176\u4ed6\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5b83\u7684\u8f93\u5165\u5f88\u53ef\u80fd\u662f\u4e0d\u552f\u4e00\u7684\uff0c\u800c\u540c\u4e00\u65f6\u523b\u6211\u4eec\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u6765\u6e90\u7684\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 <code>MUX</code> \u6765\u5bf9\u8f93\u5165\u8fdb\u884c\u9009\u62e9\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355 \ud83c\udf30 \u5982\u4e0b\uff1a</p> <p></p> <p>\u7528\u8bed\u8a00\u6765\u63cf\u8ff0\u8fd9\u4e2a\u603b\u4f53\u67b6\u6784\u5c31\u662f\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217 one-hot \u7f16\u7801\uff08\u4e0d\u786e\u5b9a\uff0c\u4e5f\u8bb8\u53ef\u80fd\u90fd\u4e3a\u96f6\uff1f\u6211\u611f\u89c9\u53d6\u51b3\u4e8e \u4fdd\u6301 \u7684\u5b9e\u73b0\u3002\uff09\u6765\u8868\u793a\u9009\u62e9\u54ea\u4e2a\u8f93\u5165\u6e90\uff08\u4e0b\u56fe\u4e2d $K_0\\sim K_{n-1}$\uff09\uff0c\u518d\u901a\u8fc7 <code>Encoder</code> \u5c06\u5b83\u4eec\u7f16\u7801\u4f5c\u4e3a <code>MUX</code> \u7684\u8f93\u5165\u9009\u62e9\u4fe1\u53f7\uff08\u4e0b\u56fe\u4e2d $S_m \\sim S_0$\uff09\uff0c\u4ece\u591a\u4e2a\u8f93\u5165\u6e90\uff08\u4e0b\u56fe\u4e2d $0 \\sim k \\sim (n-1)$\uff09\u4e2d\u9009\u62e9\u5bf9\u5e94\u7684\u6e90\uff0c\u5e76\u8f93\u51fa\uff0c\u7ed9\u5230 R0\uff1b\u6b64\u5916\uff0c\u5c06\u9009\u62e9\u4fe1\u53f7\u90fd\u6216\u8d77\u6765\uff0c\u4f5c\u4e3a R0 \u7684 Load \u4fe1\u53f7\u8f93\u5165\u3002</p> <p></p> <p>\u5176\u4e2d <code>MUX</code> \u7684 $k \\sim (n-1)$ \u5b9e\u73b0\u4e86 \u8f6c\u79fb \u64cd\u4f5c\u3002</p> <p>!!! summary \"\u5c0f\u7ed3\"</p> <pre><code>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c`MUX` \u5b9e\u73b0\u4e3b\u8981\u7684\u5b9e\u73b0\u4e86 **\u591a\u5bf9\u4e00** \u7684\u6570\u636e\u4f20\u8f93\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u5355\u5355\u4f7f\u7528 `MUX` \u6765\u5b8c\u6210\u5bc4\u5b58\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\uff08\u5047\u8bbe\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u80fd\u76f8\u4e92\u4f20\u8f93\u6570\u636e\uff09\uff0c\u90a3\u5c06\u8fd9\u4e2a\u6a21\u578b\uff08\u56fe\u4f8b\u5728[\u4e0b\u4e00\u5c0f\u8282](#\u57fa\u4e8e\u603b\u7ebf\u5b9e\u73b0\u4f20\u8f93)\uff09\u62bd\u8c61\u540e\uff0c\u6211\u4eec\u5f97\u5230\u7684\u5c06\u662f\u4e00\u5f20\u201c**[\u5b8c\u5168\u56fe](https://zh.wikipedia.org/zh-cn/%E5%AE%8C%E5%85%A8%E5%9C%96)**\u201d\uff0c\u7136\u800c\u5b83\u8089\u773c\u53ef\u89c1\u7684\u5f00\u9500\u5927\u3002\n\n\u800c\u603b\u7ebf\u5219\u975e\u5e38\u5de7\u5999\u5730\u4f18\u5316\u4e86\u8fd9\u4e2a\u95ee\u9898\uff08\u5e76\u4e0d\u662f\u4e0a\u4f4d\u66ff\u4ee3\u5173\u7cfb\uff09\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_7","title":"\u57fa\u4e8e\u603b\u7ebf\u5b9e\u73b0\u4f20\u8f93","text":"<p>\u5728\u4e0a\u4e00\u5c0f\u8282\u7684\u5c0f\u7ed3\u4e2d\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86 <code>MUX</code> \u5b9e\u73b0\u7684\u4f18\u52a3\uff0c\u4e5f\u63d0\u5230\u4e86 \u603b\u7ebf(bus) \u4f20\u8f93\u7684\u4f18\u52bf\uff0c\u90a3\u4e48\u5b83\u5177\u4f53\u6765\u8bf4\u5176\u5b9e\u73b0\u65b9\u6cd5\u6709\u4e24\u79cd\u2014\u2014\u901a\u8fc7\u5171\u6709 <code>MUX</code> \u5b9e\u73b0\uff0c\u6216\u901a\u8fc7\u4e09\u6001\u95e8\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#mux_1","title":"\u5171\u6709 MUX \u5b9e\u73b0","text":"<p>\u8ba9\u6211\u4eec\u4ee5\u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u6a21\u578b\u4e3a\u4f8b\uff0c\u5bf9\u6bd4\u901a\u8fc7\u4e13\u6709 <code>MUX</code> \u5b9e\u73b0\u548c\u901a\u8fc7 \u5355\u4e00\u603b\u7ebf(single bus) \u5b9e\u73b0\u7684\u533a\u522b\uff1a</p> <p></p> <p>\u9996\u5148\u5bf9\u603b\u7ebf\u5b9e\u73b0\u8fdb\u884c\u8bf4\u660e\uff0c\u540c\u6837\u662f\u4f7f\u7528 <code>MUX</code>\uff0c\u4f46\u6b64\u65f6 <code>MUX</code> \u4e0d\u518d\u662f\u67d0\u4e2a\u5bc4\u5b58\u5668\u7684 \u4e13\u6709\u903b\u8f91(dedicated logic)\uff0c\u800c\u662f\u4e09\u4e2a\u5bc4\u5b58\u5668\u5171\u540c\u4f7f\u7528\u7684 \u5171\u6709\u903b\u8f91(shared logic)\u3002\u603b\u7ebf\u4e2d\u7684 <code>MUX</code> \u5728\u6240\u6709\u5bc4\u5b58\u5668\u7684\u8f93\u5165\u4e2d\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\uff0c\u5e76\u5c06\u5b83\u8f93\u51fa\uff0c\u7ed9\u5230\u6240\u6709\u5bc4\u5b58\u5668\uff1b\u800c\u603b\u7ebf\u901a\u8fc7\u63a7\u5236 Load \u4fe1\u53f7\u6765\u9009\u62e9\u8ba9\u54ea\u4e2a\uff08\u6216\u54ea\u4e9b\uff09\u5bc4\u5b58\u5668\u5f97\u5230\u8fd9\u4e2a\u4fe1\u53f7\u3002</p> <p>\u63a5\u4e0b\u6765\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4ee5\u603b\u7ebf\u5b9e\u73b0\u4e3a\u4e3b\u4f53\uff0c\u4e0e <code>MUX</code> \u5b9e\u73b0\u5bf9\u6bd4\uff1a</p> <ul> <li>\u4f18\u52bf\uff1a<ul> <li>\u7535\u8def\u66f4\u7cbe\u7b80\uff0c\u6210\u672c\u66f4\u4f4e\uff0c\u968f\u7740\u5bc4\u5b58\u5668\u589e\u52a0\u8fd9\u4e2a\u7279\u70b9\u66f4\u52a0\u660e\u663e\uff1b</li> </ul> </li> <li>\u52a3\u52bf\uff1a<ul> <li>\u540c\u4e00\u65f6\u523b\u5185\u603b\u7ebf\u53ea\u80fd\u4f20\u8f93\u4e00\u4e2a\u6570\u636e\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6e90(source)\uff1b<ul> <li>\u540c\u4e00\u65f6\u949f\u5468\u671f\u5185\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u80fd\u4f20\u8f93\u5230\u522b\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u4ea4\u6362\u64cd\u4f5c\u5c31\u9700\u8981\u81f3\u5c11\u4e24\u4e2a bus \u624d\u80fd\u5b9e\u73b0\uff1b</li> </ul> </li> </ul> </li> </ul> <p>\u800c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u70b9\uff0c\u6211\u4eec\u9700\u8981\u8bc4\u4f30\u6211\u4eec\u7684\u9700\u6c42\uff0c\u9009\u62e9\u5408\u9002\u7684\u7ed3\u6784\u6765\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_8","title":"\u4e09\u6001\u95e8\u5b9e\u73b0","text":"<p>\u4e09\u6001\u95e8\u7684\u76f8\u5173\u5185\u5bb9\u5df2\u7ecf\u5728\u524d\u9762\u4ecb\u7ecd\uff0c\u4f20\u8f93\u95e8\uff0c\u5173\u4e8e\u672c\u5c0f\u8282\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u91cd\u70b9\u5173\u6ce8 #\u4e09\u6001\u95e8/\u788e\u788e\u5ff5\u3002</p> <p>\u800c\u5173\u4e8e\u603b\u7ebf\u7684\u5b9e\u73b0\uff0c\u5f15\u7528\u4e00\u53e5\u6211\u5728 #\u4e09\u6001\u95e8/\u788e\u788e\u5ff5 \u91cc\u5199\u7684\u8bdd\uff1a</p> <p>\u53ea\u8981\u6211\u4eec\u8ba9\u5bfc\u7ebf\u7684\u82e5\u5e72\u8f93\u5165\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u4e0d\u5728\u300c\u9ad8\u963b\u6001\u300d\uff0c\u5c31\u80fd\u591f\u4f18\u96c5\u5730\u5b9e\u73b0\u591a\u8def\u8f93\u51fa\u4e92\u8054\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6240\u8c13\u7684\u4e09\u6001\u95e8\u5b9e\u73b0\u539f\u7406\u4e0a\u548c <code>MUX</code> \u5b9e\u73b0\u65e0\u4e8c\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u662f\u901a\u8fc7\u4e09\u6001\u95e8\u6765\u5b9e\u73b0\u300c\u8def\u7531\u300d\u8fd9\u4e2a\u903b\u8f91\u800c\u5df2\uff0c\u4e5f\u5c31\u662f\u4e66\u4e0a\u6240\u8bf4\u7684\uff1a</p> <p>Three-state buffer outputs can be connected together to form a multiplexed output line.</p> <p>\u4e0e <code>MUX</code> \u5b9e\u73b0\u76f8\u5bf9\u6bd4\uff0c\u4e09\u6001\u95e8\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fdb\u884c\u7b80\u5355\u8bf4\u660e\uff0c(c) \u4e2d\u5bf9\u4e09\u6001\u95e8\u7684\u8868\u793a\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u542b\u4e49\u53c2\u8003 (a)\u3002\u5b83\u60f3\u8868\u8fbe\u7684\u4e3b\u8981\u542b\u4e49\u662f\uff0c\u5f53 <code>EN</code> \u4e3a <code>1</code> \u65f6\uff0c\u8868\u793a\u8f93\u51fa\uff1b\u53cd\u4e4b\u8868\u793a\u8f93\u5165\uff08\u5f53\u7136\uff0c\u771f\u6b63\u51b3\u5b9a\u662f\u5426\u8bfb\u5165\u5bc4\u5b58\u5668\u7684\u8fd8\u662f <code>LD</code>\uff09\u3002</p> <p>??? question \"\u4e2a\u4eba\u7591\u60d1\"     \u4e66\u4e2d\u7684\u8868\u8ff0\u662f\uff1a</p> <pre><code>&gt; If the three-state buffers are enabled, then the lines are outputs; if the three-state buffers are disabled, then the lines can be inputs.\n\n\u4f46\u662f\u770b \\(a) \u7684\u8868\u8fbe\uff0c\u4e0d\u7ba1 `EN` \u662f\u4ec0\u4e48\uff0c\u5b83\u5e94\u5f53\u90fd\u6709\u8f93\u5165\u624d\u5bf9\uff0c\u771f\u6b63\u51b3\u5b9a\u662f\u5426\u8f93\u5165\u8fdb\u6765\u7684\u5e94\u8be5\u8fd8\u662f `LD`\uff1f\n</code></pre> <p>\u5bf9\u6bd4\u6765\u770b\uff0c\u4e09\u6001\u95e8\u7684\u5b9e\u73b0\u5927\u5927\u964d\u4f4e\u4e86\u603b\u7ebf\u7684\u5b9e\u73b0\u6210\u672c\uff0c\u7cbe\u7b80\u4e86\u7535\u8def\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u901a\u5e38\u6765\u8bf4\u66f4\u5e38\u7528\u3002</p> <p>??? note \"\u4e2a\u4eba\u60f3\u6cd5\"     \u867d\u7136\u4e66\u4e2d\u8bf4\u4e09\u6001\u95e8\u7684\u63a5\u7ebf\u6bd4 <code>MUX</code> \u7684\u5c11\u4e86\u4e00\u534a\uff0c\u4f46\u6211\u89c9\u7684\u4e09\u6001\u95e8\u53ea\u662f\u628a\u7ebf\u5206\u5c94\u7684\u5730\u65b9\u79fb\u52a8\u5230\u4e86\u5bc4\u5b58\u5668\u9644\u8fd1\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\u4e0d\u5982\u8bf4\u662f\u8282\u7701\u4e86\u5bfc\u7ebf\u7684\u957f\u5ea6\u3002\u4f46\u662f\u968f\u7740\u8f93\u5165\u7684\u589e\u52a0\uff0c<code>MUX</code> \u7684\u7ed3\u6784\u4f1a\u8d8a\u6765\u8d8a\u590d\u6742\u4e14\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\uff0c\u4f46\u4e09\u6001\u95e8\u53ea\u9700\u8981\u91cf\u7684\u589e\u52a0\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u786e\u5b9e\u662f\u66f4\u52a0\u5438\u5f15\u4eba\u3002\uff08\u5f53\u7136\uff0c\u867d\u7136\u4e66\u4e2d\u6ca1\u8bf4\uff0c\u4f46\u662f\u6211\u89c9\u5f97 Enable \u5fc5\u987b at most one-hot\uff0c\u800c\u8fd9\u90e8\u5206\u7684\u903b\u8f91\u5bf9\u4e8e\u4e24\u4e2a\u5b9e\u73b0\u65b9\u6cd5\u6765\u8bf4\u662f\u4e00\u6837\u7684\uff09</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_9","title":"\u5fae\u64cd\u4f5c\u53ca\u5176\u5b9e\u73b0","text":"<p>A microoperation is an elementary operation performed on data stored in registers or in memory. \u5bf9\u5bc4\u5b58\u5668\u5b58\u50a8\u6570\u636e\u6267\u884c\u7684\u57fa\u672c\u64cd\u4f5c\u79f0\u4f5c\u5fae\u64cd\u4f5c</p> <p>\u5fae\u64cd\u4f5c\u4e00\u822c\u5206\u4e3a\u8fd9\u56db\u79cd\uff1a</p> <p>1.\u4f20\u8f93\u5fae\u64cd\u4f5c\uff0ctransfer microoperations\uff0c\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u5bc4\u5b58\u5668\u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u5bc4\u5b58\u5668\uff1b 2. \u7b97\u672f\u5fae\u64cd\u4f5c\uff0carithmetic microoperations\uff0c\u5bf9\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u7684\u7b97\u672f\u8fd0\u7b97\u64cd\u4f5c\uff1b 3. \u903b\u8f91\u5fae\u64cd\u4f5c\uff0clogic microoperations\uff0c\u5bf9\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u7684\u903b\u8f91\u4f4d\u8fd0\u7b97\u64cd\u4f5c\uff1b 4. \u79fb\u4f4d\u5fae\u64cd\u4f5c\uff0cshift microoperations\uff0c\u5bf9\u6570\u636e\u7684\u79fb\u4f4d\u64cd\u4f5c\uff1b</p> <p>A given microoperation may be of more than one type. For example, a 1s complement operation is both an arithmetic microoperation and a logic microoperation. \u6c42\u53cd\u64cd\u4f5c\u65e2\u662f\u7b97\u672f\u5fae\u64cd\u4f5c\u4e5f\u662f\u903b\u8f91\u5fae\u64cd\u4f5c</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_10","title":"\u4f20\u8f93","text":"<p>\u4e0d\u6539\u53d8\u6570\u636e\u672c\u8eab\uff0c\u53ea\u662f\u4ece\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u628a\u6570\u636e\u79fb\u52a8\u5230\u53e6\u5916\u4e00\u4e2a\u5bc4\u5b58\u5668\u3002</p> <p>\u5c06 R1 \u4e2d\u7684\u6570\u636e\u8f6c\u79fb\u5230 R0 \u4e2d\uff0c\u7528 RTL \u8868\u793a\u5c31\u662f $R0 \\leftarrow R1$\u3002</p> <p>\u8fd9\u4e00\u90e8\u5206\u7684\u5b9e\u73b0\u9014\u5f84\u5728 \u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u5b9e\u73b0 \u5df2\u7ecf\u9610\u8ff0\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_11","title":"\u7b97\u672f","text":"<p>\u7b97\u672f\u8fd0\u7b97\u7684\u5b9e\u73b0\u53ef\u4ee5\u901a\u8fc7 \u52a0\u51cf\u6cd5\u5668 \u5b9e\u73b0\u3002 ==\u590d\u4e60\u52a0\u51cf\u6cd5\u5668==</p> <p>Multiplication and division are not listed in Table 6-3. Multiplication can be represented by the symbol * and division by /. These two operations are not included in the basic set of arithmetic microoperations because they are assumed to be implemented by sequences of basic microoperations. However, multiplication can be considered as a microoperation if implemented by a combinational circuit. In such a case, the result is transferred into a destination register at the clock edge after all signals have propagated through the entire combinational circuit</p> <p>!!! example \"\u52a0\u51cf\u6cd5\u5668\"     \u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\uff0c\u7528\u52a0\u6cd5\u5668\u5b9e\u73b0\u52a0\u51cf\u6cd5\u5668\uff0c\u5728 RTL \u548c\u6a21\u5757\u903b\u8f91\u7535\u8def\u7684\u7ef4\u5ea6\u4e0b\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8868\u793a\uff1a</p> <pre><code>$$\n\\begin{aligned}\n    &amp;\\overline{X}K_1:R_1\\leftarrow R_1 + R_2 \\\\\n    &amp;XK_1:R_1\\leftarrow R_1 + \\overline{R_2} + 1\n\\end{aligned}\n$$\n\n![](img/102.png)\n\n&lt;img alt=\"20240106151026.png\" src=\"img/Chap06/20240106151026.png\"&gt;\n\n&lt;img alt=\"20240106151315.png\" src=\"img/Chap06/20240106151315.png\"&gt;\n</code></pre> <p>!!! warning \"\u6ce8\u610f\"     \u5bf9\u4e8e\u5982\u4e0a\u51fa\u73b0\u7684\u5f62\u5f0f\u5982\uff1a$condition: reg \\leftarrow options one regs$ \u7684\u8868\u8fbe\u5f0f\uff0c<code>:</code> \u5de6\u4fa7\u51fa\u73b0\u7684 <code>+</code> \u8868\u793a\u6216\uff0c\u53f3\u4fa7\u7684\u5219\u8868\u793a\u52a0\uff08\u201c\u4e58\u201d\u4e5f\u662f\u8fd9\u6837\uff09\uff01</p> <p>\u76f8\u5bf9\u5e94\u7684\uff0c\u52a0\u51cf\u6cd5\u7684\u5b9e\u73b0\u53ef\u4ee5\u901a\u8fc7\u52a0\u51cf\u6cd5\u5668\u5b9e\u73b0\uff0c\u4e58\u6cd5\u53ef\u4ee5\u7528 \u4f4d\u79fb \u64cd\u4f5c\u5b9e\u73b0\uff0c\u800c\u9664\u6cd5\u76f8\u5bf9\u590d\u6742\u3002</p> <p>!!! note \"\u4e58\u6cd5\u5b9e\u73b0\u7684\u5927\u81f4\u601d\u8def\"     \u5047\u8bbe\u6211\u4eec\u9700\u8981\u8ba1\u7b97 $a \\cdot b$\uff0c\u4e14 $a$\uff0c$b$ \u90fd\u662f\u6574\u6570\uff0c\u5219\u53ef\u4ee5\u5c06 $b$ \u5199\u6210\u4e8c\u8fdb\u5236\u5f62\u5f0f $(b_{n-1}b_{n-2}...b_1b_0)_2$\uff0c\u4e8e\u662f\uff1a</p> <pre><code>$$\n\\begin{aligned}\n    a \\cdot b &amp;= a \\cdot (b_{n-1}b_{n-2}...b_1b_0)_2 \\\\\n              &amp;= a \\cdot \\left[ (b_{n-1}0...00)_2 + \\cdot (0b_{n-2}...00)_2 + ... + \\cdot (00...b_10)_2 + \\cdot(00...0b_0)_2 \\right]\\\\\n              &amp;= a \\cdot \\sum_{i = 0} ^{n-1} b_i \\cdot 2^{i} \\\\\n              &amp;= \\left(a \\cdot \\sum_{i = 0} ^{n-1} b_i\\right) \\;\\mathrm{&lt;&lt;}\\; i \\;\\;\\; \\text{where \"&lt;&lt;\" means \"Shift Left\"}\n\\end{aligned}\n$$\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u901a\u8fc7 **[\u4f4d\u79fb](#\u4f4d\u79fb)** \u7684\u76f8\u5173\u77e5\u8bc6\u6765\u5b9e\u73b0\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_12","title":"\u903b\u8f91","text":"<p>\u5f02\u6216\u903b\u8f91\u53ef\u4ee5\u505a\u5230\u6309\u4f4d\u53d6\u53cd\uff0c\u5e76\u4e14\u662f\u4e24\u4e2a\u6570\u76f8\u4e92\u4f5c\u7528</p> <p>\u903b\u8f91\u8fd0\u7b97\u7684\u5b9e\u73b0\u76f8\u6bd4\u7b97\u672f\u66f4\u52a0\u76f4\u63a5\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u903b\u8f91\u90fd\u53ef\u4ee5\u901a\u8fc7\u903b\u8f91\u95e8\u6765\u5b9e\u73b0\u3002</p> <p>\u6bcf\u4e00\u4e2a\u95e8\u5904\u7406\u4e00\u4f4d\u6570\u636e\u3002n\u4f4d\u5bc4\u5b58\u5668\u7684\u53d6\u53cd\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7n\u4e2a\u95e8\u5b9e\u73b0</p> <p>!!! note \"tips\"     \u800c\u627f\u62c5\u903b\u8f91\u548c\u7b97\u672f\u8fd0\u7b97\u7684\u786c\u4ef6\u6a21\u5757\uff0c\u4e00\u822c\u88ab\u79f0\u4e3a ALU\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_13","title":"\u4f4d\u79fb","text":"<p>\u4f4d\u79fb\u7684\u5b9e\u73b0\u901a\u8fc7 \u4f4d\u79fb\u5bc4\u5b58\u5668(Shift Register)SHR \u5b9e\u73b0\u3002 \u5177\u6709\u5355\u5411\u6216\u53cc\u5411\u79fb\u52a8\u5b58\u50a8\u6570\u636e\u529f\u80fd\u7684\u5bc4\u5b58\u5668\u79f0\u4f5c\u79fb\u4f4d\u5bc4\u5b58\u5668</p> <p>!!! info \"\u5f15\u5165\"     \u4f4d\u79fb\u64cd\u4f5c\u4ece\u672c\u8d28\u4e0a\u6765\u8bb2\uff0c\u662f\u901a\u8fc7 \u89e6\u53d1\u5668\u968f\u7740\u65f6\u949f\u8109\u51b2\uff0c\u5c06\u4e32\u884c\u6570\u636e\u4e00\u4f4d\u4e00\u4f4d\u5730\u79fb\u52a8 \u5b9e\u73b0\u7684\u3002\u4f46\u662f\u5982\u679c\u8bfb\u8005\u5c1a\u672a\u7406\u89e3\u5176\u5b9e\u73b0\u539f\u7406\uff0c\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\u521a\u5f00\u59cb\u53ef\u80fd\u4f1a\u89c9\u5f97\u6709\u4e9b\u83ab\u540d\u5176\u5999\uff0c\u4f46\u662f\u8bf7\u5148\u9605\u8bfb \u4e32\u884c\u5b9e\u73b0 \u548c \u5e76\u884c\u5316 \u7684\u5185\u5bb9\uff0c\u77e5\u9053\u5b83\u4eec\u7684\u884c\u4e3a\u540e\uff0c\u53ef\u4ee5\u5148\u6682\u65f6\u8df3\u8fc7 \u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668\uff0c\u518d\u6765\u770b\u672c\u8282\u672b\u5c3e\u7684\u603b\u7ed3\uff0c\u4e5f\u8bb8\u80fd\u591f\u8ba9\u60a8\u660e\u767d\u5b83\u7a76\u7adf\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_14","title":"\u4e32\u884c\u5b9e\u73b0","text":"<p>\u4f4d\u79fb\u64cd\u4f5c\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u53ea\u9700\u8981\u4e0e\u8f93\u5165\u6570\u76f8\u540c\u4f4d\u6570\u7684\u89e6\u53d1\u5668\u5b9e\u73b0\u3002\u6bcf\u4e00\u4e2a\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u8fde\u63a5\u4e0b\u4e00\u89e6\u53d1\u5668\u7684\u8f93\u5165\uff0c\u6240\u6709\u89e6\u53d1\u5668\u4f7f\u7528\u76f8\u540c\u7684\u65f6\u949f\u8109\u51b2\u8f93\u5165\u6765\u89e6\u53d1\u79fb\u4f4d\u64cd\u4f5c\u3002 </p> <p>\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u56db\u4e2a\u89e6\u53d1\u5668\u9996\u5c3e\u76f8\u8fde\uff0c\u6700\u524d\u9762 \u4e32\u884c\u8f93\u5165(Serial Input)SI \u6570\u636e\uff0c\u672b\u7aef\u5f97\u5230 \u4e32\u884c\u8f93\u51fa(Serial Output)SO\uff0c\u5728\u4e0d\u540c\u65f6\u949f\u5468\u671f\u7684\u504f\u5dee\u4e0b\uff0c\u8fde\u7eed\u8bfb\u5165\u7684 n bits \u5373\u4e3a\u4e0d\u540c\u4f4d\u6570\u4f4d\u79fb\u7684\u7ed3\u679c\u3002</p> <p>!!! example \"\u4e32\u884c\u4f4d\u79fb\u64cd\u4f5c\u5b9e\u73b0\u7684\u6a21\u62df\u89e3\u91ca\"     \u5047\u8bbe\u73b0\u5728\u6211\u4eec\u6709 4 \u4e2a <code>FF</code> \u9996\u5c3e\u76f8\u8fde\uff0c\u73b0\u5728\u4e32\u884c\u8f93\u5165 <code>1001</code> \u8fd9 4bits \u7684\u6570\u636e\uff08\u5f53\u7136\uff0c\u5b8c\u5168\u8f93\u5165\u9700\u8981 4 \u4e2a\u65f6\u949f\u5468\u671f\uff09\u3002</p> <pre><code>\u5047\u8bbe\u7b2c 1 \u4e2a\u5468\u671f\u7ed3\u675f\u540e\uff0c`1001` \u6700\u53f3\u4fa7\u7684 `1` \u88ab\u5b58\u5728\u4e86\u7b2c\u4e00\u4e2a FF\uff0c\u5219\uff1a\n\n|\u5468\u671f|\u5f85\u8f93\u5165|FF1|FF2|FF3|FF4|SO|\n|:--:|--:|:--:|:--:|:--:|:--:|:--:|\n|1|`100`|`1`|?|?|?|`1???`|\n|2|`10`|`0`|`1`|?|?|`01??`|\n|3|`1`|`0`|`0`|`1`|?|`001?`|\n|4| |`1`|`0`|`0`|`1`|`1001`|\n|5| |?|`1`|`0`|`0`|`?100`|\n|6| |?|?|`1`|`0`|`??10`|\n|7| |?|?|?|`1`|`???1`|\n\n\u8fd9\u91cc\u7684 SO \u6307\u7684\u662f\u4ece\u5f53\u524d\u8f6e\u6b21\u5f00\u59cb\uff0c\u8bfb\u5165 4bits \u6570\u636e\u5f97\u5230\u7684\u4e32\u884c\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd9\u91cc\u7684 4bits \u5f53\u7136\u662f\u5bf9\u5e94\u8f93\u5165\u7684 4bits\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c**\u5728\u7b2c\u56db\u8f6e\u524d\u540e\u7684\u7ed3\u679c\u5206\u522b\u662f\u5de6\u79fb\u548c\u53f3\u79fb\u7684\u7ed3\u679c**\uff0c\u5f53\u7136\uff0c\u5982\u679c\u662f\u8981\u8003\u8651\u5177\u6709\u5b9e\u9645\u8ba1\u7b97\u4ef7\u503c\u7684\u4f4d\u79fb\uff0c\u6211\u4eec\u5f53\u7136\u9700\u8981\u586b\u5145 `?` \u7684\u503c\uff0c\u4e0d\u8fc7\u8fd9\u90fd\u662f\u5c0f\u4e8b\u60c5\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_15","title":"\u5e76\u884c\u5316\uff08\u5177\u6709\u5e76\u884c\u52a0\u8f7d\u529f\u80fd\u7684\u79fb\u4f4d\u5bc4\u5b58\u5668\uff09","text":"<p>\u5982\u679c\u4e00\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u7684\u6240\u6709\u89e6\u53d1\u5668\u8f93\u51fa\u90fd\u662f\u53ef\u8bbf\u95ee\u7684\uff0c\u90a3\u4e48\u901a\u8fc7\u4e32\u884c\u79fb\u4f4d\u64cd\u4f5c\u8fdb\u5165\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u4ece\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u7aef\u5e76\u884c\u8bfb\u51fa\u3002 \u5982\u679c\u4e00\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u5177\u6709\u5e76\u884c\u52a0\u8f7d\u529f\u80fd\uff0c\u90a3\u4e48\u5e76\u884c\u8fdb\u4eba\u7684\u6570\u636e\u540c\u6837\u80fd\u591f\u4e32\u884c\u5730\u79fb\u4f4d\u8f93\u51fa\u3002\u56e0\u800c\uff0c\u5177\u6709\u53ef\u8bbf\u95ee\u7684\u89e6\u53d1\u5668\u8f93\u51fa\u4ee5\u53ca\u5e76\u884c\u52a0\u8f7d\u529f\u80fd\u7684\u79fb\u4f4d\u5bc4\u5b58\u5668\u80fd\u591f\u7528\u4e8e\u5b9e\u73b0\u5e76\u884c\u8f93\u5165\u6570\u636e\u5230\u4e32\u884c\u8f93\u51fa\u6570\u636e\u7684\u8f6c\u6362\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> <p>!!! note      \u5e76\u884c\u5316\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u9762\uff0c\u5373 \u5e76\u884c\u8f93\u51fa(parallel output) \u548c \u5e76\u884c\u8f7d\u5165(parallel load)\uff0c\u5206\u522b\u5bf9\u5e94\u7740 \u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u5468\u671f\u5185 \u5f97\u5230\u6bcf\u4e00\u4e2a <code>FF</code> \u7684\u7ed3\u679c \u548c \u5bf9\u6bcf\u4e00\u4e2a <code>FF</code> \u8f7d\u5165\u6570\u636e\u3002</p> <pre><code>**\u5e76\u884c\u8f93\u51fa**\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ed9\u6bcf\u4e00\u4e2a `FF` \u7684\u8f93\u51fa\u5f15\u51fa\u4e00\u6761\u7ebf\u5c31\u884c\u4e86\uff0c**\u5b83\u4e0e\u4e32\u884c\u8f93\u51fa\u53ef\u4ee5\u76f4\u63a5\u540c\u65f6\u5b58\u5728**\uff1b\u800c**\u5e76\u884c\u8f93\u5165\u5219\u4e0e\u4e32\u884c\u8f93\u5165\u51b2\u7a81**\uff0c\u4e00\u6b21\u53ea\u80fd\u5b9e\u73b0\u5176\u4e2d\u4e00\u4e2a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e9b\u63a7\u5236\u7535\u8def\uff1a\n</code></pre> <p></p> <p>\u770b\u8d77\u6765\u6709\u70b9\u590d\u6742\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u903b\u8f91\u8fd8\u662f\u5f88\u6e05\u6670\u7684\u3002</p> <ul> <li>\u7eb5\u5411\u89c2\u5bdf\u53f3\u4fa7\u7684\u56db\u4e2a <code>FF</code>\uff0c\u53ef\u4ee5\u53d1\u73b0\u57fa\u672c\u4e0a\u5c31\u662f\u4e32\u884c\u4f4d\u79fb\u5b9e\u73b0\uff0c\u53ea\u4e0d\u8fc7\u5176\u8f93\u5165\u4e0d\u518d\u662f\u76f4\u63a5\u4ece\u4e0a\u4e00\u4e2a <code>FF</code> \u90a3\u8fb9\u62ff\u6765\u7684\uff1b</li> <li>\u56db\u4e2a <code>FF</code> \u7684\u8f93\u5165\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u5173\u6ce8\u6700\u4e0a\u9762\u7684\u90a3\u4e09\u4e2a\u4e0e\u95e8\u548c\u4e00\u4e2a\u6216\u95e8\uff0c\u8868\u793a\u6570\u636e\u8f93\u5165\u6709\u4e09\u4e2a\u53ef\u80fd\u7684\u6765\u6e90\uff1b<ol> <li>\u7b2c\u4e00\u4e2a\u4e0e\u95e8\uff0c$F_i=Shift \\cdot SI$\uff08\u5bf9\u4e8e\u540e\u9762\u51e0\u4e2a <code>FF</code>\uff0c\u5219\u662f $F_i=Shift \\cdot FF_{i-1}$\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u4e0e \u4e32\u884c\u4f4d\u79fb\u5b9e\u73b0 \u4e00\u81f4\uff1b<ul> <li>\u5373 $Shift$ \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u6bcf\u4e2a\u5468\u671f\u6267\u884c\u4e00\u6b21\u4f4d\u79fb\u300d\uff1b</li> </ul> </li> <li>\u7b2c\u4e8c\u4e2a\u4e0e\u95e8\uff0c$F_i=\\overline{Shift} \\cdot Load \\cdot D_i$\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u662f\u4f7f\u7528\u6bd4\u7279\u5411\u91cf\u5bf9\u6bcf\u4e00\u4e2a <code>FF</code> \u8d4b\u503c\uff0c\u5373 \u5e76\u884c\u8f7d\u5165\uff1b<ul> <li>\u5373 $\\overline{Shift} \\cdot Load$ \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u5e76\u884c\u8f7d\u5165\u300d\uff1b</li> </ul> </li> <li>\u7b2c\u4e09\u4e2a\u4e0e\u95e8\uff0c$F_i=\\overline{Shift} \\cdot \\overline{Load} \\cdot Q_i$\uff0c\u6b64\u65f6\u7535\u8def\u7684\u884c\u4e3a\u662f\u4fdd\u6301\u4e0a\u4e00\u5468\u671f\u7684\u7ed3\u679c\uff1b<ul> <li>\u5373 $\\overline{Shift} \\cdot \\overline{Load}$ \u4e3a <code>1</code> \u65f6\uff0c<code>SHR</code> \u8868\u73b0\u4e3a\u300c\u4fdd\u6301\u300d\uff1b</li> </ul> </li> </ol> </li> </ul> <p>\u603b\u548c\u6765\u8bf4\uff0c\u5c31\u662f\uff1a</p> <p>$$ \\begin{aligned}       Shift :&amp; Q\\leftarrow \\mathrm{sl}\\; Q \\        \\overline{Shift}\\cdot Load :&amp; Q\\leftarrow D \\        \\overline{Shift}\\cdot \\overline{Load} :&amp; Q\\leftarrow Q \\end{aligned} $$</p> <p></p> <p>\u6ce8\u610f\uff1a\u662f\u5de6\u79fb\uff0cQ0\u662f\u6700\u4f4e\u4f4d</p> <p>!!! example \"\u5e94\u7528\"     \u79fb\u4f4d\u5bc4\u5b58\u5668\u5e38\u7528\u4e8e\u8fde\u63a5\u4e24\u4e2a\u8ddd\u79bb\u8f83\u8fdc\u7684\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u9700\u8981\u5728\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u4f20\u8f93n \u4f4d\u6570\u636e\u7684\u60c5\u5f62\u3002\u5982\u679c\u7ed3\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fc7\u5927\uff0c\u90a3\u4e48\u4f7f\u7528  \u6761\u7ebf\u5e76\u884c\u5730\u4f20\u8f93  \u4f4d\u6570\u636e\u5c31\u663e\u5f97\u592a\u8fc7\u6602\u8d35\u4e86\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7528\u4e00\u6761\u7ebf\u4e32\u884c\u5730\u4e00\u6b21\u4e00\u4f4d\u4f20\u9001n \u4f4d\u6570\u636e\u5c31\u8981\u7ecf\u6d4e\u5f97\u591a\u3002\u53d1\u9001\u65b9\u5c06n \u4f4d\u6570\u636e\u5e76\u884c\u52a0\u8f7d\u5230\u4e00\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\uff0c\u901a\u8fc7\u4e00\u6761\u516c\u7528\u7684\u8fde\u7ebf\u4e32\u884c\u5730\u5c06\u6570\u636e\u53d1\u9001\u5230\u63a5\u6536\u65b9\u3002\u63a5\u6536\u65b9\u4ee5\u7533\u884c\u65b9\u5f0f\u5c06\u6570\u636e\u63a5\u6536\u5230\u4e00\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u3002\u5f53n \u4f4d\u6570\u636e\u5168\u90e8\u63a5\u6536\u5b8c\u6bd5\u65f6\uff0c\u5c31\u53ef\u4ee5\u5e76\u884c\u5730\u4ece\u8be5\u5bc4\u5b58\u5668\u7684\u8f93\u51fa\u7aef\u8bfb\u51fa\u3002\u56e0\u800c\uff0c\u4f20\u9001\u65b9\u5b9e\u73b0\u4e86\u6570\u636e\u4ece\u5e76\u884c\u5230\u4e32\u884c\u7684\u8f6c\u6362\uff0c\u800c\u63a5\u6536\u65b9\u5219\u5b8c\u6210\u6570\u636e\u4ece\u4e32\u884c\u5230\u5e76\u884c\u7684\u8f6c\u6362\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_16","title":"\u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668","text":"<p>\u4e0a\u9762\u4ecb\u7ecd\u7684\u4f4d\u79fb\u5bc4\u5b58\u5668\u968f\u7740\u65f6\u949f\u5468\u671f\u7684\u4f9b\u7ed9\uff0c\u53ea\u80fd\u4e0d\u53ef\u9006\u3001\u5355\u5411\u5730\u8fdb\u884c\u4f4d\u79fb\uff0c\u8fd9\u79cd\u4f4d\u79fb\u5bc4\u5b58\u5668\u79f0\u4e3a \u5355\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668(Unidirectional SHR)\uff1b\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u80fd\u591f\u652f\u6301\u53ef\u63a7\u5236\u7684\u5de6\u79fb\u53f3\u79fb\uff0c\u5219\u88ab\u79f0\u4e3a \u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668(Bidirectional SHR)\u3002</p> <p>\u5176\u884c\u4e3a\u5982\u4e0b\uff1a</p> <p>$$ \\begin{aligned}     \\overline{S_0} \\cdot \\overline{S_1} :&amp; Q \\leftarrow Q\\     S_0 \\cdot \\overline{S_1} :&amp; Q\\leftarrow\\mathrm{Sl}\\; Q \\     \\overline{S_0} \\cdot S_1 :&amp; Q\\leftarrow\\mathrm{Sr}\\; Q \\     S_0 \\cdot S_1:&amp; Q\\leftarrow D \\end{aligned} $$</p> <p>\u67d0\u4e00\u7ea7\u5355\u5143\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u672c\u8d28\u4e0a\u5c31\u662f\u6dfb\u52a0\u4e86\u4e00\u4e2a <code>MUX</code> \u6765\u9009\u62e9\u4e0b\u4e00\u4e2a\u65f6\u949f\u662f\u7ee7\u627f $(i+1)$\u3001$(i-1)$\u3001$D_i$ \u8fd8\u662f $Q$\u3002</p> <p>\u56fe6-11b\u662f\u56fe6-11a \u4e2d\u53cc\u5411\u79fb\u4f4d\u5bc4\u5b58\u5668\u903b\u8f91\u56fe\u5bf9\u5e94\u7684\u7b26\u53f7\u8868\u793a\u56fe\u3002\u6ce8\u610f\uff0c\u5fc5\u987b\u4e3a\u8be5\u7535\u8def\u63d0\u4f9b\u5de6\u5411\u4e32\u884c\u8f93\u4eba\u4fe1\u53f7(LSI)\u548c\u53f3\u5411\u4e32\u884c\u8f93\u5165\u4fe1\u53f7(RSI)\u3002\u5982\u679c\u8981\u5f97\u5230\u4e32\u884c\u8f93\u51fa\u7ed3\u679c\uff0c\u5219\u53ef\u4ee5\u7528$Q_3$\u4f5c\u4e3a\u5de6\u79fb\u64cd\u4f5c\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u800c\u5c06$Q_0$\u7528\u4e8e\u53f3\u79fb\u64cd\u4f5c\u7684\u8f93\u51fa\u7ed3\u679c</p> <p>!!! note \"\u7efc\u5408\u9610\u8ff0\"     \u4ee3\u7801\u610f\u4e49\u4e0a\u7684\u4f4d\u79fb\u4e00\u822c\u6307\u7684\u662f\u4e00\u4e2a\u53cc\u76ee\u64cd\u4f5c\uff0c\u5373\u53ef\u4ee5\u6307\u5b9a\u4f4d\u79fb\u591a\u5c11\u4f4d\uff0c\u8fd9\u4e2a\u53c2\u6570\u88ab\u79f0\u4e3a \u4f4d\u79fb\u91cf(Shift Amount)\u3002</p> <pre><code>\u4f46\u5728\u786c\u4ef6\u5c42\u9762\u7684\u5b9e\u73b0\u4e0a\uff0c\u8fd9\u4e2a\u591a\u5c11\u201c\u4f4d\u201d\u53ea\u80fd\u901a\u8fc7\u5faa\u73af\u548c\u5df2\u7ecf\u5b9e\u73b0\u7684\u3001**\u6709\u9650\u79cd** \u786e\u5b9a\u4f4d\u79fb\u91cf\u7684\u4f4d\u79fb\u5b9e\u73b0\uff0c\u5728\u6211\u4eec\u63d0\u5230\u7684\u5b9e\u73b0\u4e2d\uff0c\u6307\u7684\u5c31\u662f\u6211\u4eec\u786c\u4ef6\u53ea\u5b9e\u73b0\u300c\u4e00\u4f4d\u4f4d\u79fb\u300d\uff0c\u5e76\u901a\u8fc7\u5faa\u73af\u5b9e\u73b0\u300c\u4efb\u610f\u4f4d\u4f4d\u79fb\u300d\uff0c\u800c\u8fd9\u4e2a\u201c\u5faa\u73af\u201d\uff0c\u5c31\u662f\u5728\u65f6\u949f\u5468\u671f\u4e0b\uff0c`FF` \u4e0d\u65ad\u7ee7\u627f\u4e0a\u4e00\u4e2a `FF` \u7684\u503c\u6765\u5b9e\u73b0\u7684\u3002\n\n\u800c\u5e76\u884c\u4e0e\u4e32\u884c\u5b9e\u73b0\u65e0\u975e\u662f\u4f53\u73b0\u8fd9\u4e2a\u7279\u5f81\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u800c\u5df2\u3002\n\n!!!- tip \"\u5173\u4e8e\u5e76\u884c\u548c\u4e32\u884c\"\n    \u8fd9\u662f\u4e00\u4e2a\u9898\u5916\u8bdd\uff0c\u6211\u6682\u65f6\u4e0d\u77e5\u9053\u653e\u54ea\u91cc\uff0c\u521a\u597d\u8fd9\u91cc\u63d0\u5230\u4e86\u5c31\u5728\u8fd9\u91cc\u8bf4\u4e86\u3002\n\n    \u5b9e\u9645\u4e0a\uff0c\u867d\u7136\u770b\u8d77\u6765\u5e76\u884c\u7684\u6548\u7387\u4f1a\u6bd4\u4e32\u884c\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f88\u591a\u9ad8\u901f\u4f20\u8f93\u8bbe\u5907\u6216\u534f\u8bae\u7528\u7684\u90fd\u662f\u4e32\u884c\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5e76\u884c\u5355\u6b21\u4f20\u8f93\u7ebf\u8def\u591a\uff0c\u7ebf\u8def\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c0f\uff0c\u5e72\u6270\u5927\uff0c\u6240\u4ee5\u76f8\u5bf9\u6765\u8bf4\u6b63\u5e38\u5de5\u4f5c\u6240\u4e0b\u5bf9\u9891\u7387\u7684\u8981\u6c42\u66f4\u9ad8\uff1b\u800c\u4e32\u884c\u7531\u4e8e\u53ef\u4ee5\u4f7f\u7528\u66f4\u9ad8\u7684\u9891\u7387\u5de5\u4f5c\uff0c\u6240\u4ee5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6548\u7387\u66f4\u9ad8\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_17","title":"\u8ba1\u6570\u5668","text":"<p>\u8ba1\u6570\u5668(counter) \u662f\u4ec0\u4e48\uff0c\u5df2\u7ecf\u5728 #\u5bc4\u5b58\u5668 \u4e2d\u89e3\u91ca\u4e86\uff0c\u6839\u636e\u5b9e\u73b0\u539f\u7406\uff0c\u4e3b\u8981\u5206\u4e3a \u884c\u6ce2\u8ba1\u6570\u5668(Ripple Counter) \u548c \u540c\u6b65\u8ba1\u6570\u5668(Synchronous Counter) \u4e24\u79cd\u3002</p> <p>\u5728\u8f93\u5165\u65f6\u949f\u8109\u51b2\u5e8f\u5217\u6fc0\u52b1\u4e0b\u904d\u5386\u6307\u5b9a\u72b6\u6001\u5e8f\u5217\u7684\u5bc4\u5b58\u5668\u79f0\u4e3a\u8ba1\u6570\u5668\u3002 \u904d\u5386\u7684\u72b6\u6001\u5e8f\u5217\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u5e8f\u5217\uff08\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\uff09\u6216\u8005\u5176\u4ed6\u5e8f\u5217\uff08\u5341\u8fdb\u5236\u8ba1\u6570\u5668\uff09\u8868\u793a\u3002 \u4e00\u4e2an\u4f4d\u7684\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u7531n\u4e2a\u89e6\u53d1\u5668\u7ec4\u6210\uff0c$0$~$2^{n-1}$</p> <p>\uff01\u8109\u51b2\u7684\u95f4\u9694\u5e76\u4e0d\u8981\u6c42\u662f\u56fa\u5b9a\u503c\uff0c\u53ea\u8981\u662f\u8109\u51b2\u5c31\u884c</p> <p>\u5728\u884c\u6ce2\u8ba1\u6570\u5668\u4e2d\uff0c\u67d0\u4e9b\u89e6\u53d1\u5668\u8f93\u51fa\u503c\u7684\u8df3\u53d8\u53ef\u4ee5\u6539\u53d8\u5176\u4ed6\u4e00\u4e9b\u89e6\u53d1\u5668\u4e2d\u7684\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u52a0\u8f7d\u5230\u67d0\u4e9b\u89e6\u53d1\u5668 C\u8f93\u4eba\u7aef\u7684\u503c\u4e0d\u662f\u516c\u7528\u7684\u65f6\u949f\u8109\u51b2\uff0c\u800c\u662f\u5176\u4ed6\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u4fe1\u53f7\u3002\u800c\u5728\u540c\u6b65\u8ba1\u6570\u5668\u4e2d\uff0c\u6240\u6709\u89e6\u53d1\u5668\u7684 C\u8f93\u4eba\u7aef\u90fd\u662f\u52a0\u8f7d\u7684\u516c\u7528\u65f6\u949f\u8109\u51b2\uff0c\u5e76\u4e14\u8ba1\u6570\u5668\u4e0b\u4e00\u72b6\u6001\u7684\u503c\u53d6\u51b3\u4e8e\u5176\u5f53\u524d\u6240\u5904\u7684\u72b6\u6001\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_18","title":"\u884c\u6ce2\u8ba1\u6570\u5668","text":"<p>\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5c06\u4e00\u4e2a\u4e0d\u65ad\u81ea\u53cd\u7684 <code>FF</code> \u7684\u8f93\u51fa\u76f4\u63a5\u6216\u95f4\u63a5\u4f5c\u4e3a\u4e0b\u4e00\u4e2a <code>FF</code> \u7684\u65f6\u949f\u8109\u51b2\u3002\u7531\u4e8e\u5f62\u6210\u4e00\u6b21\u8109\u51b2\u9700\u8981\u4e00\u5bf9 <code>0</code>&amp;<code>1</code>\uff0c\u6240\u4ee5\u524d\u4e00\u4e2a <code>FF</code> \u53d6\u53cd\u4e24\u6b21\u624d\u80fd\u5f15\u8d77\u4e0b\u4e00\u4e2a <code>FF</code> \u53d6\u53cd\u4e00\u6b21\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a <code>FF</code> \u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u4ece <code>1</code> \u53d8 <code>0</code> \u65f6\u89e6\u53d1\uff0c\u90a3\u4e24\u4e2a <code>FF</code> \u7684\u53d8\u5316\u521a\u597d\u5bf9\u5e94\u4e8e\u4e8c\u8fdb\u5236\u81ea\u589e\u7684\u8fdb\u4f4d\u89c4\u5f8b\uff1a<code>(0,0)</code>\uff0c<code>(0,1)</code>\uff0c<code>(1,0)</code>\uff0c<code>(1,1)</code>\uff0c<code>0,0</code>\uff0c...</p> <p>\u4e8e\u662f\uff0c\u4e00\u4e2a 4-Bit \u884c\u6ce2\u8ba1\u6570\u5668\u7684\u903b\u8f91\u56fe\u5c31\u5982\u4e0b\uff1a</p> <p>{ width=200px }</p> <p>!!! note \"\u5173\u4e8e\u6b63\u5411\u8ba1\u6570\u548c\u9006\u5411\u8ba1\u6570\"      - \u4e0a\u56fe\u4e2d\uff0c\u4e0b\u4e00\u4e2a <code>FF</code> \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u53d6\u53cd\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e==\u4e0a\u5347==\u6cbf\u89e6\u53d1\u7684 <code>FF</code> \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a <code>FF</code> \u4f1a\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u7684\u8f93\u51fa\u4ece <code>1</code> \u5230 <code>0</code> \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f \u6b63\u5411\u8ba1\u65f6(Upward Counting)\uff1b</p> <pre><code> - \u53cd\u4e4b\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a `FF` \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a `FF` \u7684\u76f4\u63a5\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 `FF` \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a `FF` \u4f1a\u5728\u4e0a\u4e00\u4e2a `FF` \u7684\u8f93\u51fa\u4ece `0` \u5230 `1` \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f**\u9006\u5411\u8f93\u51fa(Downward Counting)**\uff1b\n</code></pre> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u4f18\u70b9\u662f\u7535\u8def\u7b80\u5355\uff0c\u6210\u672c\u4f4e\uff1b\u4f46\u662f\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u65e2\u7136\u5b83\u4e0e\u540c\u6b65\u8ba1\u6570\u5668\u76f8\u533a\u5206\uff0c\u5c31\u8bf4\u660e\u5b83\u4e0d\u662f\u540c\u6b65\u7535\u8def\uff0c\u6bcf\u4e00\u4e2a <code>FF</code> \u90fd\u4f1a\u6709\u4f20\u64ad\u5ef6\u65f6\uff0c\u968f\u7740\u8ba1\u6570\u8303\u56f4\u589e\u5927\uff0c\u603b\u4f20\u64ad\u5ef6\u65f6\u4e5f\u4f1a\u589e\u52a0\uff0c\u800c\u4e3a\u4e86\u8ba9\u7535\u8def\u6b63\u5e38\u5de5\u4f5c\uff0c\u65f6\u949f\u9891\u7387\u4e5f\u8981\u56e0\u6b64\u4e0b\u964d\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e9b\uff0c\u4e66\u4e0a\u5bf9\u884c\u6ce2\u8ba1\u6570\u5668\u7684\u8bc4\u4ef7\u662f\u591a\u6570\u60c5\u51b5\u4e0b\u884c\u6ce2\u52a0\u6cd5\u5668\u53ea\u4f1a\u5728\u4f4e\u529f\u8017\u7535\u8def\u4e2d\u88ab\u91c7\u7528\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_19","title":"\u540c\u6b65\u8ba1\u6570\u5668","text":"<p>\u540c\u6b65\u8ba1\u6570\u5668\u4ece\u5b9e\u73b0\u81ea\u589e\u7684\u539f\u7406\u4e0a\u6765\u8bf4\uff0c\u548c\u884c\u6ce2\u8ba1\u6570\u5668\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u540c\u6837\u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u5b8c\u6210\u4e00\u6b21\u7ffb\u8f6c\u7684\u65f6\u5019\u8ba9\u4e0b\u4e00\u4e2a <code>FF</code> \u53d8\u5316\u3002\u53ea\u4e0d\u8fc7\u540c\u6b65\u8ba1\u6570\u5668\u4e0d\u662f\u63a7\u5236\u65f6\u949f\uff0c\u800c\u662f\u63a7\u5236\u300c<code>FF</code> \u5185\u7684\u503c\u662f\u5426\u53d6\u53cd\u300d\u6765\u5b9e\u73b0\uff0c\u800c\u5b83\u662f\u901a\u8fc7\u5f02\u6216\u95e8\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c$0 \\;\\mathrm{XOR}\\; X = X$\uff0c\u800c $1 \\;\\mathrm{XOR}\\; X = \\overline{X}$\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236 <code>XOR</code> \u7684\u67d0\u4e2a\u8f93\u5165\u662f <code>0</code> \u8fd8\u662f <code>1</code> \u6765\u5b9e\u73b0\u53d6\u53cd\u8fd8\u662f\u4fdd\u6301\u7684\u5207\u6362\u3002</p> <p>\u4e0d\u8fc7\u9700\u8981\u533a\u5206\u7684\u662f\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u662f\u5728\u4e0a\u4e00\u4e2a <code>FF</code> \u53d8\u5316\u5b8c\u624d\u5f71\u54cd\u4e0b\u4e00\u4e2a\u7684\uff0c\u6240\u4ee5\u662f <code>1</code> \u53d8 <code>0</code> \u65f6\u9700\u8981\u8fdb\u4f4d\uff1b\u800c\u540c\u6b65\u8ba1\u6570\u5668\u7684\u6240\u6709 <code>FF</code> \u662f\u4e00\u8d77\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u53ea\u6709\u5728\u524d\u9762\u90fd\u662f <code>1</code> \u65f6\u5019\uff0c\u8868\u793a\u4e0b\u4e00\u523b\u5b83\u4eec\u90fd\u8981\u8fdb\u4f4d\u4e86\uff0c\u5f53\u524d <code>FF</code> \u624d\u8fdb\u4f4d\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u884c\u6ce2\u8ba1\u6570\u5668\u662f\u5efa\u7acb\u5728\u524d\u4e00\u4e2a <code>FF</code> \u7684\u7ed3\u679c\u8fdb\u884c\u53d8\u5316\uff1b\u800c\u5e76\u884c\u52a0\u6cd5\u5668\u662f\u5efa\u7acb\u5728\u4e0a\u4e00\u523b\u6240\u6709\u5173\u8054 <code>FF</code> \u7684\u72b6\u6001\uff0c\u5bf9\u4e0b\u4e00\u72b6\u6001\u7684\u9884\u5224\u3002</p> <p>\u5728\u8fd9\u57fa\u7840\u4e0a\uff0c\u540c\u6b65\u8ba1\u6570\u5668\u7684 \u81ea\u589e\u5668(incrementer) \u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <p></p> <p>(b) \u7684\u84dd\u8272\u90e8\u5206\u66ff\u6362 (a) \u7684\u84dd\u6846\u90e8\u5206\u4e3a\u7b2c\u4e8c\u79cd\u3002\u4e24\u79cd\u5206\u522b\u4e3a \u95e8\u4e32\u884c\u5b9e\u73b0 \u548c \u95e8\u5e76\u884c\u5b9e\u73b0\u3002</p> <p>\u4e24\u79cd\u5b9e\u73b0\u5176\u5b9e\u539f\u7406\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u95e8\u4e32\u884c\u727a\u7272\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u6548\u7387\uff0c\u8282\u7ea6\u4e86\u95e8\u6210\u672c\uff1b\u800c\u95e8\u5e76\u884c\u63d0\u9ad8x\u4e86\u95e8\u6210\u672c\uff0c\u51cf\u5c11\u4e86\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u95e8\u5ef6\u8fdf\u3002</p> <p>\u6839\u636e\u662f\u4e32\u884c\u95e8\u63a7\u8fd8\u662f\u5e76\u884c\u95e8\u63a7\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u540c\u6b65\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u5206\u4e3a\u4e32\u884c\u8ba1\u6570\u5668\u548c\u5e76\u884c\u8ba1\u6570\u5668\u3002</p> <p>\u5f53\u7136\uff0c\u65e2\u7136\u4f7f\u7528\u7684\u662f\u81ea\u589e\u5668\uff0c\u90a3\u4e48\u5b9e\u73b0\u7684\u81ea\u7136\u5c31\u662f\u6b63\u5411\u8ba1\u6570\u5668\u3002\u4e3a\u4e86\u5b9e\u73b0\u9006\u5411\u8ba1\u6570\u5668\uff0c\u6211\u4eec\u5219\u9700\u8981\u5c06\u81ea\u589e\u5668\u6362\u4e3a\u81ea\u51cf\u5668\u3002\u505a\u6cd5\u53ea\u4e0d\u8fc7\u662f\u5c06\u5f02\u6216\u95e8\u7684\u63a7\u5236\u4fe1\u53f7\u53d6\u53cd\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u8f93\u5165\u51fd\u6570\u53d8\u4e3a\uff1a</p> <p>$$ \\begin{aligned}     D_{A0} = &amp; Q_0 \\oplus EN \\     D_{A1} = &amp; Q_1 \\oplus \\left(         (Q_0 \\cdot \\overline{S} + \\overline{Q_0} \\cdot S) \\cdot EN     \\right) \\     D_{A2} = &amp; Q_2 \\oplus \\left(         (Q_0 \\cdot Q_1 \\cdot \\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot S) \\cdot EN     \\right) \\     D_{A3} = &amp; Q_3 \\oplus \\left(         (Q_0 \\cdot Q_1 \\cdot Q_2 \\cdot \\overline{S} + \\overline{Q_0} \\cdot \\overline{Q_1} \\cdot \\overline{Q_2} \\cdot S) \\cdot EN     \\right) \\end{aligned} $$</p> <p>\u4ece\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u7565\u5fae\u611f\u53d7\u5230\u95e8\u4e32\u884c\u548c\u95e8\u5e76\u884c\u7684\u533a\u522b\u7a76\u7adf\u5728\u54ea\u91cc\uff0c\u5b83\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u591a\u4f4d <code>AND</code> \u8fd0\u7b97\u3002</p> <p>!!! question     \u5e76\u884c\u52a0\u6cd5\u5668\u4e0e\u51cf\u6cd5\u5668\u662f\u4ec0\u4e48</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_20","title":"\u540c\u6b65\u8f7d\u5165\uff08\u5177\u6709\u540c\u6b65\u52a0\u8f7d\u529f\u80fd\u7684\u540c\u6b65\u8ba1\u6570\u5668\uff09","text":"<p>\u8fd9\u91cc\u540c\u6b65\u8f7d\u5165\u7684\u542b\u4e49\u53ef\u4ee5\u540c \u4f4d\u79fb\u5bc4\u5b58\u5668\u7684\u5e76\u884c\u8f7d\u5165 \u7c7b\u6bd4\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u5c06\u8ba1\u6570\u5668\u7684\u5f53\u524d\u503c\u8bbe\u4e3a\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u7684\u521d\u59cb\u503c\u3002</p> <p>\u4ee5\u95e8\u4e32\u884c\u5b9e\u73b0\u4e3a\u4f8b\uff0c\u6dfb\u52a0\u529f\u80fd\u63a7\u5236\u903b\u8f91\u540e\u7684\u8bbe\u8ba1\u5982\u4e0b\uff1a</p> <p></p> <p>\u524dn\u4e2a\u4f7f\u80fd\u903b\u8f91\u4e0e\u8f93\u5165Load\u76f8\u8fde\uff0c\u51b3\u5b9a\u662f\u5426\u5e76\u884c\u52a0\u8f7d\u6570\u636eD \u53e6\u5916n\u4e2a\u4f7f\u80fd\u903b\u8f91\u4e0eLoadn\u76f8\u8fde\uff0cLoad\u4e3a1\u7684\u65f6\u5019\uff0c\u9501\u5b58\u4e0e\u6280\u672f\u90fd\u65e0\u6cd5\u8fdb\u884c\uff0c\u800cLoad\u4e3a0\u7684\u65f6\u5019\u6070\u597d\u76f8\u53cd     Count = 1\u65f6\uff0c\u6267\u884c\u8ba1\u6570\u64cd\u4f5c     Count = 0\u65f6\uff0c\u6267\u884c\u9501\u5b58\u64cd\u4f5c</p> <p>!!! question     \u5f53\u4e3a11\u7684\u65f6\u5019\u5462\uff1f     \u663e\u7136\u56e0\u4e3aLoadn = 0\uff0c\u4e0d\u6267\u884c\u6280\u672f\u64cd\u4f5c\uff0c\u53ef\u4ee5\u6267\u884c\u52a0\u8f7d\u64cd\u4f5c\uff0c     \u4f46\u662f\u56e0\u4e3aCount = 1\uff0c\u8fdb\u4f4d\u94fe\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\uff0cCO\u4f1a\u53d8\u62101\uff1b\u4f46\u662f\uff0c\u8ba1\u6570\u5668\u4e0d\u5904\u4e8e\u6267\u884c\u72b6\u6001\u7684\u65f6\u5019\uff0c\u8fdb\u4f4d\u94fe\u5e94\u5f53\u4e3a0\uff01</p> <p>!!! solution     \u5728Count\u8f93\u4eba\u4fe1\u53f7\u524d\u52a0\u8f7d\u4e00\u4e2a$\\overline{Load}$\u4f7f\u80fd\u4fe1\u53f7\uff0c\u5f53Load=1\u65f6\uff0c$\\overline{Load}=0$\uff0c\u8fd9\u5c06\u4f7fCount\u4fe1\u53f7\u65e0\u6cd5\u52a0\u8f7d\u5230\u8fdb\u4f4d\u94fe\u4e2d\uff0c\u4e5f\u56e0\u6b64\u4f7f\u5f97 CO\u8f93\u51fa\u4e3a0\u3002\u5bf9\u4e8e\u8f93\u4eba\u7ec4\u5408 11\uff0c\u8ba1\u6570\u5668\u6267\u884c\u52a0\u8f7d\u64cd\u4f5c\uff0c\u5bf9\u6b64\u6211\u4eec\u79f0\u52a0\u8f7d\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8ba1\u6570\u64cd\u4f5c\u3002\u5bf9\u4e8e\u75314\u4f4d\u7684\u8ba1\u6570\u5668\u6269\u5c55\u6210\u76844n\u4f4d\u8ba1\u6570\u5668\uff0c\u7b2c\u4e00\u7ea7\u7684Count\u8f93\u5165\u63a5\u5165\u4e00\u4e2a\u8ba1\u6570\u63a7\u5236\u8f93\u5165\u4fe1\u53f7\uff0c\u800c\u4e4b\u540e\u6bcf\u4e00\u7ea7\u7684Count\u8f93\u4eba\u5219\u662f\u4e0e\u4e0a\u4e00\u7ea7\u7684CO\u8f93\u51fa\u76f8\u8fde\u3002\u5177\u6709\u5e76\u884c\u52a0\u8f7d\u529f\u80fd\u7684\u8ba1\u6570\u5668\u5728\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u8bbe\u8ba1\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u4f5c\u4e3a\u5177\u6709\u5e76\u884c\u52a0\u8f7d\u529f\u80fd\u548c\u9012\u589e\u529f\u80fd\u7684\u5bc4\u5b58\u5668\u6765\u4f7f\u7528\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_21","title":"\u4efb\u610f\u8ba1\u6570\u5e8f\u5217","text":"<p>\u73b0\u5728\u8ba9\u6211\u4eec\u56de\u5f52\u8ba1\u6570\u5668\u7684\u884c\u4e3a\uff1a\u968f\u7740\u65f6\u949f\u5468\u671f\u4e0d\u65ad\u5728\u56fa\u5b9a\u7684\u72b6\u6001\u5e8f\u5217\u4e2d\u5faa\u73af\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u5e8f\u5217\u672a\u5fc5\u9700\u8981\u662f\u6574\u6570\u81ea\u589e\u81ea\u51cf\u5e8f\u5217\u3002\u800c\u5b9e\u73b0\u67d0\u4e00\u5e8f\u5217\u7684\u8ba1\u6570\u884c\u4e3a\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u8bbe\u8ba1\u597d\u6709\u9650\u72b6\u6001\u548c\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u4e2a\u8bdd\u9898\u592a\u8fc7\u5bbd\u6cdb\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5177\u4f53\u8ba8\u8bba\u7684\u8fd8\u662f\u6574\u6570\u81ea\u589e\u5e8f\u5217\uff0c\u53ea\u4e0d\u8fc7\u9650\u5236\u4e86\u4e0a\u4e0b\u754c\u3002\u4e66\u4e0a\u63d0\u4f9b\u7684\u6848\u4f8b\u662f BCD \u7801\u7684\u5faa\u73af\u8ba1\u6570\uff0c\u90a3\u6211\u4eec\u4e5f\u8ddf\u7740\u8fd9\u4e2a\u6848\u4f8b\u6765\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#bcd","title":"BCD \u7801\u5faa\u73af\u8ba1\u6570","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u6839\u636e\u65f6\u5e8f\u7535\u8def\u7684\u8bbe\u8ba1\u89c4\u5219\uff0c\u641e\u6e05\u695a\u72b6\u6001\u5e8f\u5217\uff0c\u663e\u7136\uff0c\u6839\u636e BCD \u7801\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u6bdb\u6bdb\u5730\u8ba4\u4e3a\u5b83\u662f\u4e0b\u786e\u754c\u4e3a <code>0</code>\uff0c\u4e0a\u786e\u754c\u4e3a <code>9</code> \u7684 4 \u6bd4\u7279\u6574\u6570\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u8ba1\u6570\u5230 <code>9</code> \u540e\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f <code>0</code> \u7684 4 \u6bd4\u7279\u8ba1\u6570\u5668\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f53\u8ba1\u6570\u5668\u7684\u8f93\u51fa\u4e3a <code>9</code> \u65f6\uff0c\u4e0b\u4e00\u5468\u671f\u8ba9\u8ba1\u6570\u5668\u8f7d\u5165 <code>0</code>\uff1a</p> <p></p> <p>\u6309\u7406\u6765\u8bf4\u8fd9\u91cc\u5e94\u8be5\u662f $Load = Q_0\\cdot\\overline{Q_1}\\cdot\\overline{Q_2}\\cdot Q_3$\uff0c\u4ee5\u5bf9\u5e94 <code>9D=1001B</code>\uff0c\u4f46\u662f\u7531\u4e8e\u81ea\u589e\u8fc7\u7a0b\u4e2d\uff0c<code>1001</code> \u662f\u7b2c\u4e00\u4e2a\u6ee1\u8db3 <code>1??1</code> \u7684\u7ec4\u5408\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7b80\u5316\u4e3a $Load = Q_0\\cdot Q_3$\u3002</p> <p>\u5982\u4e0a\u662f\u4fee\u6539\u4e0a\u786e\u754c\u7684\u65b9\u6cd5\uff0c\u800c\u4fee\u6539\u4e0b\u786e\u754c\u7684\u65b9\u6cd5\u5219\u662f\u4fee\u6539 $D_i$ \u5e8f\u5217\uff0c\u4f8b\u5982\u4e0a\u56fe\u4e2d $D$ \u63a5\u5730\uff0c\u6240\u4ee5\u4e0b\u786e\u754c\u662f <code>0000B</code>\u3002</p> <p>!!! example \"Mod N \u8ba1\u6570\u5668\"     \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a BCD \u7801\u5faa\u73af\u8ba1\u6570\u5668\u770b\u4f5c\u662f\u7279\u6b8a\u7684 Mod N \u8ba1\u6570\u5668\uff0c\u5373 N = 10 \u7684 Mod N \u8ba1\u6570\u5668\u3002</p> <pre><code>\u6216\u8bb8\u4f60\u4f1a\u60f3\uff0c\u5b9e\u73b0 Mod N \u8ba1\u6570\u5668\u80fd\u4e0d\u80fd\u5728\u6ee1\u8db3\u8f93\u51fa\u6761\u4ef6\u540e\u76f4\u63a5\u4f7f\u7528 `Clear` \u8f93\u5165\u3002\u4f46\u662f\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u4e86\uff0c`Clear` \u4e5f\u597d\uff0c`Set` \u4e5f\u7f62\uff0c\u5b83\u4eec\u90fd\u662f\u5f02\u6b65\u64cd\u4f5c\u3002\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u4e5f\u4e0d\u5e94\u8be5\u4f7f\u7528\u5f02\u6b65\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u597d\u7684\u505a\u6cd5\u8fd8\u662f\u4f7f\u7528 `Load`\u3002\n</code></pre>"},{"location":"ZJU_CS/DigitalDesign/Chap06/#_22","title":"\u5bc4\u5b58\u5668\u4f20\u8f93\u7684\u63a7\u5236","text":"<p>!!! error \"\u672a\u5b8c\u6210\"</p> <p>Control Unit</p> <ul> <li>Programmable sys<ul> <li>instructions (usually stored in memory RAM/ROM)</li> <li>program counter</li> </ul> </li> <li> <p>Nonprogrammable sys</p> <ul> <li>focus on this</li> <li>State machine diagrams for Control Unit design.</li> </ul> </li> <li> <p>Write a detailed system specification.</p> </li> <li>Define all external data and control input signals, all external data, control, and status output signals, and the registers of the datapath and control unit.</li> <li>Find a state machine diagram for the system including the register transfers in the datapath and in the control unit.</li> <li>Define internal control and status signals. Use these signals to separate output conditions and actions, including register transfers, from the state diagram flow and represent them in tabular form.</li> <li>Draw a block diagram of the datapath including all control and status inputs and outputs. Draw a block diagram of the control unit if it includes register transfer hardware.</li> <li>Design any specialized register transfer logic in both the control and datapath.</li> <li>Design the control unit logic.</li> <li>Verify the correct operation of the combined datapath and control logic. If verification fails, debug the system and reverify it.</li> </ul> <p>\u91cd\u70b9\u770b\u4e66\u4e0a\u7684\u4f8b\u5b50\u3002</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/","title":"Chap 7 Memory Basics","text":"<p>!!! summary \"\u6846\u67b6\"     - Two types: RAM &amp; ROM         - RAM ship consists of an array of RAM cells, decoders, write circuits, read circuits, output circuits         - RAM bit slice         - DRAM         - Error-detection and correction codes, often based on Hamming codes     - R&amp;W operations have specific steps and associated timing parameters: access time &amp; write cycle time     - static(SRAM) or dynamic(DRAM), volatile or nonvolatile</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#7-1-memory","title":"7-1 Memory","text":"<p>Two types of memories are used in various parts of a computer: random-access memory (RAM) and read-only memory (ROM). RAM accepts new information for storage to be available later for use. The process of storing new information in memory is referred to as a memory write operation. The process of transferring the stored information out of memory is referred to as a memory read operation. RAM can perform both the write and the read operations, whereas ROM, as introduced in Section 6-8, performs only read operations. RAM sizes may range from hundreds to billions of bits.</p> <p>Memory is a collection of binary storage cells together with associated circuits needed to transfer information into and out of the cells.</p>"},{"location":"ZJU_CS/DigitalDesign/Chap07/#7-2-ram","title":"7-2 RAM","text":"<p>Memory cells can be accessed to transfer information to or from any desired location, with the access taking the same time regardless of the location, hence the name random-access memory. In contrast,serial memory, such as is exhibited by a hard drive, takes different lengths of time to access information, depending on where the desired location is relative to the current physical position of the disk.</p> <p><code>word</code>: </p> <p>A word is an entity of bits that moves in and out of memory as a unit\u2014a group of 1s and 0s that represents a number, an instruction, one or more alphanumeric characters, or other binary-coded information.</p> <p>A group of eight bits is called a byte. </p> <p>Most computer memories use words that are multiples of eight bits in length. Thus, a 16-bit word contains two bytes, and a 32-bit word is made up of four bytes. The capacity of a memory unit is usually stated as the total number of bytes that it can store.</p> <p>Communication between a memory and its environment is achieved through data input and output lines, address selection lines, and control lines that specify the direction of transfer of information.</p> <p>Computer memory varies greatly in size. It is customary to refer to the number of words (or bytes) in memory with one of the letters K (kilo), M (mega), or G (giga). K is equal to 2^10, M to 2^20, and G to 2^30.</p> <p>A word in memory is selected by its binary address. When a word is read or written, the memory operates on all 16 bits as a single unit.</p> <p>The 1K * 16 memory of the figure has 10 bits in the address and 16 bits in each word. The number of address bits needed in memory is dependent on the total number of words that can be stored and is independent of the number of bits in each word. The number of bits in the address for a word is determined from the relationship 2^k &gt;= m, where m is the total number of words and k is the minimum number of address bits satisfying the relationship.</p> <p>The two operations that a random-access memory can perform are write and read. A write is a transfer into memory of a new word to be stored. A read is a transfer of a copy of a stored word out of memory.</p> <p>The steps that must be taken for a write are as follows:</p> <ol> <li>Apply the binary address of the desired word to the address lines.</li> <li>Apply the data bits that must be stored in memory to the data input lines.</li> <li>Activate the Write input.</li> </ol> <p>The memory unit will then take the bits from the data input lines and store them in the word specified by the address lines.The steps that must be taken for a read are as follows:</p> <ol> <li>Apply the binary address of the desired word to the address lines.</li> <li>Activate the Read input.</li> </ol> <p>The memory will then take the bits from the word that has been selected by the address and apply them to the data output lines. The contents of the selected word are not changed by reading them.</p> <p>...</p> <p>To avoid destroying data in other memory words, it is important that this change occur after the signals on the address lines have become fixed at the desired values. </p>"},{"location":"ZJU_CS/DigitalDesign/glossary/","title":"\u8bcd\u6c47\u8868","text":"<p>!!! note \"\ud83d\ude4f\"     \u8bcd\u6c47\u8868\u662f cm \u8001\u5e08\u6574\u7406\u7684\uff0c\u8ba9\u6211\u4eec\u8bf4 \u8c22\u8c22 cm \uff01</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#1-ch11-7","title":"1)   Ch1.1-7","text":"<p>odometer\uff1a\u91cc\u7a0b\u8868\uff0c\u8ba1\u7a0b\u5668</p> <p>signal conditioning: \u4fe1\u53f7\u8c03\u7406\u3001\u4fe1\u53f7\u5904\u7406</p> <p>capacitor\uff1a\u7535\u5bb9\u5668\uff0ce.g., capacitor charge\uff0c\u7535\u5bb9\u5668\u5145\u7535</p> <p>radix\uff1a\u57fa\u6570(= base)</p> <p>radix point\uff1a\u5c0f\u6570\u70b9</p> <p>number = integer portion(\u6574\u6570\u90e8\u5206) + fraction portion(\u5c0f\u6570\u90e8\u5206)</p> <p>power series\uff1a\u5e42\u7ea7\u6570</p> <p>binary\uff1a\u4e8c\u8fdb\u5236\uff0coctal\uff1a\u516b\u8fdb\u5236\uff0cdecimal\uff1a\u5341\u8fdb\u5236\uff1bhexadecimal\uff1a\u5341\u516d\u8fdb\u5236</p> <p>augend\uff1a\u88ab\u52a0\u6570</p> <p>addend\uff1a\u52a0\u6570</p> <p>minuend: \u88ab\u51cf\u6570</p> <p>subtrahend\uff1a\u51cf\u6570</p> <p>padding\uff1a\u586b\u5145</p> <p>weighted code\uff1a\u6709\u6743\u7801</p> <p>arithmetic\uff1a\u7b97\u672f\u3001\u56db\u5219\u8fd0\u7b97</p> <p>significant digit\uff1a\u6709\u6548\u4f4d</p> <p>punched paper\uff1a\u6253\u5b54\u7eb8\u5e26</p> <p>parity\uff1a\u5947\u5076\u6821\u9a8c</p> <p>even\uff1a\u5076\u6570</p> <p>odd\uff1a\u5947\u6570</p> <p>source coding\uff1a\u4fe1\u6e90\u7f16\u7801</p> <p>channel coding\uff1a\u4fe1\u9053\u7f16\u7801</p> <p>optical Shaft Encoder\uff1a\u5149\u8f74\u7f16\u7801\u5668</p> <p>positional number system\uff1a\u6309\u4f4d\u8bb0\u6570\u5236</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#2-ch21-3","title":"2)   Ch2.1-3","text":"<p>notation: \u6807\u8bb0\u6cd5</p> <p>operator\uff1a\u8fd0\u7b97\u7b26\u3001\u7b97\u5b50\uff0ce.g., logical operator \u903b\u8f91\u8fd0\u7b97\u7b26</p> <p>operand\uff1a\u64cd\u4f5c\u6570</p> <p>identifier\uff1a\u6807\u8bc6\u7b26=designator\uff0ce.g., variable identifier\uff1a\u53d8\u91cf\u6807\u8bc6\u7b26</p> <p>overbar: ( \u00af )\u4e0a\u6a2a\u7ebf</p> <p>single quote mark (')\uff1a\u5355\u5f15\u53f7</p> <p>normally-closed switch\uff1a\u5e38\u95ed\u5f00\u5173,e.g. Normally-Open(NO), Normally-Closed(NC)</p> <p>magnetic field\uff1a\u78c1\u573a</p> <p>energizing coil\uff1a\u6fc0\u52b1\u7ebf\u5708</p> <p>relay\uff1a\u7ee7\u7535\u5668</p> <p>transistor: \u6676\u4f53\u7ba1\u3001\u4e09\u6781\u7ba1</p> <p>precedence\uff1a\u4f18\u5148\u6743\uff0ce.g., Boolean Operator Precedence</p> <p>parenthesis\uff1a\u62ec\u53f7\uff08\u5355\u6570\u5f62\u5f0fparenthesis\uff09</p> <p>leave out\uff1a\u9057\u6f0f, e.g., If the meaning is unambiguous, we leave out the symbol  \u201c\u00b7\u201d.</p> <p>idempotence: \u5e42\u7b49\u6027</p> <p>involution: \u4e58\u65b9</p> <p>dual\uff1a\u5bf9\u5076= duality\uff0ce.g., The dual of an algebraic expression is obtained by interchanging +  and \u00b7 and interchanging 0\u2019s and 1\u2019s.</p> <p>dual function\uff1a\u5bf9\u5076\u51fd\u6570</p> <p>complement function: \u8865\u51fd\u6570</p> <p>canonical form\uff1a\u89c4\u8303\u5f62\u5f0f</p> <p>standard form\uff1a\u6807\u51c6\u5f62\u5f0f</p> <p>designator\uff1a\u6807\u8bc6\u7b26= identifier\uff0ce.g., We drop the \u201cm\u201d designators\uff1a\u6211\u4eec\u5220\u9664\u4e86m\u53d8\u91cf\u6807\u8bc6\u7b26</p> <p>identity: \u540c\u4e00\u6027\uff1b\u4e00\u81f4\uff1b\u76f8\u7b49\uff1be.g., Prove the identity of each of the following Boolean  equations, using algebraic manipulation.</p> <p>indices\uff1aindex\u7684\u590d\u6570(=indexes) \u4e00\u822c\u5728\u6570\u5b66\uff0c\u91d1\u878d\u548c\u76f8\u5173\u9886\u57df\u4f7f\u7528</p> <p>subscript\uff1a\u4e0b\u6807</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#3-ch24-7","title":"3)   Ch2.4-7","text":"<p>Venn diagram\uff1a\u7ef4\u6069\u56fe</p> <p>Implicant\uff1a\u8574\u6db5\u9879\uff1b\u8574\u542b\u9879\uff1b\u9690\u542b\u6570</p> <p>Prime implicant: \u4e3b\u8574\u542b\u9879</p> <p>essential prime implicant\uff1a\u57fa\u672c\u7d20\u8574\u6db5; \u5b9e\u8d28\u672c\u539f\u8574\u6db5</p> <p>Don't cares: \u65e0\u5173\u6700\u5c0f\u9879</p> <p>degenerate: \u9000\u5316, e.g., A NAND gate with one input degenerates to an inverter.</p> <p>Hi-Impedance Outputs: \u9ad8\u963b\u6001\u8f93\u51fa</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#4-ch3-1-2","title":"4)   ch3. 1-2","text":"<p>rudimentary:\u57fa\u7840\u7684\uff1b\u57fa\u672c\u7684\uff1b\u672a\u5145\u5206\u53d1\u5c55\u7684\uff1b\u539f\u59cb\u7684</p> <p>die: \u88f8\u7247\u3001\u82af\u7247</p> <p>wafer\uff1a\u6676\u5706</p> <p>margin: \u8fb9\u7f18\u3001\u5dee\u989d\uff0ce.g., noise margin\uff0c\u566a\u58f0\u5bb9\u9650</p> <p>superimpose: v.\u4f7f\uff08\u7532\uff09\u53e0\u6620\u5728\uff08\u4e59\uff09\u4e0a\uff1b\u4f7f\u91cd\u53e0, e.g., Noise margin refers to the maximum external  noise voltage superimposed on a normal input value that will not cause an undesirable change  in the circuit output</p> <p>dissipation: n.\u6d88\u8017\uff1b\u653e\u8361\uff1b\u6d6a\u8d39\uff1be.g., power dissipation = power consumption</p> <p>propagation delay\uff1a\u4f20\u64ad\u5ef6\u8fdf</p> <p>transition time\uff1a\u8f6c\u6362\u65f6\u95f4</p> <p>transport delay\uff1a\u4f20\u8f93\u5ef6\u8fdf</p> <p>inertial delay\uff1a\u60ef\u6027\u5ef6\u8fdf</p> <p>full custom: \u5b8c\u5168\u5b9a\u5236</p> <p>fabrication: \u5236\u9020\u3001\u5236\u4f5c</p> <p>cell library\uff1a\u5143\u4ef6\u5e93</p> <p>schematic\uff1a\u539f\u7406\u56fe\uff0c\u7b80\u56fe</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#5-ch3-3-9","title":"5)   ch3. 3-9","text":"<p>decoder\uff1a\u8bd1\u7801\u5668</p> <p>encoder\uff1a\u7f16\u7801\u5668</p> <p>multiplexer\uff1a\u591a\u8def\u590d\u7528\u5668\uff0cMultiplexer means many into one.</p> <p>demultiplexer\uff1a\u4fe1\u53f7\u5206\u79bb\u5668\u3001\u591a\u8def\u5206\u914d\u5668\uff0cThe demultiplexer means one into many.</p> <p>anode: \u9633\u6781\uff0c\u6b63\u6781</p> <p>cathode: \u9634\u6781\uff0c\u8d1f\u6781</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#6-ch3-8-10","title":"6)   Ch3. 8-10","text":"<p>Iterative array\uff1a\u8fed\u4ee3\u9635\u5217</p> <p>Ripple Carry Adder\uff1a\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <p>Carry Look-ahead Adder: \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <p>bit-wise: \u4ee5\u4f4d\u4e3a\u64cd\u4f5c\u5bf9\u8c61\u7684(wise\u662f\u65b9\u5f0f\u4e4b\u610f),\u5982bit-wise operators(\u4f4d\u8fd0\u7b97\u7b26), 2-input bit-wise  addition functional block</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#7-ch311-12","title":"7)   Ch3.11-12","text":"<p>1's Complement\uff1a\u53cd\u7801</p> <p>2's Complement\uff1a\u8865\u7801</p> <p>magnitude\uff1a\u6570\u503c</p> <p>Signed-Magnitude\uff1a\u7b26\u53f7\u2014\u6570\u503c\u8868\u793a\u6cd5</p> <p>Signed-Complement\uff1a\u7b26\u53f7\u2014\u8865\u7801\u8868\u793a\u6cd5</p> <p>contraction\uff1a(n.) \u6536\u7f29\u3001\u7d27\u7f29\uff1bcontract\uff1a(v.) \u6536\u7f29</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#8-ch5-2","title":"8)   Ch5. 2","text":"<p>fuse intact\uff1a\u7194\u4e1d\u4fdd\u7559</p> <p>fuse blown\uff1a\u7194\u4e1d\u7194\u65ad</p> <p>volatile\uff1a\u6613\u5931\u6027\u7684</p> <p>non-volatile\uff1a\u975e\u6613\u5931\u6027\u7684</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#9-ch4-1-4","title":"9)   Ch4. 1-4","text":"<p>tractable: (adj.) \u6613\u5904\u7406\u7684\uff1b\u6613\u9a7e\u9a6d\u7684</p> <p>oscillator: (n.) \u632f\u8361\u5668</p> <p>capacitors: (n.) \u7535\u5bb9\u5668</p> <p>inductor: (n.) \u7535\u611f\u5668</p> <p>latch\uff1a\u9501\u5b58\u5668</p> <p>flip-flop\uff1a\u89e6\u53d1\u5668</p> <p>metastable state\uff1a\u4e9a\u7a33\u6001</p> <p>alternating clock\uff1a\u4ea4\u66ff\u65f6\u949f</p> <p>disposable sampling = 1s catching\uff1a\u4e00\u6b21\u91c7\u6837</p> <p>setup time\uff1a\u5efa\u7acb\u65f6\u95f4</p> <p>hold time\uff1a\u4fdd\u6301\u65f6\u95f4</p> <p>pulse-triggering\uff1a\u8109\u51b2\u89e6\u53d1</p> <p>level triggering\uff1a\u7535\u5e73\u89e6\u53d1</p> <p>edge triggering\uff1a\u8fb9\u6cbf\u89e6\u53d1</p> <p>self-recovery capability\uff1a\u81ea\u6062\u590d\u80fd\u529b</p> <p>equivalent state\uff1a\u7b49\u4ef7\u72b6\u6001</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#10-ch6-1-5","title":"10)  Ch6. 1-5","text":"<p>register\uff1a\u5bc4\u5b58\u5668</p> <p>register transfer operation\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u64cd\u4f5c</p> <p>microoperation\uff1a\u5fae\u64cd\u4f5c</p> <p>register transfer structure\uff1a\u5bc4\u5b58\u5668\u4f20\u8f93\u7ed3\u6784</p> <p>bus\uff1a\u603b\u7ebf</p> <p>lateral: (adj.) \u4fa7\u9762\u7684\uff1b\u6a2a\u5411\u7684\uff1b\u5411\u4fa7\u9762\u79fb\u52a8\u7684</p> <p>laterally: (adv.) \u4fa7\u9762\u5730\uff1b\u6a2a\u5411\u5730\uff1b\u5411\u4fa7\u9762\u79fb\u52a8\u5730</p> <p>serial gating\uff1a\u4e32\u884c\u95e8\u63a7</p> <p>parallel gating\uff1a\u5e76\u884c\u95e8\u63a7</p> <p>counter\uff1a\u8ba1\u6570\u5668</p> <p>data path\uff1a\u6570\u636e\u901a\u9053</p> <p>control unit\uff1a\u63a7\u5236\u5355\u5143</p>"},{"location":"ZJU_CS/DigitalDesign/glossary/#11-ch7-1-7","title":"11)  Ch7. 1-7","text":"<p>strobe\uff1a\u9009\u901a\uff1b\u9009\u901a\u8109\u51b2\uff1b\u95f8\u95e8</p> <p>SRAM\uff1a\u9759\u6001\u5185\u5b58</p> <p>DRAM\uff1a\u52a8\u6001\u5185\u5b58</p> <p>coincident selection\uff1a\u91cd\u5408\u9009\u62e9</p> <p>word extension\uff1a\u5b57\u6269\u5c55</p> <p>bit extension\uff1a\u4f4d\u6269\u5c55</p> <p>address multiplexing\uff1a\u5730\u5740\u590d\u7528\uff08\u6307DRAM\uff09</p> <p>refresh\uff1a\u5237\u65b0</p> <p>synchronous DRAM(SDRAM)\uff1a\u540c\u6b65DRAM</p> <p>burst read\uff1a\u7206\u53d1\u6a21\u5f0f\u8bfb\u53d6\u6570\u636e</p> <p>burst length\uff1a\u7206\u53d1\u6a21\u5f0f\u7684\u6570\u636e\u8bfb/\u5199\u957f\u5ea6</p> <p>memory bandwidth\uff1a\u5185\u5b58\u5e26\u5bbd</p>"},{"location":"ZJU_CS/DigitalDesign/learnskill/","title":"\u5b66\u4e60\u601d\u8def\u4ee5\u53ca\u8d44\u6e90","text":"<p>Guahao\u7684\u590d\u4e60\u7b14\u8bb0 Xiulao\u7684\u539f\u7f51\u7ad9 verilog \u5b9e\u9a8c\u7ec3\u4e60 \u5386\u5e74\u5377</p> <p>\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u50cf\u6211\u8fd9\u6837\u72fc\u72c8\uff0c\u800c\u662f\u80fd\u591f\u5408\u7406\u5229\u7528\u8d44\u6e90\u5b66\u4e60\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u4e0d\u5f97\u4e0d\u627f\u8ba4\u6570\u903b\u8fd9\u4e2a\u8bfe\u662f\u53ef\u4ee510\u5929\u5de6\u53f3\u901f\u6210\u7684?\u8fd8\u671b\u5927\u5bb6\u53c2\u8003\u3002</p>"},{"location":"ZJU_CS/Discrete%20math/","title":"\u79bb\u6563\u6570\u5b66","text":"<p>!!! info \"\u8bfe\u7a0b\u4fe1\u606f\"     \u672c\u8bfe\u7a0b\u662f\u7afa\u9662\u6df7\u5408\u73ed\u6570\u5b66\u6a21\u5757\u8bfe\u300a\u79bb\u6563\u6570\u5b66H\u300b\u8bfe\u7a0b\u7684\u7b14\u8bb0\u8bb0\u5f55\u3002     \u8bfe\u7a0b\u662f\u7531\u8ba1\u7b97\u673a\u5b66\u9662\u7684\u91d1\u5c0f\u521a\u8001\u5e08\u6388\u8bfe\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5efa\u8bae\u5927\u5bb6\u542c\u667a\u4e91\u5b66\u4e60\u4e86\uff0c\u4f46\u8bb2\u771f\u8001\u5e08\u7684PPT\u8d28\u91cf\u975e\u5e38\u9ad8\uff01\u76f8\u6bd4\u4e8e\u8bfb\u539a\u539a\u7684\u5927\u4e66\u53ef\u80fd\u66f4\u5bb9\u6613\u5b66\u4e60\u4e9b\u3002</p> <pre><code>\u672c\u7b14\u8bb0\u6574\u4f53\u76f8\u5bf9\u7c97\u7cd9\uff0c\u7b97\u662f\u8003\u524d\u7684\u8865\u5929\u6323\u624e\u5427hhh\u3001\n</code></pre>"},{"location":"ZJU_CS/Discrete%20math/note/","title":"\u6458\u8981","text":"<p>!!! info \"\u6ce8\u610f\"     \u5982\u679clatex\u6e32\u67d3\u672a\u6210\u529f\u52a0\u8f7d,\u8bf7\u5237\u65b0\u7f51\u9875!</p>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter-1","title":"Chapter 1","text":"\u82f1\u6587 \u4e2d\u6587 \u6570\u5b66\u7b26\u53f7 disjunction \u5e76 $\\cup$ conjunction \u4ea4 $\\cap$ lemma \u5f15\u7406"},{"location":"ZJU_CS/Discrete%20math/note/#chapter-7-relations","title":"Chapter 7 Relations","text":""},{"location":"ZJU_CS/Discrete%20math/note/#71-relations-and-their-properties","title":"7.1 Relations and their properties","text":"<ol> <li>We write  $aRb$  for $(a,b) \\in R$</li> </ol> <p>Definition: A binary relation R between A and B is a subset of Cartesian product $A \\times B$ : $R \\subseteq A \\times B$</p> <p>When $A=B$, $R$ is called a relation on set $A$.</p> <ol> <li> <p>Distinguish domain and range. (just like function)</p> </li> <li> <p>n-ary relation: n is called its degree.</p> </li> <li> <p>The composite of R and S is the relation: $S \\circ R = {(a,c)|a \\in A, c \\in C \\quad \\exists b \\in B}$ such that  $(a,b)\\in R$ and $(b,c)\\in S$</p> </li> <li> <p>Power: $R^{n+1} = R^n \\circ R$</p> </li> <li> <p>Inverse:$R^{-1} = {(y,x)|(x,y) \\in R}$</p> </li> <li> <p>Reflexive / Irreflexive: R is reflexive $\\Leftrightarrow \\forall x \\in A, (x,x) \\in R$ </p> </li> <li> <p>symmetric / antisymmetric: </p> </li> </ol> <p>R is symmetric $\\Leftrightarrow \\forall x, y \\in A, (x,y)\\in R \\Rightarrow (y,x)\\in R \\Leftrightarrow R^{-1} = R$</p> <p>R is antisymmetric: $\\Leftrightarrow \\forall x, y \\in A, (x,y)\\in R \\quad and \\quad (y,x)\\in R \\Rightarrow x = y \\Leftrightarrow R \\cap R^{-1} \\subseteq R_=$</p> <p>Non-symmetric $\\not\\Leftrightarrow$ antisymmetric (eg. $R_=$)</p> <ol> <li>R is transitive $\\Leftrightarrow \\forall x, y, z \\in A((x,y)\\in R \\wedge(y,z) \\in R) \\Rightarrow (x,z)\\in R$</li> </ol> <p>Theorem:R on a set A is transitive if and only if $R^n \\subseteq R$ for $n = 2, 3, \\dots$</p> <p>Inductive step: $R^{n+1}$ is also a subset of $R$</p>"},{"location":"ZJU_CS/Discrete%20math/note/#72-representing-relations","title":"7.2 Representing Relations","text":"<ol> <li>Matrices representation.</li> </ol> <ul> <li>reflexive $\\Leftrightarrow$ All terms $m_{ii}$ in the main diagonal of $M_R$ are 1</li> <li>symmetric $\\Leftrightarrow m_{ij} = m_{ji}$ for all $i,j$.</li> <li>anti-symmetric $\\Leftrightarrow$ if $m_{ij} = 1 $ and $i\\not= j$ then $m_{ij} = 0$</li> <li>Transitive $\\Leftrightarrow$  whenever $c_{ij}$ in $C=M_R^2$ is nonzero then entry $m_{ij}$ in $M_R$ is also nonzero</li> </ul> <ol> <li>Digraphs representation.</li> </ol> <ul> <li>A edge $(a,b)$, a isiInitial vertx and b is terminal vertex</li> <li>A edge of form $(a,a)$, called loop</li> <li>reflexible $\\Leftrightarrow$ There are loops at every vertex of digraph.</li> <li>symmetric $\\Leftrightarrow$ Every edge between distinct vertices is accompanied by a edge in the opposite direction.</li> </ul>"},{"location":"ZJU_CS/Discrete%20math/note/#73-closures-of-relations","title":"7.3 Closures of Relations","text":"<ol> <li>Definition: $R \\&amp; S$ are relation,while S satisfy:</li> </ol> <ul> <li>S with property P and $R \\subseteq S$</li> <li>$\\forall S'$ with property P and $R \\subseteq S'$ , then $S \\subseteq S'$</li> </ul> <ol> <li>Theorem: R be a relation on set A.</li> </ol> <ul> <li>The reflexive closure of relation R:     $$    r(R) =R \\cup \\Delta    $$    , where $\\Delta = {(a,a)|a \\in A}$</li> <li>The symmmetric closure of relation R:     $$    S(R) = R \\cup R^{-1}    $$</li> </ul> <ol> <li>Definition: Path is a sequence of one or more edges in graph G.</li> </ol> <p>Theorem:  Let R be a relation on set $A$. There is a path of length n from a to b $\\Leftrightarrow (a,b) \\in R^n$</p> <ol> <li>Definition: The connectivity relation $R^ = {(a,b)|\\text{there is a path from a to b}}$.     $$    R^ = \\cup^{\\infin}_{n=1} R^n    $$</li> </ol> <p>Theorem: The transitive closure of R :    $$    t(R) = R^*    $$</p> <ol> <li>WARSHALL'S algorithm!</li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#74-equivalence-relations","title":"7.4 Equivalence Relations","text":"<ol> <li> <p>Definition: Relation $R$~ : $A \\leftrightarrow A$ is an equivalence relation, if it reflexive, symmetric and transitive.</p> </li> <li> <p>Definition: Let $R: A \\leftrightarrow A$ is an equivalence relation. For any $a \\in A$, the equivalence class of a is the set of the elements related to a.     $$    [a]_R = {x\\in A|(x,a) \\in R}    $$ .     If $b\\in [a]_R$. b is called a representative of this equivalence class.</p> <p>The properties of equivalence classes are: 1. $\\forall a \\in A, a[R] \\not ={\\emptyset}$( by reflexive, $a \\in [a]R$ ) 2. $\\forall a,b \\in A, [a]_R = [b]_R$ or $[a]_R \\cap [b]_R = \\emptyset$ (by symmetric and transitive)  3. $ \\cup{a\\in A}[a]R = A$ ($A \\subseteq \\cup{a\\in A}, [a]_R \\subseteq A$) 4. $[a]_R \\cap [b]_R \\not = \\emptyset \\Rightarrow [a]_R = [b]_R$ (by symmetric and transitive)</p> </li> <li> <p>Definition: The set of all equivalence classes of R is called the quotient set of A by R.     $$    A/R = {[a]_R|a \\in A}    $$</p> <p>Remark: 1. If A is finite, then $|A/R| $ is also finite. 2. If A has n elements, and if every $[a]_R$ has m elements, then $|A/R| = n/m$</p> </li> <li> <p>Definition: A partition $\\pi$ on a set $S$ is a family of nonempty subsets of $S$ such that every element of $S$ is in exactly one of these subsets.     $$    \\pi = {A_1, A_2, \\dots, A_n}\\</p> </li> <li>\\cup_{k=1}^n A_k =S \\ </li> <li>A_j \\cap A_k = \\emptyset \\text{ for every j,k with }j \\not= k, 1 &lt; j, k &lt; n    $$ <p>Theorem: Let $R$ be an equivalence relation on a set $S$. Then the equivalence of classes of $R$ form a partition of $X$. Conversely, given a partition ${A_i|i \\in I}$ of $S$, there is an equivalence relation $R$ on $S$ such that the equivalence classes of $R$ are the sets $A_i$.</p> </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#75-partial-orderings","title":"7.5 Partial Orderings","text":"<ol> <li> <p>Definition: A relation $R_{\\preceq}$ on a set $S$ ($S \\leftrightarrow S$) is a partial ordering if it is reflexive, antisymmetric and transitive.</p> </li> <li> <p>Definition: The element a and b of s poset $S$ are comparable if either $a \\preceq b$ or $b \\preceq a$. Otherwise, a and b are incomparable.</p> </li> <li>Definition: A poset $S$ is a total ordering or linear ordering if every pair of elements of $S$ is comparable. A totaly ordered set is also called a chain.</li> <li>Lexicograpic order: Construct a poset $S$ by taking the Cartesian product of two posets $S_1$ and $S_2$. The relation $\\preceq$ on $S$ is defined by     $$    (a_1, a_2) \\preceq (b_1, b_2) \\Leftrightarrow a_1 \\preceq_1 b_1 \\text{ and } a_2 \\preceq_2 b_2    $$</li> <li> <p>hasse diagram: A hasse diagram of a poset $S$ is a diagram that represents the poset $S$ using points and line segments. The points of the diagram are the elements of $S$, and there is a line segment between $a$ and $b$ if $a \\prec b$ and there is no element $c$ such that $a \\prec c \\prec b$.</p> <ol> <li>Start with the directed graph for the relation.</li> <li>Remove all loops.</li> <li>Remove all edges that must be present because of the transitive property.</li> <li>Finally, arrange each edges so that its initial vertex is below its terminal vertex, Remove all arrows.</li> </ol> </li> <li> <p>Definition: Let $(A, \\preceq)$ be a partial ordered set, $B\\subseteq A$.</p> <ol> <li>a is a maximal element of B if there is no element $b \\in B$ such that $a \\prec b$.</li> <li>b is a minimal element of B if there is no element $b \\in B$ such that $b \\prec a$.</li> <li>a is a greatest element of B if $a \\preceq b$ for every $b \\in B$.</li> <li>b is a least element of B if $b \\preceq a$ for every $b \\in B$. </li> <li>a is an upper bound of B if $b \\preceq a$ for every $b \\in B$.</li> <li>b is a lower bound of B if $a \\preceq b$ for every $b \\in B$.</li> <li>a is the least upper bound of B if a is an upper bound of B and if $a \\preceq c$ for every upper bound c of B.</li> <li>b is the greatest lower bound of B if b is a lower bound of B and if $c \\preceq b$ for every lower bound c of B.</li> </ol> <p>Remark: Can have many minimal/maximal elements, but only one least/greatest element.</p> </li> <li> <p>Definition: A poset $S$ is a lattice if every pair of elements of $S$ has a least upper bound and a greatest lower bound.</p> </li> </ol>"},{"location":"ZJU_CS/Discrete%20math/note/#chapter-8-graph","title":"Chapter 8 Graph","text":"<ol> <li> <p>Definition: A graph $G$ is an ordered pair $(V,E)$, where $V$ is a finite nonempty set and $E$ is a set of two-element subsets of $V$ which is called edges.</p> <p>Definition: A multigraph is a graph that is permitted to have multiple edges with the same endpoints.(don't have loops)</p> <p>Definition: A pseudograph is a graph that is permitted to have loops. Sum table: </p> </li> <li> <p>Terminology:</p> </li> <li>Two vertices u and v are adjacent or neighbors if {u,v} is an edge of G.</li> <li>If {u,v} is an edge of G, then u and v are incident with the edge {u,v}.</li> <li> <p>The degree of a vertex v, denoted by deg(v), is the number of edges incident with v, with loops counted twice.(Pendant vertex: deg(v) = 1)</p> </li> <li> <p>Theorem: Let $G = (V,E)$ be a graph with $n$ vertices and $m$ edges. Then    $$    \\sum_{v \\in V} deg(v) = 2m    $$</p> <p>Corollary(\u7ed3\u8bba): The number of vertices of odd degree in any graph is even. Corollary:  $$ \\sum_{i=1}^{n}{deg^{-}{v_i}} = \\sum_{i=1}^{n}{deg^{+}{v_i}} = |E|$$</p> </li> <li> <p>Some simple graph</p> </li> <li>complete graph: $K_n$ is a simple graph with n vertices and exactly one edge between each pair of distinct vertices.($|E| = \\frac{n(n-1)}{2}$)</li> <li>cycles: $C_n$ is a simple graph with n vertices $v_1, v_2, \\dots, v_n$ and edges ${v_1, v_2}, {v_2, v_3}, \\dots, {v_{n-1}, v_n}, {v_n, v_1}$</li> <li>wheels: $W_n$ is a simple graph with n vertices $v_1, v_2, \\dots, v_n$ and edges ${v_1, v_2}, {v_2, v_3}, \\dots, {v_{n-1}, v_n}, {v_n, v_1}, {v_1, v_3}, {v_1, v_4}, \\dots, {v_1, v_n}$</li> <li>n-cubes: $Q_n$ is a simple graph with $2^n$ vertices $v_1, v_2, \\dots, v_{2^n}$ and edges ${v_i, v_j}$ if and only if $v_i$ and $v_j$ differ in exactly one bit position.</li> <li>bipartite graph: A graph $G = (V,E)$ is bipartite if $$ V = V_1 \\cup V_2 \\ V_1 \\cap V_2 = \\emptyset$$ such that no edge has both endpoints in the same subset.</li> <li> <p>complete bipartite graph: $K_{m,n}$ is a bipartite graph with $m+n$ vertices $v_1, v_2, \\dots, v_m$ and $u_1, u_2, \\dots, u_n$ and edges ${v_i, u_j}$ for all $i = 1, 2, \\dots, m$ and $j = 1, 2, \\dots, n$.</p> </li> <li> <p>New graphs from old:</p> </li> <li>subgraph: $G' = (V', E')$ is a subgraph of $G = (V,E)$ if $V' \\subseteq V$ and $E' \\subseteq E$.</li> <li>complement: $G' = (V, E')$ is the complement of $G = (V,E)$ if $E' = { {u,v} | u,v \\in V, u \\not= v, {u,v} \\not\\in E}$</li> <li>union: $G_1 = (V_1, E_1)$ and $G_2 = (V_2, E_2)$, then $G_1 \\cup G_2 = (V_1 \\cup V_2, E_1 \\cup E_2)$</li> <li> <p>join: $G_1 = (V_1, E_1)$ and $G_2 = (V_2, E_2)$, then $G_1 \\vee G_2 = (V_1 \\cup V_2, E_1 \\cup E_2 \\cup { {u,v} | u \\in V_1, v \\in V_2})$</p> </li> <li> <p>Representing graphs:</p> </li> <li>adjacency matrix: $A = (a_{ij})$ is a $n \\times n$ matrix such that $a_{ij} = 1$ if ${v_i, v_j} \\in E$ and $a_{ij} = 0$ otherwise.</li> <li>incidence matrix: $B = (b_{ij})$ is a $n \\times m$ matrix such that $b_{ij} = 1$ if $v_i$ is incident with $e_j$ and $b_{ij} = 0$ otherwise.</li> <li>adjacency list: For each vertex $v_i$, we have a list of all vertices adjacent to $v_i$. (for directed graph, we have two lists for each vertex, one for the vertices adjacent to $v_i$ and one for the vertices from which there is an edge to $v_i$)</li> </ol>"},{"location":"ZJU_CS/FDS/","title":"Index","text":""},{"location":"ZJU_CS/FDS/#fds","title":"FDS","text":"<p>\u8fd9\u91cc\u662f\u6d59\u6c5f\u5927\u5b6623-24Fall\u9648\u8d8a\u8001\u5e08\u6570\u636e\u7ed3\u6784\u57fa\u7840\u7684\u7b14\u8bb0\u3002\u4ec5\u4f9b\u53c2\u8003\uff01</p> <p>!!! note \"\u6458\u8981\"         === \"\u5fc3\u5f97\"         1. \u672c\u4eba\u5b66\u4e60\u4ece\u672a\u542c\u8fc7\u8bfeor\u770b\u8fc7\u4e66\uff0c\u5168\u4e3a\u81ea\u5b66\u5b8c\u6210\u3002\u57fa\u672c\u4e0a\u8ddf\u7740\u6559\u5b66\u8fdb\u5ea6\u6bcf\u5468\u8fdb\u884c\u5b66\u4e60\u4e0d\u4f1a\u6709\u592a\u5927\u96be\u5ea6\u7684\u3002         2. \u6b64\u5916\u4fbf\u662f\u8001\u751f\u5e38\u8c08\u7684\u201c\u5e94\u8bd5\u6559\u80b2\u201d\uff0c\u5bf9\u4e8efds\u8fd9\u95e8\u8bfe\u7a0b\uff0c\u5237\u9898\u662f\u5341\u5206\u6709\u5fc5\u8981\u7684\u3002</p> <pre><code>    === \"\u5b66\u4e60\u8d44\u6e90\"\n    1. \u8fd9\u91cc\u63a8\u8350\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f00\u6e90\u7b97\u6cd5\u4e66[hello-algo](https://www.hello-algo.com/chapter_preface/)\u3002\u5b66\u671f\u518580%\u7684\u5185\u5bb9\u6211\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u7f51\u7ad9\u5b66\u4e60\uff0c\u7136\u540e\u901a\u8fc7\u4f5c\u4e1a\u67e5\u6f0f\u8865\u7f3a\n</code></pre>"},{"location":"ZJU_CS/FDS/algorithm/","title":"\u7b97\u6cd5\u5206\u6790","text":"<p>\u4e00\u4e2a\u7b97\u6cd5(algorithm) \u662f\u4e3a\u4e86\u5b9e\u73b0\u7279\u5b9a\u4efb\u52a1\u7684\u4e00\u4e2a\u6709\u9650\u6761\u6307\u4ee4\u7684\u96c6\u5408</p> <p>\u7b97\u6cd5\u6ee1\u8db3\u8fd9\u4e9b\u6027\u8d28\uff1a </p> <ul> <li>Input</li> <li>Output</li> <li>Definiteness</li> <li>Finiteness</li> <li>Effectiveness</li> </ul> <p>Note: program \u53ef\u4ee5\u4e0d finite(e.g. \u64cd\u4f5c\u7cfb\u7edf)</p>"},{"location":"ZJU_CS/FDS/algorithm/#_2","title":"\u5206\u6790\u5185\u5bb9","text":"<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u3001\u7f16\u8bd1\u5668\u6709\u5173</li> <li>\u65f6\u95f4 &amp; \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u673a\u5668\u3001\u7f16\u8bd1\u5668\u65e0\u5173</li> </ul> <p>\u5047\u8bbe\uff1a</p> <ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6bcf\u6761\u6307\u4ee4\u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u6267\u884c</li> <li>\u6570\u636e\u89c4\u6a21\u662f\u7ed9\u5b9a\u7684\uff0c\u800c\u7a7a\u95f4\u662f\u65e0\u9650\u7684</li> </ul> <p>\u901a\u5e38\u6211\u4eec\u9700\u8981\u5206\u6790 $T_{avg}(N) \\&amp; T_{worst}(N)$, $N$ \u662f\u8f93\u5165\u89c4\u6a21\uff08\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\uff09</p>"},{"location":"ZJU_CS/FDS/algorithm/#_3","title":"\u6e10\u8fdb\u7b26\u53f7","text":""},{"location":"ZJU_CS/FDS/algorithm/#_4","title":"\u5b9a\u4e49","text":"<p>\u5927 $O$ \u8868\u793a\u6cd5 $T(N) = O(f(N))$\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 $c$ \u548c $n_0$\u200b\u4f7f\u5f97\u5f53 $N\\geq n_0$ \u65f6 $T(N)\\leq c\\cdot f(N)$ \u6e10\u8fdb\u4e0a\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e0d\u4f1a\u9ad8\u4e8e $f(N)$\uff08\u589e\u957f\u6bd4 $f(N)$ \u6162\u6216\u76f8\u540c\uff0c$\\leq$\uff09</p> <p>\u5927 $\\Omega$ \u8868\u793a\u6cd5 $T(N) = \\Omega(g(N))$\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 $c$ \u548c $n_0$\u200b\u4f7f\u5f97\u5f53 $N\\geq n_0$ \u65f6 $T(N)\\geq c\\cdot f(N)$ \u6e10\u8fdb\u4e0b\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e0d\u4f1a\u4f4e\u4e8e $f(N)$\uff08\u589e\u957f\u6bd4 $f(N)$ \u5feb\u6216\u76f8\u540c\uff0c$\\geq$\uff09</p> <p>\u5927 $\\Theta$ \u8868\u793a\u6cd5 $T(N) = \\Theta(h(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N) = O(h(N))$ \u4e14 $T(N) = \\Omega(h(N))$ \u6e10\u8fdb\u7d27\u786e\u754c\uff0c\u5373 $T(N)$ \u4e0e $h(N)$ \u540c\u9636\uff08\u589e\u957f\u901f\u5ea6\u76f8\u540c\uff0c$=$)</p> <p>\u5c0f $o$ \u8868\u793a\u6cd5 $T(N) = o(p(N))$\uff0c\u5f53 $T(N)=O(p(N))$ \u4e14 $T(N)\\neq \\Theta(p(N))$ \u65f6\u6210\u7acb \u975e\u6e10\u8fdb\u7d27\u786e\u4e0a\u754c\uff0c\uff08\u5373 $T(N)$ \u589e\u957f\u6bd4 $p(N)$\u6162\uff0c$&lt;$\uff09</p> <p>\u5c0f $w$ \u8868\u793a\u6cd5 $T(N) = w(p(N))$\uff0c\u5f53 $T(N)=\\Omega(p(N))$ \u4e14 $T(N)\\neq \\Theta(p(N))$ \u65f6\u6210\u7acb \u975e\u6e10\u8fdb\u7d27\u786e\u4e0b\u754c\uff0c\uff08\u5373 $T(N)$ \u589e\u957f\u6bd4 $p(N)$\u5feb\uff0c$&gt;$\uff09</p>"},{"location":"ZJU_CS/FDS/algorithm/#_5","title":"\u8fd0\u7b97\u89c4\u5219","text":"<ul> <li>\u82e5 $T_1(N)=O(f(N)), T_2(N)=O(g(N))$  <ul> <li>$T_1(N)+T_2(N)=\\max(O(f(N)), O(g(N))$</li> <li>$T_1(N)\\cdot T_2(N)=O(f(N)\\cdot g(N))$</li> </ul> </li> <li>\u82e5 $T(N)$ \u662f\u6700\u9ad8\u6b21\u6570\u4e3a k \u6b21\u7684\u591a\u9879\u5f0f\uff0c\u90a3\u4e48 $T(N)=\\Theta ((N^k))$  </li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570 $k$, \u90fd\u6709 $\\log^kN=O(N)$\uff0c\u8fd9\u8bf4\u660e\u5bf9\u589e\u957f\u975e\u5e38\u7f13\u6162\u3002</li> <li>\u5206\u6790\u65f6\u7684\u89c4\u5219<ul> <li>for loop \u8fd0\u884c\u65f6\u95f4\u662f\u5faa\u73af\u5185\u90e8\u8bed\u53e5\u7684\u6700\u957f\u65f6\u95f4\uff08\u5305\u62ec for \u8fb9\u754c\u5224\u65ad\uff09\u4e58\u5faa\u73af\u7684\u6b21\u6570</li> <li>\u5d4c\u5957 for loop \u8fd0\u884c\u65f6\u95f4\u662f\u5404\u4e2a for loop \u7684\u8fd0\u884c\u65f6\u95f4\u9010\u6b21\u76f8\u4e58</li> <li>\u8fde\u7eed\u6267\u884c\u7684\u8bed\u53e5 \u76f8\u52a0</li> <li>if else \u8fd0\u884c\u65f6\u95f4\u4e0d\u4f1a\u8d85\u8fc7\u5224\u65ad\u65f6\u95f4\u52a0\u4e0a\u7528\u65f6\u6700\u591a\u7684\u8bed\u53e5\u5757\u7684\u65f6\u95f4</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/algorithm/#_6","title":"\u9012\u5f52","text":"<p>\u300c\u9012\u5f52 recursion\u300d\u662f\u4e00\u79cd\u7b97\u6cd5\u7b56\u7565\uff0c\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u81ea\u8eab\u6765\u89e3\u51b3\u95ee\u9898\u3002\u5b83\u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u9636\u6bb5\u3002</p> <ol> <li>\u9012\uff1a\u7a0b\u5e8f\u4e0d\u65ad\u6df1\u5165\u5730\u8c03\u7528\u81ea\u8eab\uff0c\u901a\u5e38\u4f20\u5165\u66f4\u5c0f\u6216\u66f4\u7b80\u5316\u7684\u53c2\u6570\uff0c\u76f4\u5230\u8fbe\u5230\u201c\u7ec8\u6b62\u6761\u4ef6\u201d\u3002</li> <li> <p>\u5f52\uff1a\u89e6\u53d1\u201c\u7ec8\u6b62\u6761\u4ef6\u201d\u540e\uff0c\u7a0b\u5e8f\u4ece\u6700\u6df1\u5c42\u7684\u9012\u5f52\u51fd\u6570\u5f00\u59cb\u9010\u5c42\u8fd4\u56de\uff0c\u6c47\u805a\u6bcf\u4e00\u5c42\u7684\u7ed3\u679c\u3002 \u800c\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u770b\uff0c\u9012\u5f52\u4ee3\u7801\u4e3b\u8981\u5305\u542b\u4e09\u4e2a\u8981\u7d20\u3002</p> </li> <li> <p>\u7ec8\u6b62\u6761\u4ef6\uff1a\u7528\u4e8e\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u7531\u201c\u9012\u201d\u8f6c\u201c\u5f52\u201d\u3002</p> </li> <li>\u9012\u5f52\u8c03\u7528\uff1a\u5bf9\u5e94\u201c\u9012\u201d\uff0c\u51fd\u6570\u8c03\u7528\u81ea\u8eab\uff0c\u901a\u5e38\u8f93\u5165\u66f4\u5c0f\u6216\u66f4\u7b80\u5316\u7684\u53c2\u6570\u3002</li> <li>\u8fd4\u56de\u7ed3\u679c\uff1a\u5bf9\u5e94\u201c\u5f52\u201d\uff0c\u5c06\u5f53\u524d\u9012\u5f52\u5c42\u7ea7\u7684\u7ed3\u679c\u8fd4\u56de\u81f3\u4e0a\u4e00\u5c42\u3002</li> </ol> <pre><code>/* \u9012\u5f52 */\nint recur(int n) {\n    // \u7ec8\u6b62\u6761\u4ef6\n    if (n == 1)\n        return 1;\n    // \u9012\uff1a\u9012\u5f52\u8c03\u7528\n    int res = recur(n - 1);\n    // \u5f52\uff1a\u8fd4\u56de\u7ed3\u679c\n    return n + res;\n}\n</code></pre> <p>\u867d\u7136\u4ece\u8ba1\u7b97\u89d2\u5ea6\u770b\uff0c\u8fed\u4ee3\u4e0e\u9012\u5f52\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5b83\u4eec\u4ee3\u8868\u4e86\u4e24\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u601d\u8003\u548c\u89e3\u51b3\u95ee\u9898\u7684\u8303\u5f0f\u3002</p> <ul> <li>\u8fed\u4ee3\uff1a\u201c\u81ea\u4e0b\u800c\u4e0a\u201d\u5730\u89e3\u51b3\u95ee\u9898\u3002\u4ece\u6700\u57fa\u7840\u7684\u6b65\u9aa4\u5f00\u59cb\uff0c\u7136\u540e\u4e0d\u65ad\u91cd\u590d\u6216\u7d2f\u52a0\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u3002</li> <li>\u9012\u5f52\uff1a\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u8fd9\u4e9b\u5b50\u95ee\u9898\u548c\u539f\u95ee\u9898\u5177\u6709\u76f8\u540c\u7684\u5f62\u5f0f\u3002\u63a5\u4e0b\u6765\u5c06\u5b50\u95ee\u9898\u7ee7\u7eed\u5206\u89e3\u4e3a\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u57fa\u672c\u60c5\u51b5\u65f6\u505c\u6b62\uff08\u57fa\u672c\u60c5\u51b5\u7684\u89e3\u662f\u5df2\u77e5\u7684\uff09\u3002</li> </ul> <p>\u9012\u5f52\u51fd\u6570\u6bcf\u6b21\u8c03\u7528\u81ea\u8eab\u65f6\uff0c\u7cfb\u7edf\u90fd\u4f1a\u4e3a\u65b0\u5f00\u542f\u7684\u51fd\u6570\u5206\u914d\u5185\u5b58\uff0c\u4ee5\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u3001\u8c03\u7528\u5730\u5740\u548c\u5176\u4ed6\u4fe1\u606f\u7b49\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e24\u65b9\u9762\u7684\u7ed3\u679c\u3002</p> <ul> <li> <p>\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u90fd\u5b58\u50a8\u5728\u79f0\u4e3a\u201c\u6808\u5e27\u7a7a\u95f4\u201d\u7684\u5185\u5b58\u533a\u57df\u4e2d\uff0c\u76f4\u81f3\u51fd\u6570\u8fd4\u56de\u540e\u624d\u4f1a\u88ab\u91ca\u653e\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u901a\u5e38\u6bd4\u8fed\u4ee3\u66f4\u52a0\u8017\u8d39\u5185\u5b58\u7a7a\u95f4\u3002</p> </li> <li> <p>\u9012\u5f52\u8c03\u7528\u51fd\u6570\u4f1a\u4ea7\u751f\u989d\u5916\u7684\u5f00\u9500\u3002\u56e0\u6b64\u9012\u5f52\u901a\u5e38\u6bd4\u5faa\u73af\u7684\u65f6\u95f4\u6548\u7387\u66f4\u4f4e\u3002</p> </li> </ul> <p>\u9012\u5f52\u6df1\u5ea6</p> <p>\u5c3e\u9012\u5f52 \u6709\u8da3\u7684\u662f\uff0c\u5982\u679c\u51fd\u6570\u5728\u8fd4\u56de\u524d\u7684\u6700\u540e\u4e00\u6b65\u624d\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u5219\u8be5\u51fd\u6570\u53ef\u4ee5\u88ab\u7f16\u8bd1\u5668\u6216\u89e3\u91ca\u5668\u4f18\u5316\uff0c\u4f7f\u5176\u5728\u7a7a\u95f4\u6548\u7387\u4e0a\u4e0e\u8fed\u4ee3\u76f8\u5f53\u3002\u8fd9\u79cd\u60c5\u51b5\u88ab\u79f0\u4e3a\u300c\u5c3e\u9012\u5f52 tail recursion\u300d\u3002</p> <ul> <li>\u666e\u901a\u9012\u5f52\uff1a\u5f53\u51fd\u6570\u8fd4\u56de\u5230\u4e0a\u4e00\u5c42\u7ea7\u7684\u51fd\u6570\u540e\uff0c\u9700\u8981\u7ee7\u7eed\u6267\u884c\u4ee3\u7801\uff0c\u56e0\u6b64\u7cfb\u7edf\u9700\u8981\u4fdd\u5b58\u4e0a\u4e00\u5c42\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\u3002</li> <li>\u5c3e\u9012\u5f52\uff1a\u9012\u5f52\u8c03\u7528\u662f\u51fd\u6570\u8fd4\u56de\u524d\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u51fd\u6570\u8fd4\u56de\u5230\u4e0a\u4e00\u5c42\u7ea7\u540e\uff0c\u65e0\u987b\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u56e0\u6b64\u7cfb\u7edf\u65e0\u987b\u4fdd\u5b58\u4e0a\u4e00\u5c42\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u3002</li> </ul> <pre><code>/* \u5c3e\u9012\u5f52 */\nint tailRecur(int n, int res) {\n    // \u7ec8\u6b62\u6761\u4ef6\n    if (n == 0)\n        return res;\n    // \u5c3e\u9012\u5f52\u8c03\u7528\n    return tailRecur(n - 1, res + n);\n}\n</code></pre> <ul> <li>\u666e\u901a\u9012\u5f52\uff1a\u6c42\u548c\u64cd\u4f5c\u662f\u5728\u5f52\u7684\u8fc7\u7a0b\u4e2d\u6267\u884c\u7684\uff0c\u6bcf\u5c42\u8fd4\u56de\u540e\u90fd\u8981\u518d\u6267\u884c\u4e00\u6b21\u6c42\u548c\u64cd\u4f5c\u3002</li> <li>\u5c3e\u9012\u5f52\uff1a\u6c42\u548c\u64cd\u4f5c\u662f\u5728\u9012\u7684\u8fc7\u7a0b\u4e2d\u6267\u884c\u7684\uff0c\u201c\u5f52\u201d\u7684\u8fc7\u7a0b\u53ea\u9700\u5c42\u5c42\u8fd4\u56de\u3002</li> </ul> <p>\u90a3\u4e48\uff0c\u8fed\u4ee3\u548c\u9012\u5f52\u5177\u6709\u4ec0\u4e48\u5185\u5728\u8054\u7cfb\u5462\uff1f\u4ee5\u4e0a\u8ff0\u9012\u5f52\u51fd\u6570\u4e3a\u4f8b\uff0c\u6c42\u548c\u64cd\u4f5c\u5728\u9012\u5f52\u7684\u201c\u5f52\u201d\u9636\u6bb5\u8fdb\u884c\u3002\u8fd9\u610f\u5473\u7740\u6700\u521d\u88ab\u8c03\u7528\u7684\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u6700\u540e\u5b8c\u6210\u5176\u6c42\u548c\u64cd\u4f5c\u7684\uff0c\u8fd9\u79cd\u5de5\u4f5c\u673a\u5236\u4e0e\u6808\u7684\u201c\u5148\u5165\u540e\u51fa\u201d\u539f\u5219\u5f02\u66f2\u540c\u5de5\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u201c\u8c03\u7528\u6808\u201d\u548c\u201c\u6808\u5e27\u7a7a\u95f4\u201d\u8fd9\u7c7b\u9012\u5f52\u672f\u8bed\u5df2\u7ecf\u6697\u793a\u4e86\u9012\u5f52\u4e0e\u6808\u4e4b\u95f4\u7684\u5bc6\u5207\u5173\u7cfb\u3002</p> <ol> <li>\u9012\uff1a\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u7cfb\u7edf\u4f1a\u5728\u201c\u8c03\u7528\u6808\u201d\u4e0a\u4e3a\u8be5\u51fd\u6570\u5206\u914d\u65b0\u7684\u6808\u5e27\uff0c\u7528\u4e8e\u5b58\u50a8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u7b49\u6570\u636e\u3002</li> <li>\u5f52\uff1a\u5f53\u51fd\u6570\u5b8c\u6210\u6267\u884c\u5e76\u8fd4\u56de\u65f6\uff0c\u5bf9\u5e94\u7684\u6808\u5e27\u4f1a\u88ab\u4ece\u201c\u8c03\u7528\u6808\u201d\u4e0a\u79fb\u9664\uff0c\u6062\u590d\u4e4b\u524d\u51fd\u6570\u7684\u6267\u884c\u73af\u5883\u3002</li> </ol>"},{"location":"ZJU_CS/FDS/exam/","title":"\u5386\u5e74\u5377","text":""},{"location":"ZJU_CS/FDS/exam/#mid-term","title":"Mid-term","text":""},{"location":"ZJU_CS/FDS/graph/","title":"\u56fe\u8bba","text":""},{"location":"ZJU_CS/FDS/graph/#_2","title":"\u5b9a\u4e49","text":"<ul> <li> <p>\u4e00\u4e2a\u56fe $G=(V,E)$ \u5176\u4e2d $V$ \u662f\u8282\u70b9\u7684\u6709\u9650\u975e\u7a7a\u96c6\u5408, $E$ \u662f\u8fb9\u7684\u6709\u9650\u975e\u7a7a\u96c6\u5408. \u6bcf\u4e00\u6761\u8fb9\u5c31\u662f\u4e00\u4e2a\u70b9\u5bf9 $(v,w)$.  </p> <ul> <li>\u65e0\u5411\u56fe: $(v_i,v_j)=(v_j,v_i)$ \u8868\u793a\u540c\u4e00\u6761\u8fb9</li> <li>\u6709\u5411\u56fe: $(v_i,v_j)\\neq (v_j,v_i)$ \u5176\u4e2d $(v_i,v_j)$ \u8868\u793a\u7531 $v_i$ (tail) \u6307\u5411 $v_j$ (head) \u7684\u4e00\u6761\u8fb9\u3002</li> <li>\u9650\u5236\uff1a\u81ea\u73af\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u540c\u65f6\u6211\u4eec\u4e0d\u8003\u8651\u591a\u91cd\u56fe </li> <li>\u5bf9\u4e8e $(v_i,v_j)$ \u8fd9\u6761\u8fb9\uff0c\u6211\u4eec\u79f0 $v_i,v_j$ \u662f\u90bb\u63a5\u7684(adjacent), \u79f0 $(v_i,v_j)$ \u9644\u5c5e\u4e8e(incident) $v_i/v_j$</li> <li>\u5b8c\u5168\u56fe: \u6bcf\u4e00\u5bf9\u8282\u70b9\u95f4\u90fd\u5b58\u5728\u4e00\u6761\u8fb9\u7684\u56fe  </li> <li>\u5b50\u56fe: $G'\\sub G$ \u5373 $G'$ \u4e2d\u7684\u70b9\u548c\u8fb9\u90fd\u5305\u542b\u5728 G \u4e2d($V(G')\\sube V(G)\\quad E(G')\\sube E(G)$)  </li> <li>\u8def\u5f84: ${v_p,v_{i1},v_{i2},\\ldots, v_{in},v_q}((v_i,v_i)\\in E)$ \u79f0\u4e3a\u4ece $v_p$ \u5230 $v_q$ \u7684\u4e00\u6761\u8def\u5f84</li> <li>\u8def\u5f84\u7684\u957f\u5ea6\uff1a\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf</li> <li>\u7b80\u5355\u8def\u5f84: $v_{i1},v_{i2}...$ \u5404\u4e0d\u76f8\u540c(\u6ce8\u610f\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u76f8\u540c)</li> <li>\u5708: $v_p=v_q$ \u7684\u7b80\u5355\u8def\u5f84</li> <li>\u5982\u679c\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u9876\u70b9\u5230\u53e6\u4e00\u4e2a\u5176\u4ed6\u9876\u70b9\u90fd\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684\u3002\u5177\u6709\u8fd9\u6837\u6027\u8d28\u7684\u6709\u5411\u56fe\u79f0\u4e3a\u5f3a\u8fde\u901a\u3002\u5982\u679c\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\uff0c\u4f46\u4ed6\u7684\u57fa\u7840\u56fe\uff08\u8fb9\u53bb\u6389\u65b9\u5411\u6240\u5f62\u6210\u7684\u56fe\uff09\u662f\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u79f0\u4e3a\u5f31\u8054\u901a\u3002</li> <li>DAG: Directed Acyclic Graph(\u6709\u5411\u65e0\u73af\u56fe)\uff0c\u6811\u662f\u8fde\u901a\u7684\u6709\u5411\u65e0\u73af\u56fe  </li> <li>\u5ea6\u6570: \u9644\u5c5e\u4e8e $v$ \u7684\u8fb9\u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8fd8\u5206\u4e3a\u51fa\u5ea6\u548c\u5165\u5ea6\u3002\u7ed9\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u56fe $G$, \u6211\u4eec\u6709 $e=\\dfrac{\\sum\\limits_{i=0}^{n-1}d_i}{2}$ \uff08\u5176\u4e2d $d_i=degree(v_i)$</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_3","title":"\u56fe\u7684\u8868\u793a","text":""},{"location":"ZJU_CS/FDS/graph/#_4","title":"\u90bb\u63a5\u77e9\u9635","text":"<p>$$ adj_mat[i][j]=\\left{ \\begin{matrix} 1\\quad if\\ (v_i,v_j)\\ or\\ \\in E(G)\\ 0\\quad \\quad \\quad \\quad \\quad \\quad  \\quad \\quad \\quad \\ \\ \\ otherwise \\end{matrix} \\right. $$ <p>\u5982\u679c $G$ \u662f\u65e0\u5411\u56fe\uff0c\u90a3\u4e48\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53ea\u5b58\u4e00\u534a\u7684\u6570\u636e\u3002</p> <p>$deg(i)=\\sum\\limits_{j=0}^{n-1}adj_mat[i][j]+\\sum\\limits_{j=0}^{n-1}adj_mat[j][i]$</p> <p>\u4f46\u8fd9\u6837\u7684\u7a7a\u95f4\u9700\u6c42\u662f $\\Theta(|V|^2)$, \u5bf9\u4e8e\u975e\u7a20\u5bc6\u56fe\u5f00\u9500\u592a\u5927\u3002</p>"},{"location":"ZJU_CS/FDS/graph/#_5","title":"\u90bb\u63a5\u8868","text":"<p>\u5bf9\u6bcf\u4e00\u4e2a\u9876\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u94fe\u8868\u5b58\u653e\u5176\u6240\u6709\u90bb\u63a5\u7684\u9876\u70b9\uff0c\u6b64\u65f6\u7684\u7a7a\u95f4\u9700\u6c42\u4e3a $O(|E|+|V|)$</p> <p>\u5728\u65e0\u5411\u56fe\u4e0a\uff0c\u6bcf\u6761\u8fb9 $(u,v)$ \u51fa\u73b0\u5728\u4e24\u4e2a\u8868\u4e2d\uff0c\u56e0\u6b64\u7a7a\u95f4\u7684\u4f7f\u7528\u662f\u53cc\u500d\u7684\uff0c$S=n\\ heads + 2e\\ edges $</p> <p>\u5728\u65e0\u5411\u56fe\u4e2d\uff0c$v$ \u7684\u5ea6\u6570\u5c31\u662f $graph[v]$ \u4e2d\u7684\u8282\u70b9\u4e2a\u6570\u3002\u5982\u679c $G$ \u662f \u6709\u5411\u56fe\uff0c\u8fd9\u6837\u53ea\u80fd\u627e\u5230\u51fa\u5ea6\uff0c\u5bf9\u4e8e\u5165\u5ea6\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5:</p> <ul> <li>\u589e\u52a0\u4e00\u4e2a\u94fe\u8868\uff0c\u5c06\u8fb9\u53cd\u5411\u5e76\u5b58\u5165 </li> <li>\u4f7f\u7528\u591a\u91cd\u8868</li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_6","title":"\u90bb\u63a5\u591a\u91cd\u8868\u5217","text":""},{"location":"ZJU_CS/FDS/graph/#_7","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV \u7f51\u7edc\uff1a\u6709\u5411\u56fe\u4e2d\uff0c\u7528\u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u7528\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb</li> <li>\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u6211\u4eec\u79f0 $i$ \u662f $j$ \u7684\u524d\u9a71\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $i$ \u5230 $j$ \u7684\u8def\u5f84  </li> <li>\u6211\u4eec\u79f0 $i$ \u662f $j$ \u7684\u76f4\u63a5\u524d\u9a71\uff0c\u5982\u679c $\\in E(G)$. \u540c\u65f6 $j$ \u79f0\u4e3a $i$ \u7684\u76f4\u63a5\u540e\u7ee7 <p>\u53ef\u5b9e\u73b0\u7684 AOV \u7f51\u7edc\u4e00\u5b9a\u662f DAG.  </p> <p>\u62d3\u6251\u6392\u5e8f\u662f\u5bf9\u6709\u5411\u65e0\u73af\u56fe\u7684\u9876\u70b9\u7684\u4e00\u79cd\u6392\u5e8f\uff0c\u5b83\u4f7f\u5f97\u5982\u679c $i$ \u662f $j$ \u7684\u524d\u9a71\uff0c\u90a3\u4e48\u5728\u62d3\u6251\u5e8f\u5217\u4e2d $i$ \u4e00\u5b9a\u51fa\u73b0\u5728 $j$ \u7684\u524d\u9762\u3002</p> <p>\u5b9e\u73b0\u601d\u8def\uff1a\u5728\u5bb9\u5668\u4e2d\uff08\u961f\u5217/\u6808\uff09\u653e\u672a\u88ab\u6392\u5e8f\u4e14\u5ea6\u6570\u4e3a 0 \u7684\u8282\u70b9</p> <pre><code>void Topsort( Graph G )\n{   Queue  Q;\n    int  Counter = 0;\n    Vertex  V, W;\n    Q = CreateQueue( NumVertex );  MakeEmpty( Q );\n    for ( each vertex V )\n    if ( Indegree[ V ] == 0 )   Enqueue( V, Q );\n    while ( !IsEmpty( Q ) ) {\n    V = Dequeue( Q );\n    TopNum[ V ] = ++ Counter; /* assign next */\n    for ( each W adjacent to V )\n        if ( \u2013 \u2013 Indegree[ W ] == 0 )  Enqueue( W, Q );\n    }  /* end-while */\n    if ( Counter != NumVertex )\n    Error( \u201cGraph has a cycle\u201d );\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>!!! Note     \u62d3\u6251\u6392\u5e8f\u53ef\u80fd\u4e0d\u662f\u552f\u4e00\u7684</p>"},{"location":"ZJU_CS/FDS/graph/#_8","title":"\u6700\u77ed\u8def","text":"<p>\u7ed9\u5b9a\u6709\u5411\u56fe $G=(V,E)$ \u4ee5\u53ca\u4e00\u4e2a\u82b1\u8d39\u51fd\u6570 $c(e), e\\in E(G)$. \u4ece\u6e90\u70b9\u5230\u7ec8\u70b9\u7684\u4e00\u6761\u8def\u5f84 $P$ \u7684\u957f\u5ea6\u5b9a\u4e49\u4e3a $\\sum\\limits_{e_i\\sub P}c(e_i)$ \uff08\u4e5f\u79f0\u4e3a\u5e26\u6743\u8def\u5f84\u957f\uff09 </p>"},{"location":"ZJU_CS/FDS/graph/#_9","title":"\u5355\u6e90\u6700\u77ed\u8def\u5f84","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d4b\u6743\u56fe\u548c\u4e00\u4e2a\u7279\u5b9a\u9876\u70b9 $s$ \u4f5c\u4e3a\u8f93\u5165\uff0c\u627e\u51fa\u4ece $s$ \u5230 $G$ \u4e2d\u6bcf\u4e00\u4e2a\u5176\u4ed6\u9876\u70b9\u7684\u6700\u77ed\u5e26\u6743\u8def\u5f84\u3002 \u6ce8\u610f: \u5982\u679c\u8fd9\u91cc\u6709\u8d1f\u73af\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u5f84\u5b9a\u4e49\u4e3a 0. </p>"},{"location":"ZJU_CS/FDS/graph/#_10","title":"\u65e0\u6743\u6700\u77ed\u8def\u5f84","text":"<p>\u91c7\u7528 BFS(Breadth-First Search) \u7684\u65b9\u5f0f\uff0c\u4ece $s$ \u51fa\u53d1\u5bfb\u627e\u6240\u6709\u8ddd\u79bb\u4e3a 1 \u7684\u9876\u70b9(\u5373\u4e0e $s$ \u90bb\u63a5)\u968f\u540e\u5bfb\u627e\u4e0e $s$ \u8ddd\u79bb\u4e3a 2 \u7684\u9876\u70b9\uff0c\u5373\u4e0e\u521a\u521a\u90a3\u4e9b\u9876\u70b9\u90bb\u63a5\u7684\u9876\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <pre><code>void Unweighted( Table T )\n{   /* T is initialized with the source vertex S given */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) {\n        V = Dequeue( Q );\n        T[ V ].Known = true; /* not really necessary */\n        for ( each W adjacent to V )\n    if ( T[ W ].Dist == Infinity ) {\n        T[ W ].Dist = T[ V ].Dist + 1;\n        T[ W ].Path = V;\n        Enqueue( W, Q );\n    } /* end-if Dist == Infinity */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/graph/#dijkstra","title":"Dijkstra \u7b97\u6cd5","text":"<p>\u4ee4 S \u8868\u793a\u6e90\u70b9 s \u4ee5\u53ca\u5176\u4ed6\u5df2\u7ecf\u627e\u5230\u6700\u77ed\u8def\u7684\u8282\u70b9\u7684\u96c6\u5408\uff0c\u5bf9\u4e8e\u4e0d\u5728 S \u96c6\u5408\u4e2d\u7684\u8282\u70b9 u, \u6211\u4eec\u5b9a\u4e49 $dist[u]$ \u8868\u793a\u6700\u77ed\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u5176\u4e2d\u8def\u5f84\u662f\u4ece $s\\rightarrow v_i\\rightarrow u(v_i\\in S)$. \u5982\u679c\u8def\u5f84\u662f\u975e\u964d\u5e8f\u751f\u6210\u7684\uff0c\u90a3\u4e48</p> <ul> <li>\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u662f\u4ece $S$ \u4e2d\u7684\u67d0\u4e2a\u70b9 $v_i$ \u5230 $u$.  </li> <li>$dist[u]=\\min{w\\notin S\\ |\\ dist[w]}$. \u5373\u6211\u4eec\u4ece $S$ \u4e4b\u5916\u7684\u8282\u70b9\u4e2d\u9009\u62e9 $dist[u]$ \u6700\u5c0f\u7684\u4f5c\u4e3a\u4e0b\u4e00\u4e2a $u$.  </li> <li>\u5982\u679c $dist[u_1]&lt;dist[u_2]$ \u540c\u65f6\u6211\u4eec\u5c06 $u_1$ \u52a0\u5165\u4e86 $S$, \u90a3\u4e48 $dist[u_2]$ \u53ef\u80fd\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u6539\u53d8\u4e86\uff0c\u90a3\u4e48 $dist[u_2]=dist[u_1]+length$.   <pre><code>void Dijkstra( Table T )\n{   /* T is initialized by Figure 9.30 on p.303 */\n    Vertex  V, W;\n    for ( ; ; ) { /* O( |V| ) */\n        V = smallest unknown distance vertex;\n        if ( V == NotAVertex )\n    break; \n        T[ V ].Known = true;\n        for ( each W adjacent to V )\n    if ( !T[ W ].Known ) \n        if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) {\n            Decrease( T[ W ].Dist  to\n             T[ V ].Dist + Cvw );\n        T[ W ].Path = V;\n        } /* end-if update W */\n    } /* end-for( ; ; ) */\n}\n/* not work for edge with negative cost  */\n</code></pre> <p>\u603b\u7684\u8fd0\u884c\u65f6\u95f4 $O(|E|+|V|^2)$ </p> <p>\u5177\u4f53\u5b9e\u73b0:</p> <ul> <li>\u901a\u8fc7\u626b\u63cf\u6574\u4e2a\u8868\u6765\u627e\u5230 smallest unknown distance vertex - $O(|V|^2+|E|)$ \uff08\u5f53\u56fe\u662f\u7a20\u5bc6\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u597d\u7684\uff09</li> <li>\u4f7f\u7528\u5806\u3002\u9996\u5148\u6211\u4eec <code>DeleteMin</code>, \u968f\u540e\u53ef\u4ee5 <code>DecreaseKey</code> \u6765\u8fdb\u884c\u66f4\u65b0\uff0c\u8fd9\u6837\u6211\u4eec\u9700\u8981\u8bb0\u5f55 $d_i$ \u7684\u503c\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5f53\u5806\u53d1\u751f\u53d8\u5316\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u66f4\u65b0\uff1b\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5728\u6bcf\u6b21\u66f4\u65b0\u540e\u5c06 $w$ \u548c\u65b0\u503c $d_w$ \u63d2\u5165\u5806\uff0c\u8fd9\u6837\u5806\u4e2d\u53ef\u80fd\u6709\u540c\u4e00\u9876\u70b9\u7684\u591a\u4e2a\u4ee3\u8868\u3002\u5f53\u5220\u9664\u6700\u5c0f\u503c\u7684\u65f6\u5019\u9700\u8981\u68c0\u67e5\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u5df2\u7ecf\u77e5\u9053\u7684\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/graph/#_11","title":"\u8d1f\u6743\u8fb9\u7684\u56fe","text":"<pre><code>void  WeightedNegative( Table T )\n{   /* T is initialized by Figure 9.30 on p.303 */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) { /* each vertex can dequeue at most |V| times */\n        V = Dequeue( Q );\n        for ( each W adjacent to V )\n    if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) {\n        T[ W ].Dist = T[ V ].Dist + Cvw;\n        T[ W ].Path = V;\n        if ( W is not already in Q )\n            Enqueue( W, Q );\n    } /* end-if update */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n/* negative-cost cycle will cause indefinite loop */\n</code></pre>"},{"location":"ZJU_CS/FDS/graph/#_12","title":"\u65e0\u5708\u56fe","text":"<p>\u5982\u679c\u56fe\u662f\u65e0\u5708\u7684\uff0c\u6211\u4eec\u4ee5\u62d3\u6251\u5e8f\u9009\u62e9\u8282\u70b9\u6765\u6539\u8fdb\u7b97\u6cd5\u3002\u5f53\u9009\u62e9\u4e00\u4e2a\u9876\u70b9\u540e\uff0c\u6309\u7167\u62d3\u6251\u5e8f\u4ed6\u6ca1\u6709\u4ece\u672a\u77e5\u9876\u70b9\u53d1\u51fa\u7684\u8fdb\u5165\u8fb9\uff0c\u56e0\u6b64\u4ed6\u7684\u8ddd\u79bb\u4e0d\u53ef\u80fd\u518d\u964d\u4f4e\uff0c\u7b97\u6cd5\u5f97\u4ee5\u4e00\u6b21\u5b8c\u6210\u3002</p> <p>$T=O(|V|+|E|)$ \u800c\u4e14\u4e0d\u9700\u8981\u5806</p> <p>\u5e94\u7528\uff1aAOE (Activity On Edge) \u7f51\u7edc</p> <p>!!! Info     digraph: \u6709\u5411\u56fe     Multigraph: \u591a\u91cd\u56fe\uff0c\u5373\u6709\u91cd\u8fb9\u7684\u56fe      cycle: \u5708      underlying graph: \u57fa\u7840\u56fe       Adjacency Matrix: \u90bb\u63a5\u77e9\u9635       Adjacency Lists: \u90bb\u63a5\u8868     Adjacency Multilists: \u90bb\u63a5\u591a\u91cd\u8868\u5217  </p>"},{"location":"ZJU_CS/FDS/graph/#_13","title":"\u6700\u5927\u6d41","text":"<p>\u6b8b\u5dee\u7f51\u7edc \u5728\u903b\u8f91\u4e0a\u5141\u8bb8\u6c34\u56de\u4f20   \u903b\u8f91\u4e0e\u7269\u7406\u533a\u5206    \u64a4\u9500\u64cd\u4f5c \u6709\u73af\u7684\u60c5\u51b5\u4f9d\u7136\u53ef\u4ee5\u7528 \u5f53\u903b\u8f91\u4e0a\u7684\u8def\u5f84\u4e0e\u7269\u7406\u4e0a\u7684\u8def\u5f84\u90fd\u7528\u5b8c\u4e86\u4ee5\u540e\u90a3\u5c31\u662f\u7ed3\u675f\u4e86</p>"},{"location":"ZJU_CS/FDS/graph/#_14","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u6700\u5c0f\u751f\u6210\u6811</p> <p>\u6700\u5c0f\u751f\u6210\u6811\uff08\u82f1\u8bed\uff1aMinimum spanning tree\uff0c\u7b80\u79f0MST\uff09\u662f\u6700\u5c0f\u6743\u91cd\u751f\u6210\u6811\uff08\u82f1\u8bed\uff1aMinimum weight spanning tree\uff09\u7684\u7b80\u79f0\uff0c\u662f\u4e00\u526f\u8fde\u901a\u52a0\u6743\u65e0\u5411\u56fe\u4e2d\u4e00\u68f5\u6743\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002</p> <p>\u5728\u4e00\u7ed9\u5b9a\u7684\u65e0\u5411\u56fe $G=(V,E)$ \u4e2d, $(u,v)$ \u4ee3\u8868\u8fde\u63a5\u9876\u70b9 u \u4e0e\u9876\u70b9 v \u7684\u8fb9, \u800c $w(u,v)$ \u4ee3\u8868\u6b64\u8fb9\u7684\u6743\u91cd\uff0c\u82e5\u5b58\u5728 T \u4e3a E \u7684\u5b50\u96c6(\u5373 $T \\subseteq  E$ ) \u4e14 (V, T) \u4e3a\u6811\uff0c\u4f7f\u5f97\uff1a $$ w(T) = \\sum_{(u,v) \\in T}{w(u,v)} $$ \u7684 w(T) \u6700\u5c0f\uff0c\u5219\u6b64 T \u4e3a G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u4e00\u4e2agraph\u6709\u751f\u6210\u6811\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u8fde\u901a\u56fe</p>"},{"location":"ZJU_CS/FDS/graph/#prim","title":"Prim\u7b97\u6cd5","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u548c<code>dijkstra</code>\u6709\u975e\u5e38\u76f8\u4f3c\u7684\u5730\u65b9\uff0c\u5018\u82e5\u4f60\u5df2\u7ecf\u5f7b\u5e95\u7406\u89e3<code>dijkstra</code>\u7b97\u6cd5\u7684\u8bdd\uff0c\u76f8\u4fe1\u4f60\u4e00\u5b9a\u80fd\u5f88\u5feb\u6d1e\u6089\u5176\u4e2d\u7684\u9053\u7406\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <ol> <li>\u8f93\u5165\uff1a\u4e00\u4e2a\u52a0\u6743\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u9876\u70b9\u96c6\u5408\u4e3aV\uff0c\u8fb9\u96c6\u5408\u4e3aE\uff1b</li> <li>\u521d\u59cb\u5316\uff1a\u5b9a\u4e49\u5b58\u653e\u5f53\u524d\u5df2\u8d70\u70b9\u7684\u96c6\u5408Vnew = {x}\uff0c\u5176\u4e2dx\u4e3a\u96c6\u5408V\u4e2d\u7684\u4efb\u610f\u8282\u70b9\uff08\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff09\uff0c\u5b9a\u4e49\u5b58\u653e\u5f53\u524d\u5df2\u8d70\u8fb9\u7684\u96c6\u5408Enew = { }\uff0c\u4e3a\u7a7a\uff1b</li> <li>\u91cd\u590d\u4e0b\u5217\u64cd\u4f5c\uff0c\u76f4\u5230 Vnew = V\uff1a \u2460 \u5728\u96c6\u5408E\u4e2d\u9009\u53d6\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5176\u4e2du\u4e3a\u96c6\u5408Vnew\u4e2d\u7684\u5143\u7d20\uff0c\u800cv\u4e0d\u5728Vnew\u96c6\u5408\u5f53\u4e2d\uff0c\u5e76\u4e14v\u2208V\uff08\u5982\u679c\u5b58\u5728\u6709\u591a\u6761\u6ee1\u8db3\u524d\u8ff0\u6761\u4ef6\u5373\u5177\u6709\u76f8\u540c\u6743\u503c\u7684\u8fb9\uff0c\u5219\u53ef\u4efb\u610f\u9009\u53d6\u5176\u4e2d\u4e4b\u4e00\uff09\uff1b \u2461 \u5c06v\u52a0\u5165\u96c6\u5408Vnew\u4e2d\uff0c\u5c06\u8fb9\u52a0\u5165\u96c6\u5408Enew\u4e2d\uff1b <li>\u8f93\u51fa\uff1a\u4f7f\u7528\u96c6\u5408Vnew\u548cEnew\u6765\u63cf\u8ff0\u6240\u5f97\u5230\u7684\u6700\u5c0f\u751f\u6210\u6811</li> <p>\u90fd\u6709\u4e00\u4e2a\u5df2\u77e5\u96c6\u5408S\uff0c\u90fd\u662f\u4e0d\u65ad\u5f80\u8fd9\u4e2aS\u96c6\u5408\u91cc\u9762\u6dfb\u52a0\u65b0\u7684\u70b9</p> <p>\u552f\u4e00\u7684\u533a\u522b\u5c31\u662fprim\u4e0d\u662f\u5bf9dist\u7d2f\u52a0\uff0c\u800c\u662f\u628a\u65b0\u7684\u6743\u8fb9\u548c\u539f\u6709\u6743\u8fb9\u4f5c\u5bf9\u6bd4\uff0c\u53d6\u6700\u5c0f\u7684</p>"},{"location":"ZJU_CS/FDS/graph/#kruskal","title":"Kruskal\u7b97\u6cd5","text":"<p>\u4e0ePrim\u7b97\u6cd5\u5c06\u70b9\u8bbe\u4e3a\u5bf9\u8c61\u4e0d\u540c\uff0cKruskal\u7b97\u6cd5\u662f\u5c06\u8fb9\u8bbe\u4e3a\u5bf9\u8c61 \u2014\u2014 \u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u5230\u751f\u6210\u6811\u5f53\u4e2d\u3002</p> <p>Kruskal\uff08\u514b\u9c81\u65af\u5361\u5c14\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u5de7\u5999\u5229\u7528\u5e76\u67e5\u96c6\u6765\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <ol> <li>\u8bbe\u65e0\u5411\u8fde\u901a\u56feGraph\u6709v\u4e2a\u9876\u70b9\uff0ce\u6761\u8fb9\uff1b</li> <li>\u65b0\u5efa\u56feGraphnew\uff0cGraphnew\u62e5\u6709\u4e0e\u539f\u56fe\u4e2d\u76f8\u540c\u7684v\u4e2a\u9876\u70b9\uff0c\u4f46\u6ca1\u6709\u8fb9\uff1b</li> <li>\u5c06\u539f\u56feGraph\u4e2d\u6240\u6709\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b</li> <li>\u8fdb\u5165\u4e00\u5c42\u5faa\u73af\uff0c\u8be5\u5faa\u73af\u4ece\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\u904d\u5386\u6bcf\u6761\u8fb9\uff0c\u76f4\u81f3\u56feGraphnew\u4e2d\u6240\u6709\u7684\u8282\u70b9\u90fd\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u5faa\u73af\u4f53\u5185\u7684\u5185\u5bb9\u5982\u4e0b\uff1a if\uff08\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u4e8e\u56feGraphnew\u4e2d\u4e0d\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\uff09 \u5219\u6dfb\u52a0\u8fd9\u6761\u8fb9\u5230\u56feGraphnew\u4e2d\uff1b</li> </ol> <p>!!!     \u7a00\u758f\u56fe\u4e00\u822c\u9009\u62e9 prim,\u91c7\u7528 \u90bb\u63a5\u77e9\u9635 \u8fdb\u884c\u5b58\u50a8\u8fb9\u4e4b\u95f4\u7684\u5173\u7cfb\u3002     \u7a20\u5bc6\u56fe\u4e00\u822c\u9009\u62e9 Kruskal ,\u91c7\u7528\u90bb\u63a5\u8868\u8fdb\u884c\u5b58\u50a8\u8fb9\u4e4b\u95f4\u7684\u5173\u7cfb(\u66f4\u591a\u91c7\u7528\u7ed3\u6784\u4f53\u7684\u65b9\u5f0f)\u3002</p>"},{"location":"ZJU_CS/FDS/hash/","title":"\u6563\u5217\uff08\u54c8\u5e0c\uff09","text":""},{"location":"ZJU_CS/FDS/hash/#_2","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u7406\u60f3\u7684\u6563\u5217\u8868\u662f\u4e00\u4e2a\u542b\u6709\u5173\u952e\u5b57\u7684\u5177\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u3002</p> <p>ADT \u6a21\u578b</p> <ul> <li>\u5bf9\u8c61\uff1a\u4e00\u7ec4 \u540d\u79f0-\u5c5e\u6027 \u5bf9\uff0c\u5176\u4e2d\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002</li> <li>\u64cd\u4f5c<ul> <li>\u521b\u5efa\u6563\u5217\u8868</li> <li>\u67e5\u8be2\u5173\u952e\u5b57\u662f\u5426\u5728\u6563\u5217\u8868\u4e2d</li> <li>\u67e5\u8be2\u5173\u952e\u5b57</li> <li>\u63d2\u5165\u5173\u952e\u5b57</li> <li>\u5220\u9664\u5173\u952e\u5b57</li> </ul> </li> </ul> <p>\u5bf9\u6bcf\u4e2a\u6807\u8bc6\u7b26 <code>x</code>, \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6563\u5217\u51fd\u6570 <code>f(x)=</code>position of <code>x</code> in <code>ht[ ]</code> (i.e. the index of the bucket that contains <code>x</code>)  </p> <p>\u54c8\u5e0c\u8fc7\u7a0b\u5c31\u662f\u5c06\u6570\u7ec4\u5143\u7d20\u4e0e\u4e0b\u6807\u5efa\u7acb\u5173\u7cfb\u7684\u8fc7\u7a0b\u3002</p> <p>\u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\u3002</p> <ol> <li>\u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002</li> <li>\u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002</li> </ol> <pre><code>index = hash(key) % capacity\n</code></pre> <p>\u968f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u7528 $T$ \u8868\u793a <code>x</code> \u53ef\u80fd\u7684\u4e0d\u540c\u503c; $n$ \u8868\u793a <code>ht[]</code> \u4e2d\u6240\u6709\u4e0d\u540c\u6807\u8bc6\u7b26\u7684\u4e2a\u6570; \u6807\u8bc6\u7b26\u5bc6\u5ea6\u5b9a\u4e49\u4e3a $\\dfrac{n}{T}$; \u88c5\u8f7d\u5bc6\u5ea6$\\lambda$\u5b9a\u4e49\u4e3a $\\dfrac{n}{sb}$ </p> <p>!!! example     \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100\u3001\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u6613\u5f97\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u56fe 6-2 \u4ee5 key \u5b66\u53f7\u548c value \u59d3\u540d\u4e3a\u4f8b\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002</p> <pre><code>&lt;img alt=\"20231228203631.png\" src=\"img/hash/20231228203631.png\"&gt;\n</code></pre> <ul> <li>\u5f53\u6211\u4eec\u628a\u4e24\u4e2a\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u6876\u91cc\u65f6\uff0c\u51b2\u7a81\u53d1\u751f\u4e86(i.e. $f(i_1)=f(i_2), i_1\\neq i_2$)</li> <li>\u5f53\u6211\u4eec\u5c06\u4e00\u4e2a\u65b0\u7684\u6807\u8bc6\u7b26\u6620\u5c04\u5230\u4e00\u4e2a\u6ee1\u7684\u6876\u91cc\u65f6\uff0c\u6ea2\u51fa\u53d1\u751f\u4e86  </li> </ul> <p>\u6ca1\u6709\u6ea2\u51fa\u65f6, $T_{search} = T_{insert} = T_{delete} = O( 1 )$</p> <p></p>"},{"location":"ZJU_CS/FDS/hash/#_3","title":"\u6563\u5217\u51fd\u6570","text":"<p>$f$ \u8981\u6ee1\u8db3\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u5bb9\u6613\u8ba1\u7b97\uff0c\u6700\u5c0f\u5316\u51b2\u7a81\u7684\u6570\u91cf</li> <li>$f$ \u5e94\u8be5\u662f\u65e0\u504f\u89c1\u7684\uff0c\u5373 $\\forall x,i$ \u6211\u4eec\u6709 $P(f(x)=i)=\\dfrac{1}{b}$. \u8fd9\u6837\u7684\u6563\u5217\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u6563\u5217\u51fd\u6570.  </li> </ul> <p>TableSize \u5e94\u8be5\u662f\u4e00\u4e2a\u7d20\u6570\uff0c\u8fd9\u6837\u5bf9\u968f\u673a\u8f93\u5165\uff0c\u5173\u952e\u5b57\u7684\u5206\u5e03\u6bd4\u8f83\u5747\u5300 \u5982 $f(x)=(\\sum x[N-i-1]*32^i)\\%TableSize$  </p> <p>\u4e0b\u9762\u4ecb\u7ecd\u54c8\u5e0c\u51b2\u7a81\u7684\u89e3\u51b3\u65b9\u6848</p>"},{"location":"ZJU_CS/FDS/hash/#separate-chaining","title":"\u5206\u79bb\u94fe\u63a5 \uff08\u94fe\u5f0f\u5730\u5740 separate chaining\uff09","text":"<p>\u89e3\u51b3\u51b2\u7a81\u7684\u7b2c\u4e00\u79cd\u65b9\u6cd5\u53eb\u4f5c\u5206\u79bb\u94fe\u63a5\u6cd5\u3002\u5176\u505a\u6cd5\u662f\u5c06\u6563\u5217\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u503c\u7684\u6240\u6709\u5143\u7d20\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u3002</p> <ul> <li> <p>\u7ed3\u6784\u4f53\u5b9a\u4e49      <p><code>C struct  ListNode;  typedef  struct  ListNode  *Position;  struct  HashTbl;  typedef  struct  HashTbl  *HashTable;  struct  ListNode {      ElementType  Element;      Position  Next;  };  typedef  Position  List;  /* List *TheList will be an array of lists, allocated later */  /* The lists use headers (for simplicity), */  /* though this wastes space */  struct  HashTbl {      int  TableSize;      List  *TheLists;  };</code> </p> <p>\u56fe\u4e2d\u4e0a\u9762\u7684\u84dd\u8272\u90e8\u5206\u4ee3\u8868Thelists[i]\uff0c\u4e0b\u9762\u7684\u84dd\u8272\u90e8\u5206\u4ee3\u8868Next,\u9ed1\u8272\u4ee3\u8868Struct ListNode </p> <li> <p>\u521b\u5efa\u7a7a\u8868      <p><code>C HashTable  InitializeTable( int TableSize )  {   HashTable  H;      int  i;      if ( TableSize &lt; MinTableSize ) {          Error( \"Table size too small\" );  return NULL;       }      H = malloc( sizeof( struct HashTbl ) );  /* Allocate table */  //\u8fd9\u4e2a\u91cc\u9762\u6709\u4e00\u4e2aint\u548c\u4e00\u4e2a\u6307\u5411List\u7c7b\u578b\u7684\u6307\u9488     if ( H == NULL )    FatalError( \"Out of space!!!\" );      H-&gt;TableSize = NextPrime( TableSize );  /* Better be prime */     H-&gt;TheLists = malloc( sizeof( List ) * H-&gt;TableSize );  /*Array of lists*/ /*TheLists\u4ee3\u8868\u6570\u7ec4\u540d\u79f0*/     if ( H-&gt;TheLists == NULL )   FatalError( \"Out of space!!!\" );      for( i = 0; i &lt; H-&gt;TableSize; i++ ) {   /* Allocate list headers */     H-&gt;TheLists[ i ] = malloc( sizeof( struct ListNode ) ); /* Slow! */     if ( H-&gt;TheLists[ i ] == NULL )  FatalError( \"Out of space!!!\" );      else    H-&gt;TheLists[ i ]-&gt;Next = NULL;     }      return  H;  }</code> </p> <li> <p>\u67e5\u8be2\u5173\u952e\u5b57      <p>``` C Position  Find ( ElementType Key, HashTable H )  {      Position P;      List L; </p> <pre><code>L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; //Your hash function\n\nP = L-&gt;Next; \nwhile( P != NULL &amp;&amp; P-&gt;Element != Key )  /* Probably need strcmp */ \nP = P-&gt;Next; \nreturn P;\n</code></pre> <p>}  ``` </p> <li> <p>\u63d2\u5165\u5173\u952e\u5b57     \u9996\u5148\u6211\u4eec\u67e5\u627e\u8fd9\u4e2a\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u5df2\u7ecf\u5b58\u5728\u90a3\u4e48\u6211\u4eec\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002      <p><code>C void  Insert ( ElementType Key, HashTable H )  {      Position   Pos, NewCell;      List  L;      Pos = Find( Key, H );      if ( Pos == NULL ) {   /* Key is not found, then insert */     NewCell = malloc( sizeof( struct ListNode ) );      if ( NewCell == NULL )     FatalError( \"Out of space!!!\" );      else {          L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; //\u524d\u9762\u5df2\u7ecffind\u8fc7\u4e86\uff0c\u8fd9\u91cc\u53c8\u505a\u4e00\u6b21hash\uff0c\u6709\u70b9\u6d6a\u8d39         NewCell-&gt;Next = L-&gt;Next;          NewCell-&gt;Element = Key; /* Probably need strcpy! */          L-&gt;Next = NewCell;          /*\u5934\u63d2\u6cd5*/     }      }  }</code></p> <p>\u94fe\u5f0f\u5730\u5740\u4e0d\u53d7$\\lambda$\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u5f00\u653e\u5bfb\u5740\u4f1a</p>"},{"location":"ZJU_CS/FDS/hash/#open-addressing","title":"\u5f00\u653e\u5730\u5740 Open Addressing","text":"<p>\u5f00\u653e\u5730\u5740\u6cd5\uff0c\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u5c1d\u8bd5\u9009\u62e9\u5176\u4ed6\u7684\u5355\u5143\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u5355\u5143\u4e3a\u6b62\u3002 \u4e00\u822c\u5730, $h_0(X),h_1(X),\\ldots,$ \u5176\u4e2d $h_i(X)=(Hash(X)+F(i)) mod\\ TableSize $ \u4e00\u822c\u6765\u8bf4 $\\lambda&lt;0.5$  (loading density)</p> <pre><code>Algorithm: insert key into an array of hash table\n{\n    index = hash(key);\n    initialize i = 0 ------ the counter of probing;\n    while ( collision at index ) {\n    index = ( hash(key) + f(i) ) % TableSize;\n    if ( table is full )    break;\n    else    i ++;\n    }\n    if ( table is full )\n    ERROR (\u201cNo space left\u201d);\n    else\n    insert key at index;\n}\n</code></pre> <p>f(i) is called the collision resolution function.</p>"},{"location":"ZJU_CS/FDS/hash/#_4","title":"\u7ebf\u6027\u63a2\u6d4b\u6cd5","text":"<p>\u5728\u7ebf\u6027\u63a2\u6d4b\u6cd5\u4e2d\uff0c\u51fd\u6570 $F$ \u662f $i$ \u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5178\u578b\u60c5\u5f62\u662f $F(i)=i$. \u8fd9\u76f8\u5f53\u4e8e\u9010\u4e2a\u63a2\u6d4b\u5355\u5143\uff08\u5fc5\u8981\u65f6\u53ef\u4ee5\u7ed5\u56de\u5230\u7b2c\u4e00\u4e2a\u5355\u5143\uff09\u4ee5\u67e5\u627e\u51fa\u4e00\u4e2a\u7a7a\u5355\u5143\u3002</p> <p></p> <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u4f7f\u7528\u7ebf\u6027\u63a2\u6d4b\u7684\u63a2\u6d4b\u6b21\u6570\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u7ea6\u4e3a $\\dfrac{1}{2}(1+\\dfrac{1}{(1-\\lambda)^2})$ \u6b21; \u5bf9\u4e8e\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u5219\u9700 $\\dfrac{1}{2}(1+\\dfrac{1}{1-\\lambda})$ \u6b21</p>"},{"location":"ZJU_CS/FDS/hash/#_5","title":"\u5e73\u65b9\u63a2\u6d4b\u6cd5","text":"<p>\u5e73\u65b9\u63a2\u6d4b\u6cd5\u662f\u6d88\u9664\u7ebf\u6027\u63a2\u6d4b\u4e2d \u4e00\u6b21\u805a\u96c6\u95ee\u9898(primary clustering) \u7684\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u3002\u51b2\u7a81\u51fd\u6570\u4e3a\u4e8c\u6b21\u51fd\u6570\uff0c\u4e00\u822c\u4e3a $F(i)=i^2$  </p> <p>\u5b9a\u7406: \u5982\u679c\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\uff0c\u4e14\u8868\u7684\u5927\u5c0f\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5f53\u8868\u81f3\u5c11\u6709\u4e00\u534a\u4e3a\u7a7a\u65f6\uff0c\u603b\u80fd\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u5143\u7d20 $x$, \u5b83\u6709 $\\lceil TableSize/2 \\rceil$ \u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u53ef\u80fd\u653e\u7f6e\u8fd9\u4e2a\u5143\u7d20\u3002\u5982\u679c\u6700\u591a $\\lfloor TableSize/2 \\rfloor $ \u4f4d\u7f6e\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u603b\u80fd\u627e\u5230\u653e $x$ \u7684\u7a7a\u5355\u5143\u3002</p> <ul> <li> <p>\u67e5\u627e\u5143\u7d20     $F(i)=F(i-1)+i^2-(i-1)^2=F(i-1)+2i-1$     \u8fd9\u91cc <code>while</code> \u8bed\u53e5\u7684\u6d4b\u8bd5\u987a\u5e8f\u4e0d\u80fd\u6539\u53d8\u3002\u5982\u679c\u662f <code>empty</code>\uff0c\u5219 <code>key</code> \u6ca1\u6709\u5b9a\u4e49\uff0c\u5148\u5224\u65ad\u4f1a\u51fa\u9519\u3002     \u5047\u8bbe\u63a2\u6d4b\u6b65\u6570 i \u4e0d\u8d85\u8fc7 $\\dfrac{TS}{2}+1$ \u6b65\uff0c\u5373\u5047\u8bbe\u8868 $&lt;50\\%$\u3002\u8fd9\u65f6 <code>CurrentPos+2i-1 &lt;= 2TS-1</code>\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u51cf\u6cd5\u3002</p> <p><code>C Position  Find ( ElementType Key, HashTable H )  {   Position  CurrentPos;      int  CollisionNum;      CollisionNum = 0;      CurrentPos = Hash( Key, H-&gt;TableSize );      while( H-&gt;TheCells[ CurrentPos ].Info != Empty &amp;&amp;      H-&gt;TheCells[ CurrentPos ].Element != Key ) {      CurrentPos += 2 * ++CollisionNum \uf02d 1;      if ( CurrentPos &gt;= H-&gt;TableSize )  CurrentPos \uf02d = H-&gt;TableSize;      }      return CurrentPos;  }</code> </p> <li> <p>\u63d2\u5165\u5143\u7d20      <p><code>C void  Insert ( ElementType Key, HashTable H )  {      Position  Pos;      Pos = Find( Key, H );      if ( H-&gt;TheCells[ Pos ].Info != Legitimate ) { /* OK to insert here */      H-&gt;TheCells[ Pos ].Info = Legitimate;      H-&gt;TheCells[ Pos ].Element = Key; /* Probably need strcpy */      }  }</code> </p> <p>\u6563\u5217\u5230\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u90a3\u4e9b\u5143\u7d20\u5c06\u63a2\u6d4b\u76f8\u540c\u7684\u5907\u9009\u5355\u5143\uff0c\u8fd9\u79f0\u4e3a\u4e8c\u6b21\u805a\u96c6\u3002</p>"},{"location":"ZJU_CS/FDS/hash/#_6","title":"\u53cc\u6563\u5217","text":"<p>$f(i)=i*hash_2(X)$  \u6211\u4eec\u5728 $X$ \u8ddd\u79bb $hash_2(X),2hash_2(X),\\ldots$ \u7b49\u4f4d\u7f6e\u8fdb\u884c\u63a2\u6d4b\u3002 \u5e38\u7528 $hash_2(X)=R-(X mod R)$, \u5176\u4e2d $R$ \u662f\u4e00\u4e2a\u6bd4 $TableSize$ \u5c0f\u7684\u7d20\u6570\u3002</p> <ul> <li>\u5982\u679c\u6b63\u786e\u5b9e\u73b0\u4e86\u53cc\u91cd\u54c8\u5e0c\uff0c\u6a21\u62df\u8868\u660e\u9884\u671f\u7684\u63a2\u6d4b\u6570\u91cf\u51e0\u4e4e\u4e0e\u968f\u673a\u51b2\u7a81\u89e3\u51b3\u7b56\u7565\u76f8\u540c\u3002</li> <li>\u5e73\u65b9\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/hash/#_7","title":"\u518d\u6563\u5217","text":"<p>\u5bf9\u4e8e\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\u7684\u5f00\u653e\u5730\u5740\u6563\u5217\u6cd5\uff0c\u5982\u679c\u8868\u7684\u5143\u7d20\u8fc7\u591a\uff0c\u90a3\u4e48\u64cd\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u5c06\u5f00\u59cb\u6d88\u8017\u8fc7\u957f\u3002  </p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u6563\u5217\u8868</li> <li>\u5229\u7528\u65b0\u7684\u6563\u5217\u51fd\u6570\u5c06\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u6563\u5217\u503c\uff0c\u5e76\u63d2\u5165</li> </ul> <p>$T(N)=O(N)$  </p> <p>\u4ec0\u4e48\u65f6\u5019\u518d\u6563\u5217\uff1f</p> <ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u5c31\u518d\u6563\u5217</li> <li>\u5f53\u63d2\u5165\u5931\u8d25\u65f6</li> <li>\u5f53\u8868\u8fbe\u5230\u67d0\u4e00\u4e2a\u88c5\u586b\u56e0\u5b50\u65f6\u8fdb\u884c\u518d\u6563\u5217\u3002  </li> </ul> <p>\u901a\u5e38\u5728\u91cd\u54c8\u5e0c\u4e4b\u524d\u5e94\u8be5\u6709 $N/2$ \u4e2a\u63d2\u5165\uff0c\u6240\u4ee5 $O(N)$ \u91cd\u54c8\u5e0c\u53ea\u4f1a\u7ed9\u6bcf\u4e2a\u63d2\u5165\u589e\u52a0\u4e00\u4e2a\u6052\u5b9a\u7684\u4ee3\u4ef7\u3002 \u7136\u800c\uff0c\u5728\u4ea4\u4e92\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u5e78\u7684\u7528\u6237\u7684\u63d2\u5165\u5bfc\u81f4\u91cd\u65b0\u6563\u5217\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u901f\u5ea6\u51cf\u6162\u3002</p>"},{"location":"ZJU_CS/FDS/heap/","title":"\u4f18\u5148\u961f\u5217\uff08\u5806\uff09","text":""},{"location":"ZJU_CS/FDS/heap/#adt","title":"ADT \u6a21\u578b","text":"<ul> <li>\u5bf9\u8c61\uff1a\u4e00\u4e2a\u6709\u9650\u7684\u6709\u5e8f\u96c6</li> <li>\u64cd\u4f5c\uff1a<ul> <li>\u521d\u59cb\u5316</li> <li>\u63d2\u5165</li> <li>\u5220\u9664\u6700\u5c0f\u7684\u5143\u7d20</li> <li>\u5bfb\u627e\u6700\u5c0f\u7684\u5143\u7d20</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/heap/#_2","title":"\u7b80\u5355\u7684\u5b9e\u73b0","text":"<ul> <li>\u6570\u7ec4\uff1a<ul> <li>\u63d2\u5165\u5143\u7d20\u5230\u672b\u5c3e $\\Theta(1)$  </li> <li>\u627e\u5230\u6700\u5927/\u6700\u5c0f\u5143\u7d20 $\\Theta(n)$, \u5220\u9664\u5143\u7d20\u79fb\u52a8\u6570\u7ec4 $O(n)$</li> </ul> </li> <li>\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165\u5143\u7d20\u5230\u94fe\u8868\u5f00\u5934 $\\Theta(1)$</li> <li>\u627e\u5230\u6700\u5927/\u6700\u5c0f\u5143\u7d20 $\\Theta(n)$, \u5220\u9664\u5143\u7d20 $\\Theta(1)$ </li> </ul> </li> <li>\u6709\u5e8f\u6570\u7ec4\uff1a<ul> <li>\u63d2\u5165 \u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e $O(n)$, \u79fb\u52a8\u6570\u7ec4\u5e76\u63d2\u5165\u5143\u7d20 $O(n)$</li> <li>\u5220\u9664\u5f00\u5934/\u672b\u5c3e\u5143\u7d20 $\\Theta(1)$</li> </ul> </li> <li>\u6709\u5e8f\u94fe\u8868\uff1a<ul> <li>\u63d2\u5165 \u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e $O(n)$, \u63d2\u5165\u5143\u7d20 $\\Theta(1)$</li> <li>\u5220\u9664\u5f00\u5934/\u672b\u5c3e\u5143\u7d20 $\\Theta(1)$</li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/heap/#_3","title":"\u4e8c\u53c9\u5806","text":""},{"location":"ZJU_CS/FDS/heap/#_4","title":"\u7ed3\u6784\u6027\u8d28","text":"<p>\u5806\u662f\u4e00\u68f5\u88ab\u5b8c\u5168\u586b\u6ee1\u7684\u4e8c\u53c9\u6811\uff0c\u6709\u53ef\u80fd\u7684\u4f8b\u5916\u662f\u5728\u5e95\u5c42\uff1a\u5e95\u5c42\u4e0a\u7684\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u586b\u5165\u3002\u8fd9\u6837\u7684\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u4e00\u68f5\u9ad8 h \u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u4ecb\u4e8e $2^h$ \u5230 $2^{h+1}-1$ \u4e4b\u95f4\uff0c\u5373\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f $\\lfloor \\log N\\rfloor$</p> <p>\u5bf9\u4e8e\u4e0b\u6807\u4e3a $i$ \u7684\u5143\u7d20\uff0c\u5176\u5de6\u513f\u5b50\u4f4d\u4e8e $2i$ \u4e0a\uff0c\u53f3\u513f\u5b50\u4f4d\u4e8e $2i+1$ \u4e0a\uff0c\u4ed6\u7684\u7236\u4eb2\u4f4d\u4e8e $\\lfloor i/2 \\rfloor$ \u4e0a\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_5","title":"\u5806\u5e8f\u6027\u8d28","text":"<p>\u5982\u679c\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u4e0d\u5927\u4e8e\u5176\u513f\u5b50\u8282\u70b9\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u68f5\u5c0f\u6839\u6811\u3002\u5c0f\u6839\u5806\u5c31\u662f\u6ee1\u8db3\u5c0f\u6839\u6811\u6027\u8d28\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_6","title":"\u57fa\u672c\u7684\u5806\u64cd\u4f5c","text":""},{"location":"ZJU_CS/FDS/heap/#_7","title":"\u63d2\u5165","text":"<p>\u5bf9\u4e8e\u65b0\u7684\u8282\u70b9\uff0c\u552f\u4e00\u53ef\u4ee5\u653e\u7684\u4f4d\u7f6e\u5c31\u662f\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e\uff0c\u5426\u5219\u5806\u5c06\u4e0d\u518d\u662f\u5b8c\u5168\u6811\uff0c\u4f46\u8fd9\u6837\u53ef\u80fd\u7834\u574f\u5806\u7684\u5e8f\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u4e0a\u6d6e\u7684\u7b56\u7565\u3002</p> <pre><code>/* H-&gt;Element[ 0 ] is a sentinel */ \nvoid  Insert( ElementType  X,  PriorityQueue  H ) \n{ \n     int  i; \n\n     if ( IsFull( H ) ) { \n    Error( \"Priority queue is full\" ); \n    return; \n     } \n\n     for ( i = ++H-&gt;Size; H-&gt;Elements[ i / 2 ] &gt; X; i /= 2 ) \n    H-&gt;Elements[ i ] = H-&gt;Elements[ i / 2 ]; \n\n     H-&gt;Elements[ i ] = X; \n}\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u4ea4\u6362\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4ea4\u6362\u64cd\u4f5c\u7684\u65f6\u95f4\u6210\u672c\u66f4\u9ad8\u3002</p>"},{"location":"ZJU_CS/FDS/heap/#_8","title":"\u5220\u9664\u6700\u5c0f\u5143","text":"<p>\u6211\u4eec\u4e00\u822c\u91c7\u7528\u4e0b\u6ee4\u7684\u7b56\u7565\u3002\u5220\u9664\u6700\u5c0f\u5143\u540e\uff0c\u5728\u6839\u8282\u70b9\u4ea7\u751f\u4e00\u4e2a\u7a7a\u7a74\u3002\u540c\u65f6\u5806\u5c11\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u5806\u6700\u540e\u4e00\u4e2a\u5143\u7d20 X \u79fb\u52a8\u5230\u5806\u7684\u67d0\u4e2a\u5730\u65b9\u3002\u4ece\u6839\u8282\u70b9\u7684\u7a7a\u7a74\u5f00\u59cb\u6211\u4eec\u5c06\u7a7a\u7a74\u7684\u4e24\u4e2a\u513f\u5b50\u4e2d\u7684\u8f83\u5c0f\u8005\u79fb\u5165\u7a7a\u7a74\uff0c\u8fd9\u6837\u5c31\u628a\u7a7a\u7a74\u5f80\u4e0b\u63a8\u4e86\u4e00\u5c42\u3002\u91cd\u590d\u6b65\u9aa4\u76f4\u5230 X \u53ef\u4ee5\u653e\u5165\u7a7a\u7a74\u3002</p> <pre><code>ElementType  DeleteMin( PriorityQueue  H ) \n{ \n    int  i, Child; \n    ElementType  MinElement, LastElement; \n    if ( IsEmpty( H ) ) { \n         Error( \"Priority queue is empty\" ); \n         return  H-&gt;Elements[ 0 ];   } \n    MinElement = H-&gt;Elements[ 1 ];  /* save the min element */\n    LastElement = H-&gt;Elements[ H-&gt;Size-- ];  /* take last and reset size */\n    for ( i = 1; i * 2 &lt;= H-&gt;Size; i = Child ) {  /* Find smaller child */ \n         Child = i * 2; \n         if (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child+1] &lt; H-&gt;Elements[Child]) \n           Child++;     \n         if ( LastElement &gt; H-&gt;Elements[ Child ] )   /* Percolate one level */ \n           H-&gt;Elements[ i ] = H-&gt;Elements[ Child ]; \n         else     break;   /* find the proper position */\n    } \n    H-&gt;Elements[ i ] = LastElement; \n    return  MinElement; \n}\n</code></pre>"},{"location":"ZJU_CS/FDS/heap/#_9","title":"\u5176\u4ed6\u7684\u5806\u64cd\u4f5c","text":"<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u5c0f\u6839\u5806\uff0c\u627e\u9664\u4e86\u6700\u5c0f\u5143\u4ee5\u5916\u7684\u5143\u7d20\u90fd\u9700\u8981\u7ebf\u6027\u641c\u7d22\u6574\u4e2a\u5806\u3002</p> <ul> <li><code>DecreaseKey</code> DecreaseKey(P,$\\Delta$,H) \u64cd\u4f5c\u964d\u4f4e\u5728\u4f4d\u7f6e P \u5904\u7684\u5173\u952e\u5b57\u7684\u503c\u3002\u6211\u4eec\u9700\u8981\u4e0a\u6ee4\u64cd\u4f5c\u5bf9\u5806\u8fdb\u884c\u8c03\u6574\u3002</li> <li><code>IncreaseKey</code> IncreaseKey(P,$\\Delta$,H) \u64cd\u4f5c\u589e\u52a0\u5728\u4f4d\u7f6e P \u5904\u7684\u5173\u952e\u5b57\u7684\u503c\u3002\u6211\u4eec\u9700\u8981\u4e0b\u6ee4\u64cd\u4f5c\u5bf9\u5806\u8fdb\u884c\u8c03\u6574\u3002</li> <li><code>Delete</code> Delete(P,H) \u64cd\u4f5c\u5220\u9664\u5806\u4e2d\u4f4d\u7f6e P \u4e0a\u7684\u8282\u70b9\u3002\u8fd9\u4e2a\u64cd\u4f5c\u9996\u5148\u6267\u884c DecreaseKey(P,$\\infty$,H) \u518d\u6267\u884c DeleteMin \u5373\u53ef\u3002</li> <li><code>BuildHeap</code> BuildHeap(H) \u64cd\u4f5c\u628a N \u4e2a\u5173\u952e\u5b57\u4f5c\u4e3a\u8f93\u51fa\u5e76\u628a\u5b83\u4eec\u653e\u5728\u7a7a\u961f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 N \u4e2a\u76f8\u7ee7\u7684 Insert \u64cd\u4f5c\u5b8c\u6210\u3002 \u4e5f\u53ef\u4ee5\u5c06 N \u4e2a\u5173\u952e\u5b57\u4ee5\u4efb\u610f\u987a\u5e8f\u653e\u5165\u6811\u4e2d\u6784\u6210\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u4f9d\u6b21 percolate down. \u53ef\u4ee5\u8bc1\u660e\u8fd9\u65f6\u53ea\u9700\u8981\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u5b8c\u6210\u6811\u7684\u6784\u5efa\u3002</li> </ul> <p>\u5b9a\u7406\uff1a\u5305\u542b $2^{h+1}-1$ \u4e2a\u8282\u70b9\uff0c\u9ad8\u5ea6\u4e3a $h$ \u7684\u7406\u60f3\u4e8c\u53c9\u6811\uff0c\u5176\u8282\u70b9\u7684\u9ad8\u5ea6\u548c\u4e3a $2^{h+1}-1-(h+1)$ \u8bc1\u660e\uff1a$S=\\sum\\limits_{i=0}^h 2^i(h-i)$ \u56e0\u6b64 BuildHeap \u7684\u64cd\u4f5c\u662f\u7ebf\u6027\u7684</p>"},{"location":"ZJU_CS/FDS/heap/#d-heaps","title":"d-Heaps","text":"<p>d-\u5806\u662f\u4e8c\u53c9\u5806\u7684\u63a8\u5e7f\uff0c\u6240\u6709\u7684\u8282\u70b9\u90fd\u6709 d \u4e2a\u513f\u5b50\uff08\u56e0\u6b64\u4e8c\u53c9\u5806\u662f 2-\u5806\uff09 d-\u5806\u6bd4\u4e8c\u53c9\u5806\u6d45\uff0c\u56e0\u6b64 Insert \u64cd\u4f5c\u6539\u8fdb\u4e3a $O(\\log_dN)$ \u4f46\u5bf9\u4e8e\u5927\u7684 d, DeleteMin \u4f1a\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u5c42\u90fd\u8981\u627e\u51fa d \u4e2a\u513f\u5b50\u4e2d\u7684\u6700\u5c0f\u8005\u3002\u8fd9\u6837\u64cd\u4f5c\u7684\u7528\u65f6\u5c31\u662f $O(d\\log_dN)$\u3002\u800c\u4e14\u5f53 d \u4e0d\u662f 2 \u7684\u5e42\u6b21\u65f6\uff0c\u627e\u51fa\u513f\u5b50\u548c\u7236\u4eb2\u4f1a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u3002</p> <p>!!! Info     Priority queue: \u4f18\u5148\u961f\u5217      Binary heap: \u4e8c\u53c9\u5806     \u5806\u5e8f: heap order     \u4e0a\u6d6e\uff1apercolate up     \u4e0b\u6ee4\uff1apercolate down  </p>"},{"location":"ZJU_CS/FDS/homework/","title":"\u4f5c\u4e1a\u8981\u70b9","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u7740\u6240\u6709homework\u4e2d\u7684\u8981\u70b9\uff0c\u4fbf\u4e8e\u590d\u4e60\uff01\uff08\u9884\u4e60 [TOC]</p>"},{"location":"ZJU_CS/FDS/homework/#hw1-algorithm","title":"HW1 Algorithm","text":"<p>!!! Note \"\u6458\u8981\"     === \"Knowledge\"         \u672c\u8282\u4f60\u9700\u8981\u5b66\u4f1a\u57fa\u7840\u7684\u7b97\u6cd5\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u3002</p> <pre><code>=== \"glossary\"\n    |\u82f1\u6587|\u4e2d\u6587|\n    |:--:|:--:|\n    |complexity |\u590d\u6742\u5ea6 |\n</code></pre> <ol> <li>The Fibonacci number sequence ${F_N}$ is defined as: $F_0 = 0$, $F_1=1$,$F_N=F_{N\u22121}+F_{N\u22122}, N=2, 3, ....$ The time complexity of the function which calculates $F_N$ recursively is \u0398(N!).</li> </ol> <p>??? info \"Tips\"     F</p> <pre><code>\u5728\u9012\u5f52\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\uff0c\u800c\u6811\u7684\u6df1\u5ea6\u8868\u793a\u9012\u5f52\u7684\u5c42\u6570\u3002\u5bf9\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f1a\u751f\u6210\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u4f9d\u8d56\u4e8e\u524d\u4e24\u4e2a\u6570\u7684\u548c\u3002\n\n\u5047\u8bbe\u6211\u4eec\u8981\u8ba1\u7b97\u7b2cn\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u5c06\u662fn\u3002\u6bcf\u4e2a\u8282\u70b9\u7684\u8ba1\u7b97\u65f6\u95f4\u662f\u5e38\u6570\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u53ea\u6d89\u53ca\u5230\u7b80\u5355\u7684\u52a0\u6cd5\u64cd\u4f5c\u3002\n\n\u56e0\u6b64\uff0c\u9012\u5f52\u65b9\u6cd5\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3aO(2^n)\u3002\u8fd9\u662f\u56e0\u4e3a\u9012\u5f52\u6811\u7684\u8282\u70b9\u6570\u662f\u6307\u6570\u7ea7\u589e\u957f\u7684\u3002\n</code></pre> <ol> <li>$$ P_1:T(1) = 1, T(N) = T(N/3)+1\\P_2:T(1) = 1, T(N) = 3T(N/3) $$</li> </ol> <p>\u6c42 $P_1, P_2$ \u7684\u590d\u6742\u5ea6</p> <p>??? info \"Tips\"     $O(logN)$ for P1, $O(N)$ for P2</p>"},{"location":"ZJU_CS/FDS/homework/#hw2-linked-list","title":"HW2 linked-list","text":"<p>!!! Note \"\u6458\u8981\"     === \"Knowledge\"         \u672c\u8282\u4f60\u9700\u8981\u6e29\u4e60\u5728\u4e4b\u524dC\u8bed\u8a00\u8bfe\u7a0b\u4e2d\u5bf9\u57fa\u7840ADT\u7684\u4f7f\u7528\u3002\u719f\u7ec3\u638c\u63e1\u94fe\u8868\u7684\u64cd\u4f5c\u4ee5\u53ca\u57fa\u672c\u6982\u5ff5\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002</p> <pre><code>=== \"glossary\"\n    |\u82f1\u6587|\u4e2d\u6587|\n    |:--:|:--:|\n    |complexity |\u590d\u6742\u5ea6 |\n</code></pre> <ol> <li>Attention\uff1a Linear List\uff08\u7ebf\u6027\u8868\uff09\u7684\u521d\u59cb\u5b9a\u4e49\u662f\u6570\u7ec4\u3002</li> <li>insertNode \u51fd\u6570\u53ef\u4ee5\u80cc\u4e0b\u6765</li> </ol> <p>??? code \"code\"     ```C     void insertNode(struct Node head, int Element) {         // \u521b\u5efa\u65b0\u8282\u70b9         struct Node newNode = (struct Node*)malloc(sizeof(struct Node));         newNode-&gt;Element = Element;</p> <pre><code>    newNode-&gt;Next = (head)-&gt;Next;\n    (head)-&gt;Next = newNode;\n}\n```\n</code></pre> <ol> <li>\u6e29\u4e60<code>`Mergesort</code>\u4e2dmerge\u7684\u601d\u60f3</li> </ol> <p>??? code \"code\"     ```C</p> <pre><code>#define type int\nvoid Mergesort(type num[], int start, int end) {\n    if (start &gt;= end) return;\n    int mid = start + (end-start)/2;\n    Mergesort(num, start, mid);\n    Mergesort(num, mid+1, end);\n\n    Merge(num, start, mid, end);\n}\n\nvoid Merge(int num[], int start, int mid, int end) {\n    int* temp = (int*)malloc((end-start+1)*sizeof(type));\n    int i = start;\n    int j = mid + 1;\n    int k = 0;\n    while (i &lt;= mid &amp;&amp; j &lt;= end) {\n        if (num[i] &lt;= num[j]){\n            temp[k++] = num[i++];\n        } else {\n            temp[k++] = num[j++];\n        }\n    }\n    while (i &lt;= mid) {\n        temp[k++] = num[i++];\n    }\n    while (j &lt;= end) {\n        temp[k++] = num[j++];\n    }\n}\n\n```\n</code></pre>"},{"location":"ZJU_CS/FDS/homework/#hw3-stack-queue","title":"HW3 Stack &amp; Queue","text":"<p>!!! Note \"\u6458\u8981\"     === \"Knowledge\"         \u672c\u8282\u4f60\u9700\u8981\u6e29\u4e60\u5728\u4e4b\u524dC\u8bed\u8a00\u8bfe\u7a0b\u4e2d\u5bf9\u57fa\u7840ADT\u7684\u4f7f\u7528\u3002\u719f\u7ec3\u638c\u63e1\u961f\u5217\u548c\u6808\u3002\u5305\u62ec\u53ef\u4ee5\u91c7\u7528structue\u5d4c\u5957\u6570\u7ec4\u7684\u65b9\u5f0f\u6765\u96c6\u6210\u5b9e\u73b0</p> <pre><code>    \u7f16\u7a0b\u9898\uff1aOI\u91cc\u5c06\u8fd9\u79cd\u601d\u60f3\u5f52\u7eb3\u4e3a\u201c\u6a21\u62df\u201d\n\n=== \"glossary\"\n    |\u82f1\u6587|\u4e2d\u6587|\n    |:--:|:--:|\n    |front |\u524d |\n    |rare |\u540e |\n</code></pre> <ol> <li>stack pop <code>ooops</code>\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\uff1f   </li> </ol> <p>??? info \"Tips\"     5     \u7b14\u8005\u7b2c\u4e00\u6b21\u505a\u65f6\u7c97\u7cd9\u7684\u8ba4\u4e3a\u662f4\u79cd\u3002\u6700\u540e\u5206\u6790\u8ba4\u4e3a\u8fd8\u662f\u753b\u7c7b\u4f3c\u6811\u5f62\u6d41\u7a0b\u56fe\u6700\u4e3a\u9760\u8c31</p> <ol> <li>stack\u7684\u4e00\u79cd\u96c6\u6210\u65b9\u6cd5</li> </ol> <pre><code>//\u521d\u59cb\u5316\u65f6\u5c06top\u8d4b\u503c\u4e3a-1\ntypedef struct {\n    int stack[MAX_SIZE];\n    int top;\n} Stack;\n\nvoid push(Stack *s, int num) {\n    s-&gt;stack[++s-&gt;top] = num;\n}\n\nint pop(Stack *s) {\n    return s-&gt;stack[s-&gt;top--];\n}\n</code></pre> <ol> <li>Suppose that an array of size 6 is used to store a circular queue, and the values of front and rear are 0 and 4, respectively. Now after 2 dequeues and 2 enqueues, what will the values of front and rear be?</li> </ol> <p>??? info \"Tips\"     [] Unfinished!     2 0</p>"},{"location":"ZJU_CS/FDS/homework/#hw4-binary-tree","title":"HW4 Binary tree","text":"<p>!!! Note \"\u6458\u8981\"     === \"Knowledge\"         \u672c\u8282\u4f60\u9700\u8981\u5b66\u4e60\u4e8c\u53c9\u6811\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u4e0e\u64cd\u4f5c\u3002</p> <pre><code>    \u51fd\u6570\u9898\u5145\u5206\u5c55\u73b0\u4e86\u9012\u5f52\u601d\u60f3\uff0c\u7f16\u7a0b\u9898\u662f\u5bf9\u4e4b\u524d\u77e5\u8bc6\u7684\u7efc\u5408\u4f7f\u7528\n\n=== \"glossary\"\n    |\u4e2d\u6587|\u82f1\u6587|\u6982\u5ff5|\n    |:--:|:--:|:--:|\n    |\u6839\u8282\u70b9|root node|\u4f4d\u4e8e\u4e8c\u53c9\u6811\u9876\u5c42\u7684\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9|\n    |\u53f6\u8282\u70b9|leaf node|\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5176\u4e24\u4e2a\u6307\u9488\u5747\u6307\u5411| \n    |\u8fb9|edge|\u8fde\u63a5\u4e24\u4e2a\u8282\u70b9\u7684\u7ebf\u6bb5\uff0c\u5373\u8282\u70b9\u5f15\u7528\uff08\u6307\u9488\uff09|\n    |\u5c42|level|\u4ece\u9876\u81f3\u5e95\u9012\u589e\uff0c\u6839\u8282\u70b9\u6240\u5728\u5c42\u4e3a 1 |\n    |\u5ea6|degree|\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\u5728\u4e8c\u53c9\u6811\u4e2d\uff0c\u5ea6\u7684\u53d6\u503c\u8303\u56f4\u662f 0\u30011\u30012 |\n    |\u9ad8\u5ea6|height|\u4ece\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf|\n    |\u6df1\u5ea6|depth|\u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf|\n    |\u9ad8\u5ea6|height|\u4ece\u8ddd\u79bb\u8be5\u8282\u70b9\u6700\u8fdc\u7684\u53f6\u8282\u70b9\u5230\u8be5\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf|\n    |\u904d\u5386|traversal| |\n</code></pre> <p>\u4e0b\u9762\u5148\u8ba9\u6211\u4eec\u770b\u770b\u57fa\u672c\u6982\u5ff5\u5427\uff08From hello-algo\uff09</p> <p>??? info \"\u4e8c\u53c9\u6811\u57fa\u672c\u6982\u5ff5\"     === \"\u5b8c\u7f8e\u4e8c\u53c9\u6811 perfect BT\"              === \"\u5e73\u8861\u4e8c\u53c9\u6811 balance BT\"              === \"\u5b8c\u5168\u4e8c\u53c9\u6811 complete BT\"              ===  \"\u5b8c\u6ee1\u4e8c\u53c9\u6811 full BT\"         </p> <ol> <li>There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child.</li> </ol> <p>??? info \"Tips\"     F \u672c\u9898\u662f\u4e2a\u8111\u7ecf\u6025\u8f6c\u5f2f\u9898\u76ee</p> <ol> <li>Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be ____.</li> </ol> <p>??? info \"Tips\"     8</p> <pre><code>\u901a\u89e3\uff1a\n1. \u7b97\u513f\u5b50\uff0c $ 3n_3+2n_2+n_1+1=N $\n2. \u7b97\u6240\u6709\uff0c $ n_3+n_2+n_1+n_0=N $\n\n\u9700\u8981\u6ce8\u610f\u7684\u6982\u5ff5\uff1a\n\u7ed3\u70b9\u7684\u5ea6\uff08Degree\uff09\uff1a\u7ed3\u70b9\u7684\u5b50\u6811\u4e2a\u6570\n\u6811\u7684\u5ea6\uff1a\u6811\u7684\u6240\u6709\u7ed3\u70b9\u4e2d\u6700\u5927\u7684degree\n</code></pre> <ol> <li>If a general tree T is converted into a binary tree BT, then which of the following BT traversals gives the same sequence as that of the post-order traversal of T?</li> </ol> <p>??? info \"Tips\"     \u666e\u901a\u6811\u8f6c\u4e8c\u53c9\u6811</p> <pre><code>\u53ef\u4ee5\u8fd9\u6837\u6d45\u663e\u7684\u7406\u89e3\uff1a\n1. \u5728\u6240\u6709\u5144\u5f1f\u8282\u70b9\u95f4\u6dfb\u52a0\u4e00\u6761\u8fde\u7ebf\n2. \u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u9664\u4e86\u4fdd\u7559\u4e0e\u7b2c\u4e00\u4e2a\u513f\u5b50\u7684\u8fde\u7ebf\u5916\uff0c\u5220\u9664\u522b\u7684\u8fde\u7ebf\u3002\n![](graph/nttbt.png)\n</code></pre> <p>!!! Note \"conclusion\"     T\u7684preorder = BT\u7684preorder     T\u7684postorder = BT\u7684inorder</p> <ol> <li> <p>Threaded Binary Trees(\u4e00\u79cd\u5bf9\u4e8c\u53c9\u6811\u7684\u4f18\u5316\uff0c\u8001\u5e08\u4e0d\u8bb2\u4f46\u8981\u638c\u63e1)  !!! Note      \u7ebf\u7d22\u4e8c\u53c9\u6811</p> <p>\u4e00\u4e2a\u76f4\u89c2\u7684\u5feb\u901f\u89e3\u9898\u7684\u65b9\u6cd5\u4fbf\u662f\u5199\u51fa\u539f\u672c\u6811\u7684\u904d\u5386\u7ed3\u679c\uff0c\u7136\u540e\u7528\u4f7f\u7528\u5de6\u53f3\u6307\u9488\u4e0e\u5b83\u7684\u524d\u540e\u503c\u63a5\u8d77\u6765\u5373\u53ef\uff01</p> </li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw5","title":"HW5","text":"<ol> <li>In a binary search tree which contains several integer keys including 4, 5, and 6, if 4 and 6 are on the same level, then 5 must be their parent.</li> </ol> <p>??? info \"Tips\"     F 5 could be their grandparents</p> <ol> <li>2-3 !!! note \"Question\"     </li> </ol> <ol> <li>\u4ec0\u4e48\u662fdecision tree?</li> <li>A binary search tree if ood nodes, \u5982\u679c\u6211\u4eec\u9009<code>i/2</code>\uff0c\u4e4b\u540e\u6bcf\u6b21\u90fd\u9009<code>i/2</code>\uff1b\u9009<code>i/2+1</code>\u5219\u90fd\u9009<code>i/2+1</code>\u3002</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw6","title":"HW6","text":"<ol> <li>heap\u4e24\u79cd\u63d2\u5165\u65b9\u5f0f\uff0c\u5177\u4f53\u53ef\u89c1hello\u7b97\u6cd5\u4e66</li> <li>\u7f16\u7a0b\u9898\u6709\u5e8f\u6570\u5b57\u4e32\u5efa\u5b8c\u5168\u4e8c\u53c9\u6811\u53ef\u4ee5\u5229\u7528\u4e2d\u5e8f\u5386\u904d\u7684\u601d\u60f3\u6765\u5efa\u6811</li> <li>\u7ea2\u9ed1\u6811\uff1f</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw7","title":"HW7","text":"<ol> <li>In Union/Find algorithm, if Unions are done by size, the depth of any node must be no more than $N/2$ , but not $O(logN)$.</li> </ol> <p>??? info \"Tips\"     F \u5047\u8bbe\u6700\u521d\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u90fd\u4e3a0\uff0c\u90a3\u4e48\u5728\u8fdb\u884cN-1\u6b21\u6309\u5927\u5c0f\u5408\u5e76\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u6700\u591a\u4e3a1\u3002\u56e0\u6b64\uff0c\u4efb\u610f\u8282\u70b9\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7N/2\u3002     \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u662f\u5728\u6309\u5927\u5c0f\u5408\u5e76\u7684\u60c5\u51b5\u4e0b\u6210\u7acb\u7684\u3002\u5982\u679c\u4f7f\u7528\u5176\u4ed6\u5408\u5e76\u7b56\u7565\uff0c\u4f8b\u5982\u6309\u79e9\u5408\u5e76\uff08\u5c06\u6df1\u5ea6\u8f83\u5c0f\u7684\u6811\u5408\u5e76\u5230\u6df1\u5ea6\u8f83\u5927\u7684\u6811\u4e2d\uff09\uff0c\u90a3\u4e48\u8282\u70b9\u7684\u6df1\u5ea6\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u751a\u81f3\u53ef\u80fd\u8fbe\u5230O(logN)\u3002</p> <ol> <li>The array representation of a disjoint set containing numbers 0 to 8 is given by { 1, -4, 1, 1, -3, 4, 4, 8, -2 }. Then to union the two sets which contain 6 and 8 (with union-by-size), the index of the resulting root and the value stored at the root are:</li> </ol> <p>??? info \"Tips\"     4 -5</p> <ol> <li>Let T be a tree created by union-by-size with N nodes, then the height of T can be .</li> </ol> <p>??? info \"Tips\"     at most $log(N) + 1$</p> <ol> <li>A relation R is defined on a set S. If for every element e in S, \"e R e\" is always true, then R is said to be reflexive over S.</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw8-graph","title":"HW8 Graph","text":"<ol> <li>\u56fe\u8bba\u4e2d\u7684degree\u662f\u6307\u4e0e\u8be5\u8282\u70b9\u6240\u8fde\u63a5\u7684\u8fb9\u7684\u4e2a\u6570    By contrast\uff0c \u6811\u4e2d\u7684degree\u662f\u6307\u5b50\u8282\u70b9\u7684\u4e2a\u6570</li> <li>In a connected graph, the number of edges must be equal or greater than the number of vertices minus 1.</li> <li>A graph with 90 vertices and 20 edges must have at least __ connected component(s)</li> </ol> <p>??? info \"Tips\"     70</p>"},{"location":"ZJU_CS/FDS/homework/#hw9-shortest_path","title":"HW9 Shortest_Path","text":"<ol> <li>Let P be the shortest path from S to T. If the weight of every edge in the graph is incremented by 2, P will still be the shortest path from S to T.</li> </ol> <p>!!! Note \"key\"     F</p> <pre><code>Because if shortest road has 6 nodes with 12 while 2nd-shortest road has 4 nodes with 13. After every edge incremented by 2. The last shortest road is 24 while last 2nd-shortest road is 21 which means it is the current shortest road!\n</code></pre> <ol> <li>Use Dijkstra algorithm to find the shortest paths from 1 to every other vertices. In which order that the destinations must be obtained?</li> </ol>"},{"location":"ZJU_CS/FDS/homework/#hw10-mst-maxstream","title":"HW10 MST &amp; Maxstream","text":"<p>[x] Finished \u672c\u6b21\u4f5c\u4e1a\uff0c\u4f60\u9700\u8981\u5bf9\u6700\u5c0f\u751f\u6210\u6811\uff08minimum spanning tree\uff09\u7684\u4e24\u4e2a\u7b97\u6cd5\u6e05\u6670\u7684\u8bb0\u5fc6\uff0c\u5173\u4e8e\u6700\u5927\u6d41\u5e94\u5f53\u5b66\u4f1a\u8ba1\u7b97\u3002 1. The minimum spanning tree of any weighted graph ____</p> <p>??? info \"Tips\"     May not exits.     Exit if it is connected.</p> <ol> <li>An example question about max stream.</li> </ol> <p>??? info \"Question\"     </p>"},{"location":"ZJU_CS/FDS/homework/#hw11-dfs-insertionsort","title":"HW11 DFS &amp; InsertionSort","text":"<p>!!! Note \"\u6458\u8981\"     === \"Knowledge\"         [] finshed?         1. \u672c\u8282\u9700\u8981\u638c\u63e1'biconnected\"(\u91cd\u8fde\u63a5)\u76f8\u5173\u7684\u77e5\u8bc6         2. u is an articulation point if         &gt; (1)  u is the root and has at least 2 children;  or         &gt; (2)  u is not the root, and has at least 1 child such that  $Low(child) \\ge Num(u)$         3. Euler circuit: \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u201c\u4e00\u7b14\u753b\u201d\u95ee\u9898\uff0c\u53ef\u770bEular path         4. \u4ee5\u53ca\u4f60\u9700\u8981\u5bf9dfs\u4ee5\u53ca\u6392\u5e8f\u6709\u719f\u7ec3\u638c\u63e1\uff08\u76f8\u4fe1\u5b66\u5230\u8fd9\u91cc\u5e94\u8be5\u6ca1\u6709\u4e0d\u719f\u7ec3\u7684\u4e86\u5427hhhh</p> <pre><code>=== \"glossary\"\n    |\u82f1\u6587|\u4e2d\u6587|\n    |:--:|:--:|  \n    |articulation point |\u5173\u8282\u70b9 |\n    |biconnected | \u91cd\u8054\u901a|\n</code></pre> <ol> <li>For a graph, if each vertex has an even degree or only two vertexes have odd degree, we can find a cycle that visits every edge exactly once</li> </ol> <p>??? info \"Tips\"     F</p> <pre><code>It has to be a Euler Cycle, thus only if each vertex has even degrees\uff1bEuler Circuit -&gt; exact 2 vertices have odd degrees / all vertices have even degrees\n</code></pre> <ol> <li>Apply DFS to a directed acyclic graph, and output the vertex before the end of each recursion. The output sequence will be:</li> </ol> <p>??? info \"Tips\"     acyclic graph -&gt; \u65e0\u73af\u56fe</p> <ol> <li>Graph G is an undirected completed graph of 20 nodes. Is there an Euler circuit in G? If not, in order to have an Euler circuit, what is the minimum number of edges which should be removed from G?</li> </ol> <p>??? info \"Tips\"     Each Node has exactly 19 degrees</p> <pre><code>- Euler Circuit (Strong Form) requires every node to be even degrees\n\n- Euler Tour (Weak Form) requires 0 or 2 odd degrees\n\nRemove 1 edge, every 2 nodes will lose 1 degrees, so we lose 10 edges\n</code></pre>"},{"location":"ZJU_CS/FDS/homework/#hw12-sort","title":"HW12 sort","text":"<p>!!! note \"\u6458\u8981\"     === \"Knowledge\"         \u672c\u8282\u4f60\u5c06\u5b66\u4e60\u5230\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u601d\u60f3\u4ee5\u53ca\u5b9e\u73b0\u3002\u5e76\u4e14\u9700\u8981\u638c\u63e1\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ee5\u53ca\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p> <pre><code>    \u5176\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u662fshell sort\u548cheap sort\u7684\u5b9e\u73b0\uff0c\u4ee5\u53ca\u5bf9\u4e8equick sort\u7684\u7406\u89e3\u3002\n</code></pre> <ol> <li>Shellsort\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</li> </ol> <p>??? code \"Shellsort\"</p> <pre><code>```C\n// Shellsort\nvoid Shellsort( ElementType A[ ], int N ) \n{ \n    int  i, j, Increment; \n    ElementType  Tmp; \n    for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n    for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n        Tmp = A[ i ]; \n        for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n            A[ j ] = A[ j - Increment ]; \n        else \n            break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n```\n</code></pre> <ol> <li>Heapsort\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</li> </ol> <p>??? code \"Heapsort\"</p> <pre><code>```C\nvoid PercDown( ElementType A[ ], int i, int N ) \n{ \n    int  Child; \n    ElementType  Tmp; \n    for ( Tmp = A[ i ]; LeftChild( i ) &lt; N; i = Child ) { \n        Child = LeftChild( i ); \n        if( Child != N - 1 &amp;&amp; A[ Child + 1 ] &gt; A[ Child ] ) \n            Child++; \n        if( Tmp &lt; A[ Child ] ) \n            A[ i ] = A[ Child ]; \n        else \n            break; \n    } \n    A[ i ] = Tmp; \n}\n\nvoid Heapsort( ElementType A[ ], int N ) \n{ \n    int  i; \n    for ( i = N / 2; i &gt;= 0; i-- ) /* BuildHeap */\n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i-- ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */\n        PercDown( A, 0, i ); \n    } \n}\n```\n</code></pre>"},{"location":"ZJU_CS/FDS/set/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"ZJU_CS/FDS/set/#_2","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u5b9a\u4e49\u5728\u96c6\u5408 S \u4e0a, \u8868\u793a\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u5bf9 $(a,b),a,b\\in S$, $aRb$ \u8981\u4e48\u4e3a\u771f\u8981\u4e48\u4e3a\u5047. \u5982\u679c $aRb$ \u4e3a\u771f\uff0c\u90a3\u4e48\u6211\u4eec\u79f0 $a$ \u548c $b$ \u6709\u5173\u7cfb\u3002</p> <p>\u7b49\u4ef7\u5173\u7cfb\u662f\u6ee1\u8db3\u81ea\u53cd\u6027($\\forall a\\in S, aRa$)\uff0c\u5bf9\u79f0\u6027($aRb\\Leftrightarrow bRa$)\uff0c\u4f20\u9012\u6027($aRb, bRc \\Rightarrow aRc$)\u7684\u5173\u7cfb\uff0c\u4e00\u822c\u7528 ~ \u8868\u793a\u7b49\u4ef7\u5173\u7cfb\u3002</p> <p>S \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20 $x$ $y$ \u5728\u540c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u5f53\u4e14\u4ec5\u5f53 $a$ ~ $b$</p>"},{"location":"ZJU_CS/FDS/set/#_3","title":"\u52a8\u6001\u7b49\u4ef7\u6027\u95ee\u9898","text":"<ul> <li>\u96c6\u5408\u7684\u5143\u7d20: $1,2,3\\ldots,N$</li> <li>\u96c6\u5408: $S_1,S_2,\\ldots$ \u4e14 $S_i\\cap S_j=\\empty$ (\u82e5 $i\\neq j$), \u5373\u96c6\u5408\u4e4b\u95f4\u4e0d\u76f8\u4ea4</li> <li>\u64cd\u4f5c:<ul> <li><code>Find(i)</code> \u8fd4\u56de\u7ed9\u5b9a\u5143\u7d20\u7684\u6240\u5728\u7684\u96c6\u5408\uff08\u7b49\u4ef7\u7c7b\uff09</li> <li><code>Union(i,j)</code> \u6c42\u5e76\u8fd0\u7b97\uff0c\u5c06\u542b\u6709 a \u548c b \u7684\u4e24\u4e2a\u7b49\u4ef7\u7c7b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7b49\u4ef7\u7c7b  </li> </ul> </li> </ul>"},{"location":"ZJU_CS/FDS/set/#_4","title":"\u57fa\u672c\u6570\u636e\u7ed3\u6784","text":"<p>\u6211\u4eec\u7528\u6811\u6765\u8868\u793a\u6bcf\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u7684\u6839\u547d\u540d\u8fd9\u4e2a\u96c6\u5408\uff08\u4ee3\u8868\u5143\uff09\uff0c\u6811\u7684\u96c6\u5408\u6784\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002 \u521d\u59cb\u65f6\uff0c\u6bcf\u68f5\u6811\u90fd\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u3002\u5f53\u9700\u8981\u6267\u884c <code>Union</code> \u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u8282\u70b9\u7684\u6839\u6307\u9488\u6307\u5411\u53e6\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u3002\u5f53\u9700\u8981\u6267\u884c <code>Find</code> \u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u5143\u7d20 X \u4e00\u76f4\u5411\u4e0a\u76f4\u5230\u6839\u4e3a\u6b62\u3002</p> <p></p> <pre><code>void SetUnion ( DisjSet S, SetType Rt1, SetType Rt2 )\n{    \n    S [ Rt2 ] = Rt1 ;     \n}\nSetType Find ( ElementType X, DisjSet S )\n{   \n    for ( ; S[X] &gt; 0; X = S[X] );\n    return  X ;\n}\n</code></pre> <p>  \u5b9e\u9645\u8fd0\u7528\u4e2d\uff0c`Union` \u548c `Find` \u64cd\u4f5c\u901a\u5e38\u6210\u5bf9\u51fa\u73b0:   <pre><code>/* Algorithm using union-find operations */\n{  Initialize  Si = { i }  for  i = 1, ..., 12 ;\n    for  ( k = 1; k &lt;= 9; k++ )  {  /* for each pair  i \uf0ba j */\n        if  ( Find( i ) != Find( j ) )\n            SetUnion( Find( i ), Find( j ) );\n    }\n}\n</code></pre>   ## \u7075\u5de7\u6c42\u5e76\u7b97\u6cd5  ### Union by size\u2014\u2014\u6309\u5927\u5c0f\u6c42\u5e76   \u5373\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u6539\u53d8\u8f83\u5c0f\u7684\u6811 \u8bbe $T$ \u662f\u6309\u5927\u5c0f\u5408\u5e76\u7684 $N$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u90a3\u4e48 $height(T)\\leq\\lfloor \\log_2N\\rfloor +1$ (\u53ef\u7528\u5f52\u7eb3\u6cd5\u8bc1\u660e)    \u56e0\u6b64\u5bf9\u4e8e $N$ \u4e2a `Union` \u64cd\u4f5c $M$ \u4e2a `Find` \u64cd\u4f5c\uff0c\u6240\u7528\u65f6\u95f4\u4e3a $O(N+M\\log_2N)$   <pre><code>Union by size\nfunction Union(x, y) is\n     xRoot := Find(x)\n     yRoot := Find(y)\n\n     if xRoot = yRoot then\n         // x and y are already in the same set\n         return\n\n     // x and y are not in same set, so we merge them\n     if xRoot.size &lt; yRoot.size then\n         xRoot, yRoot := yRoot, xRoot // swap xRoot and yRoot\n\n     // merge yRoot into xRoot\n     yRoot.parent := xRoot\n     xRoot.size := xRoot.size + yRoot.size\n</code></pre>   ### Union By Height(Rank)\u2014\u2014\u6309\u9ad8\u5ea6\u6c42\u5e76   \u5373\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u6211\u4eec\u6539\u53d8\u8f83\u77ee\u7684\u6811   <pre><code>Union by rank\nfunction Union(x, y) is\n     xRoot := Find(x)\n     yRoot := Find(y)\n\n     if xRoot = yRoot then\n         // x\u4e0ey\u5df2\u7ecf\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u76f4\u63a5\u8fd4\u56de\n         return\n\n     // x\u4e0ey\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u90a3\u4e48\u6211\u4eec\u5408\u5e76\u4ed6\u4eec\n     if xRoot.rank &lt; yRoot.rank then\n         xRoot, yRoot := yRoot, xRoot // \u4ea4\u6362x\u7684\u6839\u8282\u70b9\u4e0ey\u7684\u6839\u8282\u70b9\n\n     // \u5408\u5e76y\u6839\u8282\u70b9\u81f3x\u6839\u8282\u70b9\n     yRoot.parent := xRoot\n     if xRoot.rank = yRoot.rank then\n         xRoot.rank := xRoot.rank + 1\n\n</code></pre>   ## \u8def\u5f84\u538b\u7f29   <pre><code>SetType  Find ( ElementType  X, DisjSet  S )\n{   ElementType  root,  trail,  lead;\n    for ( root = X; S[ root ] &gt; 0; root = S[ root ] )\n        ;  /* find the root */\n    for ( trail = X; trail != root; trail = lead ) {\n       lead = S[ trail ] ;   \n       S[ trail ] = root ;   \n    }  /* collapsing */\n    return  root ;\n}\n</code></pre>  \u8def\u5f84\u538b\u7f29\u7684\u6548\u679c\u662f\uff0c\u4ece X \u5230\u6839\u7684\u8def\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f7f\u5b83\u7684\u7236\u8282\u70b9\u53d8\u6210\u6839\u3002   \u8def\u5f84\u538b\u7f29\u4e0e\u6309\u5927\u5c0f\u6c42\u5e76\u5b8c\u5168\u517c\u5bb9\uff0c\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u4e0e\u6309\u9ad8\u5ea6\u6c42\u5e76\uff08\u6709\u65f6\u79f0\u4e3a\u79e9\uff09  ## \u6309\u79e9\u6c42\u5e76\u548c\u8def\u5f84\u538b\u7f29\u7684\u6700\u574f\u60c5\u5f62  \u4ee4 $T(M,N)$ \u6267\u884c $M\\geq N$ \u6b21 `Find` \u548c $N-1$ \u6b21 `Union` \u64cd\u4f5c\u7684\u6700\u574f\u7528\u65f6\u3002\u90a3\u4e48 $k_1M\\alpha(M,N)\\leq T(M,N)\\leq k_2 M\\alpha(M,N)$ \u5bf9\u4e8e\u67d0\u4e2a\u6b63\u5e38\u6570 $k_1,k_2$.   \u5176\u4e2d $\\alpha(M,N)$ \u662f Ackermann \u51fd\u6570.    $$ \\begin{align*} A(i,j)=\\left\\{ \\begin{matrix}2^j\\quad    &amp; i=1\\ and\\ j\\geq 1\\\\ A(i-1,2)\\quad &amp; i\\geq 2\\ and\\ j=1\\\\ A(i-1,A(i,j-1))\\ &amp; i\\geq 2\\ and\\ j\\geq 2 \\end{matrix}\\right. \\end{align*} $$  !!! info     \u5e76\u67e5\u96c6: the disjoint set        \u7b49\u4ef7\u5173\u7cfb: equivalence relations       \u6309\u5927\u5c0f\u6c42\u5e76: union by size       \u8def\u5f84\u538b\u7f29: path compression"},{"location":"ZJU_CS/FDS/sort/","title":"\u6392\u5e8f","text":"<p>\u6211\u4eec\u5047\u8bbe \"&lt;\" \"&gt;\" \u8fd0\u7b97\u7b26\u5b58\u5728\uff0c\u8fd9\u4e24\u79cd\u8fd0\u7b97\u662f\u4ec5\u6709\u7684\u5141\u8bb8\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u8fd9\u79f0\u4e3a\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f. \u6211\u4eec\u5047\u5b9a N \u4e3a\u8981\u6392\u5e8f\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6570\u636e\u4ece\u4f4d\u7f6e 0 \u5f00\u59cb\u3002</p>"},{"location":"ZJU_CS/FDS/sort/#_2","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u63d2\u5165\u6392\u5e8f\u6709 N-1 \u8d9f(pass), \u5bf9\u4e8e $P=1$ \u5230 $P=N-1$ \u8d9f\u6211\u4eec\u4fdd\u8bc1\u4f4d\u7f6e 0 \u5230\u4f4d\u7f6e $P-1$ \u4e0a\u7684\u5143\u7d20\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\uff0c\u800c\u7b2c $P$ \u8d9f\u8981\u505a\u7684\u5c31\u662f\u5c06\u4f4d\u7f6e $P$ \u7684\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u5230\u5b83\u5728\u524d $P+1$ \u4e2a\u5143\u7d20\u4e2d\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002  </p> <pre><code>void InsertionSort ( ElementType A[ ], int N ) \n{ \n    int j, P; \n    ElementType  Tmp; \n\n    for ( P = 1; P &lt; N; P++ ) { \n    Tmp = A[ P ];  /* the next coming card */\n    for ( j = P; j &gt; 0 &amp;&amp; A[ j - 1 ] &gt; Tmp; j-- ) \n          A[ j ] = A[ j - 1 ]; \n          /* shift sorted cards to provide a position \n                       for the new coming card */\n    A[ j ] = Tmp;  /* place the new card at the proper position */\n      }  /* end for-P-loop */\n}\n</code></pre> <ul> <li>\u6700\u4f73\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a $O(N)$  </li> <li>\u6700\u574f\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u9006\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a $O(N^2)$</li> </ul>"},{"location":"ZJU_CS/FDS/sort/#_3","title":"\u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c","text":"<p>\u4e00\u4e2a\u9006\u5e8f\u662f\u6307\u6570\u7ec4\u4e2d $iA[j]$ \u7684\u5e8f\u5076 $(A[i],A[j])$   <p>\u4ea4\u6362\u4e0d\u6309\u539f\u5e8f\u6392\u5217\u7684\u76f8\u90bb\u5143\u7d20\u4f1a\u6070\u597d\u6d88\u9664\u4e00\u4e2a\u9006\u5e8f\uff0c\u56e0\u6b64\u63d2\u5165\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a $O(I+N)$. \u5176\u4e2d $I$ \u4e3a\u539f\u59cb\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u6570\uff0c\u5f53\u9006\u5e8f\u6570\u8f83\u5c11\u65f6\u63d2\u5165\u6392\u5e8f\u4ee5\u7ebf\u6027\u65f6\u95f4\u8fd0\u884c\u3002</p> <p>$N$ \u4e2a\u4e92\u5f02\u6570\u7684\u6570\u7ec4\u7684\u5e73\u5747\u9006\u5e8f\u6570\u4e3a $\\dfrac{N(N-1)}{4}$ N\u5c31\u662f\u6700\u5916\u9762\u5faa\u73af\u7684\u6b21\u6570</p> <p>\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u7684\u4efb\u4f55\u7b97\u6cd5\u5e73\u5747\u9700\u8981 $\\Omega(N^2)$ \u65f6\u95f4</p>"},{"location":"ZJU_CS/FDS/sort/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u4f7f\u7528\u4e00\u4e2a $h_1,h_2,\\ldots,h_t$ \u7684\u589e\u91cf\u5e8f\u5217($h_1=1$). $h_k$-sort \u7684\u4e00\u822c\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e $h_k,h_k+1,\\ldots,N-1$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$, \u5c06\u5176\u5143\u7d20\u653e\u5230 $i,i-h_k,i-2h_k,\\ldots$ \u4e2d\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002\u76f8\u5f53\u4e8e\u5bf9 $h_k$ \u4e2a\u72ec\u7acb\u7684\u5b50\u6570\u7ec4\u5404\u8fdb\u884c\u4e00\u6b21\u63d2\u5165\u6392\u5e8f\u3002$h_k$-sort \u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$ \u6211\u4eec\u90fd\u6709 $a_i\\leq a_{i+h_k}$, \u6b64\u65f6\u6210\u79f0\u4e3a $h_k$-sorted. </p> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28: \u4e00\u4e2a $h_k$-sorted \u7684\u6587\u4ef6\uff08\u6b64\u540e\u5c06\u662f $h_{k-1}$-sorted\uff09\u4fdd\u6301\u4ed6\u7684 $h_k$-sorted \u6027\u8d28\u3002  </p>"},{"location":"ZJU_CS/FDS/sort/#_5","title":"\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217","text":"<p>$h_t=\\lfloor N/2 \\rfloor, h_k=\\lfloor h_{k+1}/2 \\rfloor$(\u53ef\u4ee5\u6709\u66f4\u597d\u7684\u589e\u91cf\u5e8f\u5217)</p> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n      int  i, j, Increment; \n      ElementType  Tmp; \n      for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n    for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n          Tmp = A[ i ]; \n          for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n              A[ j ] = A[ j - Increment ]; \n        else \n              break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n</code></pre> <p>\u63d2\u5165\u6392\u5e8f\u662fincrement\u4e3a1\u7684\u7279\u6b8a\u6392\u5e8f</p> <ul> <li> <p>\u6700\u574f\u60c5\u5f62\u5206\u6790  </p> <p>\u4f7f\u7528\u5e0c\u5c14\u589e\u91cf\u65f6\u7684\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u574f\u60c5\u5f62\u8fd0\u884c\u65f6\u95f4\u4e3a $\\Theta(N^2)$ </p> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217 $h_k= 2^k-1$, \u4e14\u5176\u6700\u574f\u60c5\u5f62\u4e0b\u8fd0\u884c\u65f6\u95f4\u4e3a $O(N^{3/2})$</p> </li> </ul> <p>!!! note \"\u8bb2\u6392\u5e8f\u7ecf\u5e38\u4f1a\u6709\u4e24\u4e2a\u6027\u8d28\"</p> <pre><code>[\u6392\u5e8f\u7b97\u6cd5\u7684\u7a33\u5b9a\u6027(Stability)\u548c\u539f\u5730\u7b97\u6cd5(In-place Algorithm)-CSDN\u535a\u5ba2](https://blog.csdn.net/weixin_59786087/article/details/134481345?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E7%AE%97%E6%B3%95%E7%9A%84stability&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-134481345.142^v96^pc_search_result_base9&amp;spm=1018.2226.3001.4187)\n\n- in-place \u539f\u5730\u7b97\u6cd5\n&gt;\u5047\u5982\u95ee\u9898\u89c4\u6a21\u662fn\uff0c\u5728\u89e3\u51b3\u95ee\u9898\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u5f00\u8f9f\u4e86\u5e38\u6570\u91cf\u7684\u7a7a\u95f4\uff0c\u4e0en\u65e0\u5173\uff0c\u8fd9\u662f\u539f\u5740\u64cd\u4f5c\uff0c\u5c31\u662fIn-place\u3002\n\n\u4f60\u7684\u6392\u5e8f\u662f\u5426\u76f4\u63a5\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e0a\u9762\u505a\u4e86\uff0c\u8fd8\u662f\u9700\u8981\u53e6\u7533\u8bf7\u4e00\u4e2a\u6570\u7ec4\n\u91cc\u9762\u7684\u4e34\u65f6\u53d8\u91cf\u4e0d\u7b97\uff0c\u6bd4\u5982tmp\n\u663e\u7136\u5e0c\u5c14\u6392\u5e8f\u662fin-place\u7684\n\n- stability \n&gt;\u5b9a\u4e49\uff1a \u5982\u679c\u76f8\u7b49\u76842\u4e2a\u5143\u7d20\uff0c\u5728\u6392\u5e8f\u524d\u540e\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4fdd\u6301\u4e0d\u53d8\uff0c\u90a3\u4e48\u8fd9\u662f\u7a33\u5b9a\u7684[\u6392\u5e8f\u7b97\u6cd5](https://so.csdn.net/so/search?q=%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95&amp;spm=1001.2101.3001.7020)\u3002\n\n![image.png](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/202312132205650.png)\n</code></pre> <p>!!! warning     \u5192\u6ce1\u6392\u5e8f\u662f\u4e00\u4e2a\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002     \u524d\u9762\u7684\u6570\u636e\u6bd4\u540e\u9762\u7684\u6570\u636e\u5927\uff0c\u624d\u4f1a\u8fdb\u884c\u4ea4\u6362\uff0c\u4f8b\u5982\uff1a1,2,3,3,4\u30023\u548c3\u4e0d\u4f1a\u4ea4\u6362\u3002</p> <pre><code>\u63d2\u5165\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\uff0c\u540c\u7406 \u53ea\u8981\u5b9a\u4e49\u76f8\u7b49\u7684\u65f6\u5019\u4e0d\u8981\u4ea4\u6362\n\u5e0c\u5c14\u6392\u5e8f\u4e0d\u80fd\u4fdd\u8bc1\uff01\uff01 \u56e0\u4e3a\u4e0d\u77e5\u9053\u4f1a\u5728\u7b2c\u51e0\u4e2ahk-sort\u88ab\u8c03\u8d70\n</code></pre> <p> \u8fd9\u5f20\u56fe\u53ea\u770b\u7a33\u5b9a\u6027\u548c\u539f\u5730\u6027\uff0c\u5176\u4ed6\u6709\u95ee\u9898</p>"},{"location":"ZJU_CS/FDS/sort/#_6","title":"\u5806\u6392\u5e8f","text":"<p>\u5982\u679c\u6211\u4eec\u5148 <code>BuildHeap</code>, \u518d Delete N \u6b21\u6700\u5c0f\u5143\u7d20\uff0c\u8fd9\u6837\u9700\u8981\u591a\u4f7f\u7528\u4e00\u4e2a\u9644\u52a0\u6570\u7ec4\uff0c\u4f7f\u5f97\u5b58\u50a8\u9700\u6c42\u589e\u52a0\u4e00\u500d\u3002  </p> <p>\u6bcf\u6b21 <code>DeleteMin</code> \u540e\uff0c\u5806\u7684\u5927\u5c0f\u7f29\u5c0f\u4e86 1, \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u5806\u4e2d\u6700\u540e\u7684\u5355\u5143\u6765\u5b58\u653e\u521a\u521a\u5220\u53bb\u7684\u5143\u7d20\u3002  </p> <p>\u6574\u4f53\u6d41\u7a0b\uff1a</p> <ul> <li>\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u4e00\u4e2a Max \u5806</li> <li>\u5c06\u5806\u4e2d\u6700\u540e\u5143\u7d20\u4e0e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7f29\u51cf\u5806\u7684\u5927\u5c0f\u5e76\u8fdb\u884c\u4e0b\u6ee4\u3002\u6267\u884c N-1 \u6b21 <code>DeleteMax</code> \u64cd\u4f5c  </li> <li>\u7b97\u6cd5\u7ec8\u6b62\u65f6\uff0c\u6570\u7ec4\u6309\u987a\u5e8f\u5373\u4e3a\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\u7ed3\u679c</li> </ul> <pre><code>void Heapsort( ElementType A[ ], int N ) \n{  int i; \n    for ( i = N / 2; i &gt;= 0; i - - ) /* BuildHeap */ \n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i  - - ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */ \n        PercDown( A, 0, i ); //\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u524d\u5806\u7684\u5927\u5c0f\n    } \n}\n</code></pre> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u5806\u6211\u4eec\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u6570\u7684\uff0c\u56e0\u6b64\u5de6\u513f\u5b50\u5e94\u8be5\u662f <code>2*i+1</code> </p> <p>\u5bf9 N \u4e2a\u4e92\u5f02\u9879\u7684\u968f\u673a\u6392\u5217\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a $2N\\log N-O(N\\log\\log N)$</p>"},{"location":"ZJU_CS/FDS/sort/#_7","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u57fa\u672c\u64cd\u4f5c\uff1a\u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u7684\u65b9\u6cd5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5b8c\u6210\u4e24\u4e2a\u8868\u7684\u5408\u5e76\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b</p> <ul> <li>\u53d6\u4e24\u4e2a\u8f93\u5165\u6570\u7ec4 A \u548c B, \u4e00\u4e2a\u8f93\u51fa\u6570\u7ec4 C, \u4ee5\u53ca\u4e09\u4e2a\u8ba1\u6570\u5668 Aptr, Bptr, Cptr, \u5206\u522b\u5bf9\u5e94\u6570\u7ec4\u7684\u5f00\u7aef\u3002</li> <li>\u6bcf\u6b21 <code>A[Aptr]</code> \u548c <code>B[Bptr]</code> \u4e2d\u7684\u8f83\u5c0f\u8005\u4f1a\u88ab\u62f7\u8d1d\u5230 C \u4e2d\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\uff0c\u76f8\u5173\u7684\u8ba1\u6570\u5668\u5411\u524d\u63a8\u8fdb\u4e00\u6b65\u3002</li> <li>\u5f53\u4e24\u4e2a\u8f93\u5165\u8868\u4e2d\u6709\u4e00\u4e2a\u7528\u5b8c\u65f6\uff0c\u5c06\u53e6\u4e00\u4e2a\u8868\u7684\u5269\u4f59\u90e8\u5206\u62f7\u8d1d\u5230 C \u4e2d\u3002</li> <li>\u6211\u4eec\u6700\u591a\u8fdb\u884c $N-1$ \u6b21\u6bd4\u8f83\uff0c\u56e0\u6b64\u5408\u5e76\u65f6\u95f4\u663e\u7136\u662f\u7ebf\u6027\u7684\u3002</li> </ul> <p>\u56e0\u6b64\u5f52\u5e76\u6392\u5e8f\u7684\u6d41\u7a0b\u5c31\u662f\uff0c\u5982\u679c <code>N=1</code> \u90a3\u4e48\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u9700\u8981\u6392\u5e8f\uff0c\u7b54\u6848\u662f\u663e\u7136\u7684\uff1b\u5426\u5219\u9012\u5f52\u5730\u5c06\u524d\u534a\u90e8\u5206\u6570\u636e\u548c\u540e\u534a\u90e8\u5206\u6570\u636e\u5404\u81ea\u5f52\u5e76\u6392\u5e8f\uff0c\u5f97\u5230\u6392\u5e8f\u540e\u7684\u4e24\u90e8\u5206\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u521a\u521a\u63cf\u8ff0\u7684\u5408\u5e76\u64cd\u4f5c\u5c06\u8fd9\u4e24\u4e2a\u90e8\u5206\u5408\u5e76\u5230\u4e00\u8d77\u3002  </p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u9012\u5f52\u8c03\u7528 Merge \u90fd\u5c40\u90e8\u58f0\u660e\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\uff0c\u90a3\u4e48\u4efb\u610f\u65f6\u523b\u5c31\u4f1a\u6709 $\\log N$ \u4e2a\u4e34\u65f6\u6570\u7ec4\u5904\u4e8e\u6d3b\u52a8\u671f\uff0c\u8fd9\u5bf9\u4e8e\u5c0f\u5185\u5b58\u7684\u673a\u5668\u662f\u81f4\u547d\u7684\u3002\u6ce8\u610f\u5230 Merge \u53ea\u5728\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u7684\u6700\u540e\u4e00\u884c\uff0c\u56e0\u6b64\u4efb\u4f55\u65f6\u523b\u53ea\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u6d3b\u52a8\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528\u8be5\u4e34\u65f6\u6570\u7ec4\u7684\u4efb\u610f\u90e8\u5206\uff0c\u8fd9\u6837\u8282\u7ea6\u4e86\u7a7a\u95f4\u3002</p> <pre><code>void MSort( ElementType A[ ], ElementType TmpArray[ ], \n        int Left, int Right ) \n{   int  Center; \n    if ( Left &lt; Right ) {  /* if there are elements to be sorted */\n    Center = ( Left + Right ) / 2; \n    MSort( A, TmpArray, Left, Center );     /* T( N / 2 ) */\n    MSort( A, TmpArray, Center + 1, Right );    /* T( N / 2 ) */\n    Merge( A, TmpArray, Left, Center + 1, Right );  /* O( N ) */\n    } \n} \n\nvoid Mergesort( ElementType A[ ], int N ) \n{   ElementType  *TmpArray;  /* need O(N) extra space */\n    TmpArray = malloc( N * sizeof( ElementType ) ); \n    if ( TmpArray != NULL ) { \n    MSort( A, TmpArray, 0, N - 1 ); \n    free( TmpArray ); \n    } \n    else  FatalError( \"No space for tmp array!!!\" ); \n}\n/* Lpos = start of left half, Rpos = start of right half */ \nvoid Merge( ElementType A[ ], ElementType TmpArray[ ], int Lpos, int Rpos, int RightEnd ) \n{   \n    int  i, LeftEnd, NumElements, TmpPos; \n    LeftEnd = Rpos - 1; \n    TmpPos = Lpos; \n    NumElements = RightEnd - Lpos + 1; \n    while( Lpos &lt;= LeftEnd &amp;&amp; Rpos &lt;= RightEnd ) /* main loop */ \n        if ( A[ Lpos ] &lt;= A[ Rpos ] ) \n            TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n        else \n            TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    while( Lpos &lt;= LeftEnd ) /* Copy rest of first half */ \n        TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n    while( Rpos &lt;= RightEnd ) /* Copy rest of second half */ \n        TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    for( i = 0; i &lt; NumElements; i++, RightEnd - - ) \n         /* Copy TmpArray back */ \n        A[ RightEnd ] = TmpArray[ RightEnd ]; \n}\n</code></pre> <p>LPos\u5c31\u662fA\u6307\u9488\uff0cRPos\u662fB\u6307\u9488\uff0cTmpPos\u662fC\u6307\u9488</p> <p>   * \u8fd0\u884c\u65f6\u95f4\u5206\u6790    $$ \\begin{align*} T(1) &amp; = 1\\\\ T(N) &amp; = 2T(N/2)+O(N) \\\\     &amp; = 2^kT(N/2^k) + k*O(N)\\\\     &amp; = N *T(1) +\\log N *O(N)\\\\     &amp; = O(N+N\\log N) \\end{align*} $$  \u6ce8\uff1aMergesort \u9700\u8981\u7ebf\u6027\u5916\u90e8\u5185\u5b58\uff0c\u590d\u5236\u6570\u7ec4\u7f13\u6162\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u7528\u4e8e\u5185\u90e8\u6392\u5e8f\uff0c\u4f46\u5bf9\u4e8e\u5916\u90e8\u6392\u5e8f\u662f\u6709\u7528\u7684\u3002  ## \u5feb\u901f\u6392\u5e8f  \u5feb\u901f\u6392\u5e8f\u662f\u5728\u5b9e\u8df5\u4e2d\u5df2\u77e5\u7684\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u662f $O(N\\log N)$   \u5feb\u901f\u6392\u5e8f\u7684\u7b97\u6cd5\u6d41\u7a0b\uff1a\uff08\u5c06\u6570\u7ec4 S \u6392\u5e8f\uff09  * \u5982\u679c S \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u662f 0 \u6216\u8005 1 \u5219\u8fd4\u56de * \u4ece S \u4e2d\u53d6\u4efb\u610f\u5143\u7d20\u4e3a**\u4e3b\u5143** * \u5c06 $S-\\{v\\}$ \u5206\u4e3a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408 $S_1=\\{x\\in S-\\{v\\}|x\\leq v\\}, S_2=\\{x\\in S-\\{v\\}|x\\geq v\\}$   * \u8fd4\u56de $quicksort(S_1), v, quicksort(S_2)$    \u5bf9\u4e8e\u4e0d\u540c\u4e3b\u5143\u7684\u9009\u53d6\uff0c\u5206\u5272\u7684\u63cf\u8ff0\u4e0d\u662f\u552f\u4e00\u7684\u3002  ### \u9009\u53d6\u4e3b\u5143  * \u9519\u8bef\u7684\u65b9\u6cd5 `Pivot=A[0]`   \u8fd9\u6837\u5982\u679c\u8f93\u5165\u662f\u987a\u5e8f\u6216\u8005\u53cd\u5e8f\u7684\uff0c\u90a3\u4e48\u6bcf\u6b21\u5212\u5206\u6240\u6709\u5143\u7d20\u5168\u90e8\u843d\u5165 $S_1$ \u6216\u8005 $S_2$, \u9009\u53d6\u4e3b\u5143\u5e76\u6ca1\u6709\u5e26\u6765\u4efb\u4f55\u5e2e\u52a9\uff0c\u5b8c\u6210\u6392\u5e8f\u9700\u8981 $O(N^2)$ \u7684\u65f6\u95f4\u3002   * \u5b89\u5168\u505a\u6cd5 `Pivot = random select from A[]`   \u4f46\u968f\u673a\u6570\u7684\u4ea7\u751f\u662f\u6602\u8d35\u7684   * \u4e09\u6570\u4e2d\u503c\u5206\u5272\u6cd5 `Pivot = median(left, center, right)`   \u4e00\u7ec4 N \u4e2a\u6570\u7684\u4e2d\u503c\u662f\u7b2c $\\lceil N/2 \\rceil$ \u5927\u7684\u6570\uff0c\u4e3b\u5143\u6700\u597d\u662f\u9009\u62e9\u4e2d\u503c\uff0c\u4f46\u8fd9\u5f88\u96be\u7b97\u51fa\uff0c\u800c\u4e14\u4f1a\u660e\u663e\u51cf\u6162\u6392\u5e8f\u7684\u901f\u5ea6\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5de6\u7aef\u3001\u53f3\u7aef\u548c\u4e2d\u5fc3\u4f4d\u7f6e\u4e0a\u7684\u4e09\u4e2a\u5143\u7d20\u7684\u4e2d\u503c\u4f5c\u4e3a\u4e3b\u5143\u3002   \u8fd9\u6837\u6d88\u9664\u4e86\u9519\u8bef\u65b9\u6cd5\u4e2d\u7684\u6700\u574f\u60c5\u5f62\uff0c\u51cf\u5c11\u4e86\u5feb\u901f\u6392\u5e8f\u5927\u6982 5% \u7684\u8fd0\u884c\u65f6\u95f4\u3002    ### \u5212\u5206\u7b56\u7565  \u9996\u5148\u6211\u4eec\u5c06\u4e3b\u5143\u548c\u6700\u540e\u7684\u5143\u7d20\u4ea4\u6362\uff0c\u4f7f\u5f97\u4e3b\u5143\u79bb\u5f00\u5c06\u8981\u5206\u5272\u7684\u6570\u636e\u6bb5\uff0c\u968f\u540e i \u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0cj \u4ece\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u3002\uff08\u5047\u8bbe\u6240\u6709\u5143\u7d20\u4e92\u5f02\uff09    * \u5f53 i \u5728 j \u7684\u5de6\u8fb9\u65f6\uff0c\u6211\u4eec\u5c06 i \u53f3\u79fb\uff0c\u79fb\u8fc7\u90a3\u4e9b\u5c0f\u4e8e\u4e3b\u5143\u7684\u5143\u7d20\uff0c\u5e76\u5c06 j \u5de6\u79fb\uff0c\u79fb\u8fc7\u90a3\u4e9b\u5927\u4e8e\u4e3b\u5143\u7684\u5143\u7d20\u3002 * \u5f53 i \u548c j \u505c\u6b62\u65f6\uff0ci \u6307\u5411\u4e00\u4e2a\u5927\u5143\u7d20\u800c j \u6307\u5411\u4e00\u4e2a\u5c0f\u5143\u7d20\uff0c\u5982\u679c i \u5728 j \u7684\u5de6\u8fb9\u90a3\u4e48\u5c06\u8fd9\u4e24\u4e2a\u5143\u7d20\u4e92\u6362\u3002 * \u76f4\u5230 i \u548c j \u5f7c\u6b64\u4ea4\u9519\u65f6\uff0c\u505c\u6b62\u4ea4\u6362 * \u5c06 i \u548c\u4e3b\u5143\u4ea4\u6362  \u5bf9\u4e8e\u90a3\u4e9b\u7b49\u4e8e\u4e3b\u5143\u7684\u5173\u952e\u5b57\uff0c\u6211\u4eec\u91c7\u7528\u505c\u6b62 i j \u5e76\u4ea4\u6362\u7684\u7b56\u7565\u3002\u56e0\u4e3a\u82e5 i j \u4e0d\u505c\u6b62\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u6240\u6709\u5173\u952e\u5b57\u90fd\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u6709\u7a0b\u5e8f\u9632\u6b62 i j \u8d85\u51fa\u6570\u7ec4\u7684\u754c\u9650\u3002\u6700\u540e\u6211\u4eec\u4f1a\u628a\u4e3b\u5143\u4ea4\u6362\u5230 i \u7684\u6700\u540e\u4f4d\u7f6e\u4e0a\uff0c\u4e5f\u5c31\u662f\u5012\u6570\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u53c8\u9677\u5165\u4e86\u6700\u574f\u60c5\u51b5\u3002  ### \u5c0f\u6570\u7ec4  \u5bf9\u4e8e\u5f88\u5c0f\u7684\u6570\u7ec4($N\\leq 20$)\u5feb\u901f\u6392\u5e8f\u4e0d\u5982\u63d2\u5165\u6392\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u622a\u6b62\u8303\u56f4 Cutoff(***e.g.*** 10). \u5f53 N \u5c0f\u4e8e\u9608\u503c\u7684\u65f6\u5019\u91c7\u7528\u63d2\u5165\u6392\u5e8f.    ### \u5b9e\u73b0   <pre><code>void  Quicksort( ElementType A[ ], int N ) \n{ \n    Qsort( A, 0, N - 1 ); \n    /* A:   the array   */\n    /* 0:   Left index  */\n    /* N \u2013 1: Right index   */\n}\n/* Return median of Left, Center, and Right */ \n/* Order these and hide the pivot */ \n\nElementType Median3( ElementType A[ ], int Left, int Right ) \n{ \n    int  Center = ( Left + Right ) / 2; \n    if ( A[ Left ] &gt; A[ Center ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Center ] ); \n    if ( A[ Left ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Right ] ); \n    if ( A[ Center ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Center ], &amp;A[ Right ] ); \n    /* Invariant: A[ Left ] &lt;= A[ Center ] &lt;= A[ Right ] */ \n    Swap( &amp;A[ Center ], &amp;A[ Right - 1 ] ); /* Hide pivot */ \n    /* only need to sort A[ Left + 1 ] \u2026 A[ Right \u2013 2 ] */\n    return  A[ Right - 1 ];  /* Return pivot */ \n}\nvoid  Qsort( ElementType A[ ], int Left, int Right ) \n{   int  i,  j; \n    ElementType  Pivot; \n    if ( Left + Cutoff &lt;= Right ) {  /* if the sequence is not too short */\n        Pivot = Median3( A, Left, Right );  /* select pivot */\n        i = Left;     j = Right \u2013 1;  /* why not set Left+1 and Right-2? */\n        for( ; ; ) { \n     while ( A[ + +i ] &lt; Pivot ) { }  /* scan from left */\n     while ( A[ \u2013 \u2013j ] &gt; Pivot ) { }  /* scan from right */\n     if ( i &lt; j ) \n        Swap( &amp;A[ i ], &amp;A[ j ] );  /* adjust partition */\n     else     break;  /* partition done */\n        } \n        Swap( &amp;A[ i ], &amp;A[ Right - 1 ] ); /* restore pivot */ \n        Qsort( A, Left, i - 1 );      /* recursively sort left part */\n        Qsort( A, i + 1, Right );   /* recursively sort right part */\n    }  /* end if - the sequence is long */\n    else /* do an insertion sort on the short subarray */ \n        InsertionSort( A + Left, Right - Left + 1 );\n}\n</code></pre>   * \u5728\u6700\u5f00\u59cb\u9009\u53d6\u4e3b\u5143\u65f6\uff0c\u6211\u4eec\u5c06 `A[left],A[mid],A[Right]` \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c06\u8f83\u5c0f\u503c\u653e\u5728\u4e86\u6700\u5de6\u8fb9\uff0c\u8f83\u5927\u503c\u653e\u5728\u4e86\u6700\u53f3\u8fb9\uff0c\u8fd9\u7b26\u5408\u5206\u5272\u7684\u8981\u6c42\u3002\u6b64\u5916\u7531\u4e8e `A[left]` \u6bd4\u4e3b\u5143\u5c0f\uff0c\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3 j \u8d8a\u754c\u3002  ### \u590d\u6742\u5ea6\u5206\u6790  $T(N)=T(i)+T(N-i-1)+cN$ \u5176\u4e2d $i=|S_1|$    * \u6700\u574f\u60c5\u5f62\uff1a\u4e3b\u5143\u59cb\u7ec8\u662f\u6700\u5c0f\u5143\u7d20\uff0c\u6b64\u65f6 $i=0$ \u5219\u9012\u63a8\u5173\u7cfb\u4e3a $T(N)=T(N-1)+cN,N&gt;1$ \u90a3\u4e48 $T(N)=T(1)+d\\sum\\limits_{i=2}^N i=O(N^2)$   * \u6700\u597d\u60c5\u5f62\uff1a\u4e3b\u5143\u6b63\u597d\u4f4d\u4e8e\u4e2d\u95f4 $T(N)=2T(N/2)+cN\\Rightarrow T(N)=O(N\\log N)$    * \u5e73\u5747\u60c5\u5f62\uff1a$T(N)=\\dfrac{2}{N}\\sum\\limits_{j=0}^{N-1}T(j)+cN\\Rightarrow T(N)=O(N\\log N)$  ## \u5927\u578b\u7ed3\u6784\u7684\u6392\u5e8f  \u4ea4\u6362\u4e24\u4e2a\u5927\u578b\u7684\u7ed3\u6784\u53ef\u80fd\u662f\u975e\u5e38\u6602\u8d35\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8ba9\u8f93\u5165\u6570\u7ec4\u5305\u542b\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u901a\u8fc7\u6bd4\u8f83\u6307\u9488\u6307\u5411\u7684\u5173\u952e\u5b57\uff0c\u5fc5\u8981\u65f6\u4ea4\u6362\u6307\u9488\u6765\u8fdb\u884c\u6392\u5e8f\u3002  ## \u6392\u5e8f\u7684\u4e00\u822c\u4e0b\u754c  &gt; \u53ea\u4f7f\u7528\u6bd4\u8f83\u7684\u4efb\u610f\u6392\u5e8f\u7b97\u6cd5\u6700\u574f\u60c5\u5f62\u4e0b\u90fd\u9700\u8981 $\\Omega(N\\log  N)$    \u4f7f\u7528\u51b3\u7b56\u6811\u8bc1\u660e\uff1a\u5171 $N!$ \u79cd\u6392\u5e8f\u53ef\u80fd\uff0c\u56e0\u6b64\u51b3\u7b56\u4e8c\u53c9\u6811\u6709 $N!$ \u7247\u53f6\u5b50\uff0c\u5219\u6811\u7684\u6df1\u5ea6\u81f3\u5c11\u4e3a $\\log(N!)=\\Omega(N\\log N)$    --- \u63a5\u4e0b\u6765\u7684\u90fd\u4e0d\u662f\u57fa\u4e8e\u6bd4\u8f83\u7684   ## \u6876\u6392\u5e8f  \u82e5\u8f93\u5165\u6570\u636e $A_1,A_2,\\ldots,A_N$ \u90fd\u5c0f\u4e8e $M$, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a $M$ \u7684 `Count` \u6570\u7ec4\uff0c\u521d\u59cb\u5316\u4e3a\u5168 0. \u4e8e\u662f `Count` \u6709 $M$ \u4e2a\u6876\uff0c\u8bfb\u5165\u5230 $A_i$ \u65f6 `Count[Ai]` \u81ea\u589e\u4e00\u3002\u6240\u6709\u6570\u636e\u8bfb\u5b8c\u540e\u626b\u63cf\u6570\u7ec4 `Count` \u6253\u5370\u6392\u5e8f\u540e\u7684\u8868\u3002     <pre><code>{\n    initialize count[ ];\n    while (read in a student\u2019s record)\n        insert to list count[stdnt.grade];\n    for (i=0; i&lt;M; i++) {\n        if (count[i])\n            output list count[i];\n    }\n}\n</code></pre>   $O(M+N)$ M\u8fdc\u5927\u4e8eN\u7684\u65f6\u5019\uff0c\u4e0d\u662f\u5173\u4e8eN\u7684\u7ebf\u6027\u65f6\u95f4\uff0c\u7528\u57fa\u51c6\u6392\u5e8f   ## Radix Sort \u57fa\u6570\u6392\u5e8f ### LSD \u4e2a\u5341\u767e\u4f4d\u987a\u5e8f\uff0c\u6700\u4e0d\u91cd\u8981\u7684\u4f4d\u6570\u4f18\u5148 ![image.png](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/202312192040327.png)  pass2\u8981\u6309\u7167pass1\u6392\u597d\u7684\u987a\u5e8f\u8bfb\u8fdb\u6765  ### MSD \u597d\u5904\uff1a\u53ef\u4ee5\u5e76\u884c\u64cd\u4f5c\uff0c\u591a\u7ebf\u7a0b\uff0c\u800cLSD\u4e0d\u53ef\u4ee5  ![image.png](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/202312192044909.png)   ![image.png](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/202312192045558.png)  ![image.png](https://imagebed-1321832893.cos.ap-shanghai.myqcloud.com/ImageBed/202312192045566.png)    CD\u662f\u4ee5\u4e0b\u6807\u4e3a\u57fa\u7840\u7684"},{"location":"ZJU_CS/FDS/tree/","title":"\u6811","text":""},{"location":"ZJU_CS/FDS/tree/#_2","title":"\u9884\u5907\u77e5\u8bc6","text":""},{"location":"ZJU_CS/FDS/tree/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u6811\u662f\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u3002\u5f53\u96c6\u5408\u975e\u7a7a\u65f6\uff0c\u6811\u5305\u62ec</li> <li>\u6839</li> <li>0 \u6216\u591a\u4e2a\u975e\u7a7a\u7684\u5b50\u6811 $T_1,T_2,\\ldots,T_k$\uff0c\u8fd9\u4e9b\u5b50\u6811\u4e2d\u6bcf\u4e00\u68f5\u5b50\u6811\u90fd\u88ab\u6765\u81ea\u6839 r \u7684\u4e00\u6761\u6709\u5411\u7684\u8fb9\u6240\u8fde\u63a5\u3002</li> <li>\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6839\u53eb\u505a\u6839 r \u7684\u513f\u5b50\uff0c\u800c r \u662f\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6839\u7684\u7236\u4eb2\u3002</li> <li>\u4e00\u68f5\u6811\u662f $N$ \u4e2a\u8282\u70b9\u548c $N-1$ \u6761\u8fb9\u7684\u96c6\u5408\u3002</li> <li>\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\u79f0\u4e3a\u6811\u53f6</li> <li>\u5177\u6709\u76f8\u540c\u7236\u4eb2\u7684\u8282\u70b9\u79f0\u4e3a\u5144\u5f1f</li> <li>\u4e00\u4e2a\u70b9\u7684\u5ea6\uff0c\u662f\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u6570\u91cf</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\uff0c\u662f\u8fd9\u68f5\u6811\u91cc\u70b9\u7684\u5ea6\u6570\u7684\u6700\u5927\u503c\uff0c\u5373 $\\max\\limits_{node\\in tree}{deg(node)}$</li> <li>\u4ece\u8282\u70b9 $n_1$ \u5230 $n_k$ \u7684\u8def\u5f84\u5b9a\u4e49\u4e3a $n_1,n_2,\\ldots,n_k$ \u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f7f\u5f97\u5bf9\u4e8e $1\\leq i &lt; k$ \u8282\u70b9 $n_i$ \u662f $n_{i+1}$ \u7684\u7236\u4eb2\u3002\u8fd9\u6761\u8def\u5f84\u662f\u552f\u4e00\u7684\u3002</li> <li>\u8def\u5f84\u7684\u957f\u5ea6\u5c31\u662f\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u6570\u91cf</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 $n_i$, $n_i$ \u7684\u6df1\u5ea6\u4e3a\u4ece\u6839\u5230 $n_i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6\u3002</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 $n_i$, $n_i$ \u7684\u9ad8\u5ea6\u4e3a\u4ece $n_i$ \u5230\u4e00\u7247\u6811\u53f6\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\u3002</li> <li>\u4e00\u68f5\u6811\u7684\u9ad8\u5ea6/\u6df1\u5ea6\uff1a\u6839\u7684\u9ad8\u5ea6</li> <li>\u5982\u679c\u5b58\u5728\u4ece $n_1$ \u5230 $n_2$ \u7684\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48 $n_1$ \u662f $n_2$ \u7684\u4e00\u4f4d\u7956\u5148\uff0c\u800c $n_2$ \u662f $n_1$ \u7684\u4e00\u4e2a\u540e\u88d4\uff0c\u5982\u679c $n_1\\neq n_2$ \u79f0\u4e3a\u771f\u7956\u5148\u548c\u771f\u540e\u88d4\u3002</li> </ul>"},{"location":"ZJU_CS/FDS/tree/#_4","title":"\u5b9e\u73b0","text":"<p>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 FirstChild-NextSibling Representation, \u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u653e\u5728\u6811\u8282\u70b9\u7684\u94fe\u8868\u4e2d</p> <pre><code>typedef struct TreeNode *PrtToNode;\n\nstruct Tree Node {\n    ElementType Element;\n    PtrToNode FirstChild;\n    PtrToNode NextSibling;\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_5","title":"\u4e8c\u53c9\u6811","text":"<p>\u4e8c\u53c9\u6811\u662f\u4e00\u68f5\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4e0d\u80fd\u591a\u4e8e\u4e24\u4e2a\u3002 Rotate the FirstChild-NextSibling tree clockwise by $45\\degree$</p>"},{"location":"ZJU_CS/FDS/tree/#_6","title":"\u8868\u8fbe\u5f0f\u6811","text":"<p>\u8868\u8fbe\u5f0f\u6811\u7684\u6811\u53f6\u662f\u64cd\u4f5c\u6570\uff0c\u6bd4\u5982\u5e38\u6570\u6216\u53d8\u91cf\uff0c\u800c\u5176\u4ed6\u7684\u8282\u70b9\u4e3a\u64cd\u4f5c\u7b26\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u64cd\u4f5c\u7b26\u4e00\u822c\u662f\u4e8c\u5143\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u5982\u679c\u6709\u5355\u76ee\u64cd\u4f5c\u7b26\uff0c\u90a3\u4e48\u8282\u70b9\u5c31\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u3002</p> <p>!!! example $A+B*C/D$ \u8868\u793a\u5982\u4e0b\uff1a</p>"},{"location":"ZJU_CS/FDS/tree/#_7","title":"\u6811\u7684\u904d\u5386","text":"<p>\u6811\u7684\u904d\u5386\u5373\u6bcf\u4e2a\u8282\u70b9\u8bbf\u95ee\u4e00\u6b21</p>"},{"location":"ZJU_CS/FDS/tree/#_8","title":"\u524d\u5e8f\u904d\u5386","text":"<pre><code>void  preorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        visit ( tree );\n        for (each child C of tree )\n            preorder ( C );\n    }\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_9","title":"\u540e\u5e8f\u904d\u5386","text":"<pre><code>void  postorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        for (each child C of tree )\n            postorder ( C );\n        visit ( tree );\n    }\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_10","title":"\u5c42\u5e8f\u904d\u5386","text":"<pre><code>void  levelorder ( tree_ptr  tree )\n{   enqueue ( tree );\n    while (queue is not empty) {\n        visit ( T = dequeue ( ) );\n        for (each child C of T )\n            enqueue ( C );\n    }\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_11","title":"\u4e2d\u5e8f\u904d\u5386","text":"<pre><code>void  inorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        inorder ( tree-&gt;Left );\n        visit ( tree-&gt;Element );\n        inorder ( tree-&gt;Right );\n   }\n}\n</code></pre> <p>!!! Example      </p> <pre><code>* \u4e2d\u5e8f\u904d\u5386: $A+B*C/D$\n* \u524d\u5e8f\u904d\u5386: $+A/*BCD$\n* \u540e\u5e8f\u904d\u5386: $ABC*D/+$\n</code></pre> <p>!!! warning     T\u4e0e\u5176\u7684BT     T\u7684\u5148\u5e8f\u904d\u5386\u4e0e\u5176BT\u7684\u5148\u5e8f\u904d\u5386\u76f8\u540c     T\u7684\u540e\u5e8f\u904d\u5386\u4e0e\u5176BT\u7684\u4e2d\u5e8f\u904d\u5386\u76f8\u540c</p>"},{"location":"ZJU_CS/FDS/tree/#_12","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<p>\u89c4\u5219: \u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811 - \u5982\u679c <code>Tree-&gt;Left</code> \u4e3a\u7a7a\uff0c\u7528\u4e00\u4e2a\u6307\u5411\u5e8f\u904d\u5386\u4e2d\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u7684\u6307\u9488\u4ee3\u66ff\u5b83 - \u5982\u679c <code>Tree-&gt;Right</code> \u4e3a\u7a7a\uff0c\u7528\u4e00\u4e2a\u6307\u5411*\u5e8f\u904d\u5386\u4e2d\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u7684\u6307\u9488\u4ee3\u66ff\u5b83 - \u8fd9\u91cc\u6ca1\u6709\u7a7a\u95f2\u7684\u6307\u9488\uff0c\u56e0\u6b64\u4e00\u68f5\u7ebf\u7d22\u4e8c\u53c9\u6811\u9700\u8981\u6709\u4e00\u4e2a\u5de6\u513f\u5b50\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u5934\u8282\u70b9\u3002</p> <pre><code>typedef  struct  ThreadedTreeNode  *PtrTo  ThreadedNode;\ntypedef  struct  PtrToThreadedNode  ThreadedTree;\ntypedef  struct  ThreadedTreeNode {\n       int LeftThread;   /* if it is TRUE, then Left */\n       ThreadedTree Left;      /* is a thread, not a child ptr.   */\n       ElementType  Element;\n       int RightThread; /* if it is TRUE, then Right */\n       ThreadedTree Right;    /* is a thread, not a child ptr.   */\n}\n</code></pre> <p>!!! Example</p> <p>\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u7ebf\u7d22\u4e8c\u53c9\u6811\u5982\u4e0b:</p> <p>!!! Note \u5728\u6811\u91cc\u9762\uff0c\u513f\u5b50\u7684\u6b21\u5e8f\u6ca1\u6709\u5f71\u54cd\u3002\u4f46\u5bf9\u4e8e\u4e8c\u53c9\u6811\u800c\u8a00\uff0c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u662f\u4e0d\u540c\u7684\u3002</p> <p>!!! Info \"\u5b8c\u5168\u4e8c\u53c9\u6811\" \u6240\u6709\u53f6\u8282\u70b9\u90fd\u4f4d\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u5c42\u4e0a</p>"},{"location":"ZJU_CS/FDS/tree/#_13","title":"\u4e8c\u53c9\u6811\u7684\u6027\u8d28","text":"<ul> <li>\u7b2c i \u5c42\u8282\u70b9\u4e2a\u6570\u6700\u591a\u4e3a $2^{i-1},i\\geq 1$. \u6df1\u5ea6\u4e3a k \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 $2^k-1$ \u4e2a\u8282\u70b9\u3002</li> <li>\u5bf9\u4e8e\u4efb\u4f55\u975e\u7a7a\u4e8c\u53c9\u6811\u90fd\u6709 $n_0=n_2+1$. \u5176\u4e2d $n_0$ \u662f\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff0c$n_2$ \u662f\u5ea6\u6570\u4e3a 2 \u7684\u8282\u70b9\u4e2a\u6570\u3002</li> </ul> <p>!!! Note \"Proof\" \u4ee4$n_1$ \u8868\u793a\u5ea6\u6570\u4e3a 1 \u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u6709 $n=n_0+n_1+n_2$.  \u4ee4$B$ \u8868\u793a\u6240\u6709\u7684\u8fb9\uff0c\u90a3\u4e48 $B=n-1$\uff0c\u540c\u65f6\u53c8\u6709 $B=n_1+2n_2$. \u8054\u7acb\u53ef\u5f97\u5230 $n_0=n_2+1$.</p>"},{"location":"ZJU_CS/FDS/tree/#adt","title":"\u67e5\u627e\u6811 ADT\u2014\u2014\u4e8c\u53c9\u67e5\u627e\u6811","text":""},{"location":"ZJU_CS/FDS/tree/#_14","title":"\u5b9a\u4e49","text":"<p>\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\u662f\u4e8c\u53c9\u7684\uff0c\u5982\u679c\u975e\u7a7a\uff0c\u90a3\u4e48\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28:</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u662f\u5404\u4e0d\u76f8\u540c\u7684\u6574\u6570</li> <li>\u5982\u679c\u5de6\u5b50\u6811\u975e\u7a7a\uff0c\u90a3\u4e48\u5de6\u5b50\u6811\u6240\u6709\u5173\u952e\u5b57\u7684\u503c\u5fc5\u987b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u5173\u952e\u5b57</li> <li>\u5982\u679c\u53f3\u5b50\u6811\u975e\u7a7a\uff0c\u90a3\u4e48\u53f3\u5b50\u6811\u6240\u6709\u5173\u952e\u5b57\u7684\u503c\u5fc5\u987b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u5173\u952e\u5b57</li> <li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4ecd\u662f\u4e8c\u53c9\u67e5\u627e\u6811</li> </ul>"},{"location":"ZJU_CS/FDS/tree/#adt_1","title":"ADT \u6a21\u578b","text":"<ul> <li>\u5bf9\u8c61: \u4e00\u4e2a\u6709\u9650\u7684\u6709\u5e8f\u96c6</li> <li>\u64cd\u4f5c:</li> <li>\u521d\u59cb\u5316</li> <li>\u67e5\u627e\u5173\u952e\u5b57</li> <li>\u67e5\u627e\u6700\u5927/\u6700\u5c0f\u7684\u5173\u952e\u5b57</li> <li>\u63d2\u5165\u5173\u952e\u5b57</li> <li>\u5220\u9664\u5173\u952e\u5b57</li> <li>\u68c0\u7d22\u4f4d\u7f6e</li> </ul>"},{"location":"ZJU_CS/FDS/tree/#_15","title":"\u5b9e\u73b0","text":""},{"location":"ZJU_CS/FDS/tree/#_16","title":"\u67e5\u627e\u5173\u952e\u5b57","text":"<p>\u8fd4\u56de\u6811 T \u4e2d\u5177\u6709\u5173\u952e\u5b57 X \u8282\u70b9\u7684\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6811 T \u7684\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u67e5\u627e\u54ea\u4e2a\u5b50\u6811\u53d6\u51b3\u4e8e X \u4e0e\u5f53\u524d\u6839\u8282\u70b9\u5173\u952e\u5b57\u7684\u5927\u5c0f\u5173\u7cfb\u3002 $T(N)=S(N)=O(d)$, \u8fd9\u91cc d \u662f\u6811\u7684\u6df1\u5ea6</p> <pre><code>Position  Find( ElementType X,  SearchTree T )\n{\n      if ( T == NULL )\n          return  NULL;  /* not found in an empty tree */\n      if ( X &lt; T-&gt;Element )  /* if smaller than root */\n          return  Find( X, T-&gt;Left );  /* search left subtree */\n      else\n          if ( X &gt; T-&gt;Element )  /* if larger than root */\n      return  Find( X, T-&gt;Right );  /* search right subtree */\n          else   /* if X == root */\n      return  T;  /* found */\n}\n</code></pre> <p></p> <p>\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u4e2a\u5c3e\u9012\u5f52\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u4e3a\u8fed\u4ee3\u7248\u672c</p> <pre><code>Position  Iter_Find( ElementType X,  SearchTree T )\n{\n    /* iterative version of Find */\n    while (T) {\n        if (X == T-&gt;Element)\n    return T;  /* found */\n        if (X &lt; T-&gt;Element)\n            T = T-&gt;Left ; /*move down along left path */\n        else\n            T = T-&gt; Right ; /* move down along right path */\n    }  /* end while-loop */\n    return  NULL;   /* not found */\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_17","title":"\u67e5\u627e\u6700\u5c0f/\u6700\u5927\u5173\u952e\u5b57","text":"<p>\u67e5\u627e\u6700\u5c0f\u5143\u7d20\uff0c\u53ea\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u53ea\u8981\u6709\u5de6\u513f\u5b50\u5c31\u5411\u5de6\u8fdb\u884c\uff0c\u7ec8\u6b62\u70b9\u5c31\u662f\u6700\u5c0f\u7684\u5143\u7d20\u4e86\u3002\u67e5\u627e\u6700\u5927\u5143\u7d20\u7c7b\u4f3c\u3002 $T(N)=O(d)$</p> <pre><code>Position  FindMin( SearchTree T )\n{\n      if ( T == NULL )\n          return  NULL; /* not found in an empty tree */\n      else\n          if ( T-&gt;Left == NULL )   return  T;  /* found left most */\n          else   return  FindMin( T-&gt;Left );   /* keep moving to left */\n}\nPosition  FindMax( SearchTree T )\n{\n    if ( T != NULL )\n        while ( T-&gt;Right != NULL )\n        T = T-&gt;Right;   /* keep moving to find right most */\n    return T;  /* return NULL or the right most */\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_18","title":"\u63d2\u5165","text":"<p>\u63d2\u5165\u53ef\u4ee5\u7528\u67e5\u627e\u7684\u601d\u8def\uff0c\u5982\u679c\u627e\u5230 X \u90a3\u4e48\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff08\u6216\u8005\u505a\u4e00\u4e9b\u66f4\u65b0\uff09\uff0c\u5426\u5219\u5c31\u5c06 X \u63d2\u5165\u5230\u904d\u5386\u8def\u5f84\u4e0a\u7684\u6700\u540e\u4e00\u70b9\u4e0a\u3002 $T(N)=O(d)$</p> <pre><code>SearchTree  Insert( ElementType X, SearchTree T )\n{\n    if ( T == NULL ) { /* Create and return a one-node tree */\n    T = malloc( sizeof( struct TreeNode ) );\n    if ( T == NULL )\n       FatalError( \"Out of space!!!\" );\n    else {\n       T-&gt;Element = X;\n       T-&gt;Left = T-&gt;Right = NULL; }\n      }  /* End creating a one-node tree */\n     else  /* If there is a tree */\n    if ( X &lt; T-&gt;Element )\n       T-&gt;Left = Insert( X, T-&gt;Left );\n    else\n       if ( X &gt; T-&gt;Element )\n          T-&gt;Right = Insert( X, T-&gt;Right );\n       /* Else X is in the tree already; we'll do nothing */\n    return  T;   /* Do not forget this line!! */\n}\n</code></pre>"},{"location":"ZJU_CS/FDS/tree/#_19","title":"\u5220\u9664","text":"<p>\u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u6811\u53f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5220\u9664\uff0c\u5982\u679c\u8282\u70b9\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u53ef\u4ee5\u5728\u7236\u8282\u70b9\u8c03\u6574\u6307\u9488\u540e\u7ed5\u8fc7\u8be5\u8282\u70b9\u5e76\u5220\u9664\u3002 \u4f46\u5982\u679c\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u4e00\u822c\u7684\u5220\u9664\u7b56\u7565\u662f\u7528\u5176\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u5143\uff08\u6216\u8005\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u5143\uff09\u4ee3\u66ff\u8be5\u8282\u70b9\u7684\u6570\u636e\u5e76\u9012\u5f52\u5730\u5220\u9664\u90a3\u4e2a\u8282\u70b9\u3002 $T(N)=O(h)$, \u5176\u4e2d h \u662f\u6811\u7684\u9ad8\u5ea6\u3002</p> <pre><code>SearchTree  Delete( ElementType X, SearchTree T )\n{\n    Position  TmpCell;\n    if ( T == NULL )   Error( \"Element not found\" );\n    else if (X &lt; T-&gt;Element)  /* Go left */\n        T-&gt;Left = Delete( X, T-&gt;Left );\n    else if ( X &gt; T-&gt;Element )  /* Go right */\n        T-&gt;Right = Delete( X, T-&gt;Right );\n    else  /* Found element to be deleted */\n        if ( T-&gt;Left &amp;&amp; T-&gt;Right ) {  /* Two children */\n            /* Replace with smallest in right subtree */\n            TmpCell = FindMin( T-&gt;Right );\n            T-&gt;Element = TmpCell-&gt;Element;\n            T-&gt;Right = Delete( T-&gt;Element, T-&gt;Right );  } /* End if \u628a\u521a\u521a\u4ea4\u6362\u7684\u90a3\u4e2a\u4e1c\u897f\u7ed9\u5220\u4e86*/\n        else {  /* One or zero child */\n            TmpCell = T;\n            if ( T-&gt;Left == NULL ) /* Also handles 0 child */\n                T = T-&gt;Right;\n            else  if ( T-&gt;Right == NULL )  \n                T = T-&gt;Left;\n            free( TmpCell );  }  /* End else 1 or 0 child */\n    return  T;\n}\n</code></pre> <p>!!! Note     \u5982\u679c\u8fd9\u91cc\u6ca1\u6709\u5f88\u591a\u5220\u9664\u64cd\u4f5c\uff0c\u901a\u5e38\u4f7f\u7528\u61d2\u60f0\u64cd\u4f5c\u7684\u7b56\u7565\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u88ab\u5220\u9664\u65f6\uff0c\u6211\u4eec\u4e0d\u5220\u9664\u5b83\uff0c\u505a\u4e00\u4e2a\u5220\u9664\u7684\u8bb0\u53f7\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u5728\u6709\u91cd\u590d\u5173\u952e\u5b57\u65f6\u53ef\u4ee5\u76f4\u63a5\u5728\u9891\u7387\u4e0a\u52a0\u51cf\u3002</p>"},{"location":"ZJU_CS/FDS/tree/#_20","title":"\u5e73\u5747\u60c5\u5f62\u5206\u6790","text":"<p>Q. \u628a n \u4e2a\u5143\u7d20\u653e\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\uff0c\u8fd9\u68f5\u6811\u53ef\u4ee5\u6709\u591a\u9ad8\uff1f A. \u9ad8\u5ea6\u53d6\u51b3\u4e8e\u63d2\u5165\u7684\u987a\u5e8f\u3002\u6700\u574f\u53ef\u4ee5\u8fbe\u5230 $N$</p> <p>!!! Example      * \u63d2\u5165\u987a\u5e8f 4, 2, 1, 3, 6, 5, 7</p> <pre><code>&lt;div align=center&gt; &lt;img src=\"http://cdn.hobbitqia.cc/202211131612003.png\" width = 20%/&gt; &lt;/div&gt;\n\n* \u63d2\u5165\u987a\u5e8f 1, 2, 3, 4, 5, 6, 7\n\n&lt;div align=center&gt; &lt;img src=\"http://cdn.hobbitqia.cc/202211131613806.png\" width = 20%/&gt; &lt;/div&gt;\n</code></pre> <p>!!! Info     \u5144\u5f1f: sibling     \u64cd\u4f5c\u6570: operand     \u524d\u5e8f\u904d\u5386: preorder traversal     \u540e\u5e8f\u904d\u5386: postorder traversal     \u5c42\u5e8f\u904d\u5386: levelorder traversal     \u4e2d\u5e8f\u904d\u5386: inorder traversal     \u7ebf\u7d22\u4e8c\u53c9\u6811: Threaded Binary Trees</p>"},{"location":"ZJU_CS/FDS/tree/#_21","title":"\u4e8c\u53c9\u6811\u7684\u91cd\u5efa","text":"<p>\u4e8c\u53c9\u6811\u7684\u91cd\u5efa\u65b9\u6cd5\uff1a \u4e00\u3001\u6839\u636e\u524d\u5e8f\u52a0\u4e2d\u5e8f\u904d\u5386\u91cd\u5efa\u4e8c\u53c9\u6811 \u6784\u9020\u8be5\u4e8c\u53c9\u6811\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a 1. \u6839\u636e\u524d\u5e8f\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5efa\u7acb\u6839\u7ed3\u70b9\uff1b 2. \u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u8be5\u5143\u7d20\uff0c\u786e\u5b9a\u6839\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\uff1b 3. \u5728\u524d\u5e8f\u5e8f\u5217\u4e2d\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u524d\u5e8f\u5e8f\u5217\uff1b 4. \u7531\u5de6\u5b50\u6811\u7684\u524d\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u5efa\u7acb\u5de6\u5b50\u6811\uff1b 5. \u7531\u53f3\u5b50\u6811\u7684\u524d\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u5efa\u7acb\u53f3\u5b50\u6811\u3002 \u4e8c\u3001\u6839\u636e\u4e2d\u5e8f\u52a0\u540e\u5e8f\u904d\u5386\u91cd\u5efa\u4e8c\u53c9\u6811 \u6784\u9020\u8be5\u4e8c\u53c9\u6811\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a 1. \u6839\u636e\u540e\u5e8f\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5efa\u7acb\u6839\u7ed3\u70b9\uff1b 2. \u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u8be5\u5143\u7d20\uff0c\u786e\u5b9a\u6839\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\uff1b 3. \u5728\u540e\u5e8f\u5e8f\u5217\u4e2d\u786e\u5b9a\u5de6\u53f3\u5b50\u6811\u7684\u540e\u5e8f\u5e8f\u5217\uff1b 4. \u7531\u5de6\u5b50\u6811\u7684\u540e\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u5efa\u7acb\u5de6\u5b50\u6811\uff1b 5. \u7531\u53f3\u5b50\u6811\u7684\u540e\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u5efa\u7acb\u53f3\u5b50\u6811\u3002 \u5982\u4f55\u786e\u5b9a</p> <p>\u8fd8\u6709\u6839\u636e\u524d\u5e8f\u548c\u540e\u5e8f\u786e\u5b9a\u4e2d\u5e8f</p> <p>\u601d\u8def\uff1a \u6784\u9020\u4e8c\u53c9\u6811\uff0c\u7b2c\u4e00\u4ef6\u4e8b\u4e00\u5b9a\u662f\u627e\u6839\u8282\u70b9\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u6784\u9020\u5de6\u53f3\u5b50\u6811</p> <ul> <li>\u524d\u5e8f\u904d\u5386\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6839\u8282\u70b9\uff0c\u540e\u9762\u7684\u90a3\u4e00\u5806\u662f\u5de6\u5b50\u6811\uff0c\u63a5\u7740\u662f\u53f3\u5b50\u6811</li> <li>\u540e\u5e8f\u904d\u5386\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u662f\u5de6\u5b50\u6811\uff0c\u7136\u540e\u662f\u53f3\u5b50\u6811\uff0c\u6700\u540e\u624d\u662f\u6839\u8282\u70b9\u3002</li> </ul> <p>\u7b54\u6848\u4e0d\u552f\u4e00\uff01\uff01</p>"},{"location":"ZJU_CS/HPC/","title":"ZJUSCT","text":"<p>\u8fd9\u91cc\u662fZJUCS\u5927\u4e00\u6691\u5047\u77ed\u5b66\u671f\u8d85\u7b97\u8bfe\u7a0b\uff0c\u6211\u5c06\u4f1a\u628a\u6211\u7684\u7b14\u8bb0\u3001lab\u3001\u4ee5\u53ca\u5b66\u4e60\u8fc7\u7a0b\u8bb0\u5f55\u5728\u8fd9\u91cc\u3002</p>"},{"location":"ZJU_CS/HPC/AIPP/","title":"\u5e76\u884c\u8ba1\u7b97\u8bbe\u8ba1\u5bfc\u8bba","text":""},{"location":"ZJU_CS/HPC/AIPP/#chapter-2","title":"Chapter 2  \u5e76\u884c\u8ba1\u7b97\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\u4ee5\u53ca\u786c\u4ef6","text":""},{"location":"ZJU_CS/HPC/AIPP/#chapter-3-mpi","title":"Chapter 3 \u7528MPI\u8fdb\u884c\u5206\u5e03\u5f0f\u5185\u5b58\u7f16\u7a0b","text":"<p>MPI is designed to work in a heterogeneous\uff08\u5f02\u6784\uff09 environment.</p> <p>fairly heavily\uff08\u76f8\u5f53\uff09dispatch\uff08\u5206\u53d1\uff0c\u8c03\u5ea6\uff09</p> <p>\u8ba1\u7b97\u673a\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\uff1a\u5206\u5e03\u5f0f\u5185\u5b58\u7cfb\u7edf\u548c\u5171\u4eab\u5185\u5b58\u7cfb\u7edf\u3002\u672c\u7ae0\u4e3b\u8981\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u6d88\u606f\u4f20\u9012\u6765\u5bf9\u5206\u5e03\u5f0f\u5185\u5b58\u7cfb\u7edf\u8fdb\u884c\u7f16\u7a0b\u3002</p> <p>\u6ce8\uff1a\u672c\u7ae0\u5185\u5bb9\u53ef\u4ee5\u7ed3\u5408\u8bfe\u672c\u4ee5\u53ca<code>CMU 15-418 Recitation 6</code> \u5171\u540c\u5b66\u4e60\u3002\uff08Recitation 6 \u7684\u5185\u5bb9\u540e\u534a\u90e8\u5206\u662f\u4e00\u4e9b\u77e9\u9635\u4f18\u5316\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4e0d\u60f3\u770b\u53ef\u4ee5\u4e0d\u770b\uff09</p>"},{"location":"ZJU_CS/HPC/AIPP/#hello-world","title":"\u7b2c\u4e00\u4e2a\u7c7b\u4f3c\u4e8eHello world \u7684\u7a0b\u5e8f","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;mpi.h&gt;\n\nconst int MAX_STRING = 100;\n\nint main (void){\n    char greeting[MAX_STRING];\n    int comm_sz;\n    int my_rank;\n\n    MPI_Init( NULL , NULL);\n    MPI_Comm_size( MPI_COMM_WORLD , &amp;comm_sz);\n    MPI_Comm_rank( MPI_COMM_WORLD, &amp;my_rank);\n\n    if (my_rank != 0) {\n        sprintf(greeting, \"Greetings from process %d of %d!\\n\", my_rank, comm_sz);\n        MPI_Send(greeting, strlen(greeting)+1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);\n    } else {\n        printf(\"Greetings from process %d of %d!\\n\", my_rank, comm_sz);\n        for(int i = 1; i &lt; comm_sz; i++)\n        {\n            MPI_Recv(greeting, MAX_STRING, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n            printf(\"%s\", greeting);\n        }\n    }\n\n    MPI_Finalize();\n    return 0;\n}\n\n</code></pre> <p>\u7528<code>mpicc -g -Wall -o hello hello.c</code>\u6765\u7f16\u8bd1</p> <p>\u7528<code>mpiexec -n 1 ./hello</code>\u6765\u8fd0\u884c</p>"},{"location":"ZJU_CS/HPC/AIPP/#mpi","title":"\u4e00\u70b9\u70b9MPI\u7a0b\u5e8f\u7684\u4ee3\u7801\u8981\u70b9","text":"<ol> <li>\u6bcf\u4e2a\u7a0b\u5e8f\u662f\u7531MPI_Init\u548cMPI_Finalize\u8fdb\u884c\u5fc5\u8981\u7684\u521d\u59cb\u5316\u548c\u7ed3\u675f\u3002\u4e0eMPI\u6709\u5173\u7684\u51fd\u6570\u90fd\u8981\u5728\u8fd9\u91cc\u9762\u8fdb\u884c\uff08\u5176\u4e2d\uff0cMPI_Init\u4f20\u5165\u7684\u662fargc\u548cargv\u7684\u6307\u9488\u3002</li> <li>\u901a\u4fe1\u5b50\uff08communicator\uff09\u3001MPI_Comm_size \u548c MPI_Comm_rank \uff08\u4e00\u822c\u6765\u8bf4\uff0ccomm_sz\u8868\u793a\u8fdb\u7a0b\u7684\u6570\u91cf\uff0cmy_rank\u8868\u793a\u8fdb\u7a0b\u53f7\uff09\uff08\u5e76\u4e14\u8981\u521d\u59cb\u5316\uff01\uff01\uff01\uff09</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#spmd","title":"SPMD\u7f16\u7a0b","text":"<p>Single Program and Multiple Data\uff1a\u6211\u4eec\u79f0\u4e3a\u5355\u7a0b\u5e8f\u591a\u6570\u636e\u3002\u7406\u8bba\u4e0a\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u7f16\u8bd1\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u6211\u4eec\u5e38\u7528\u7684\u624b\u6bb5\u662f\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u8fdb\u7a0b\u53f7\u6765\u5206\u914d\u8fdb\u7a0b\u3002</p>"},{"location":"ZJU_CS/HPC/AIPP/#_2","title":"\u901a\u4fe1","text":"<p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06\u4fe1\u606f\u901a\u8fc7<code>printf &amp; sprintf</code>\u6765\u4f20\u9012\u3002\u901a\u8fc7MPI_Send\u6765\u53d1\u9001MPI_Recv\u6765\u63a5\u53d7\u3002</p> <p></p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662fsize\u8981\u52a0\u4e0a'\\0'\u3002Data type could make the program portable.</p> <p>\uff08\u8fd8\u6709\u4e24\u4e2a\u51fd\u6570\u662fMPI_Isend\u548cMPI_IRecv\uff09</p> <p></p> <p>\u6ce8\u610f\uff1a</p> <ol> <li> <p>\u6d88\u606f\u7684\u5927\u5c0f\u4e0d\u8981\u8d85\u8fc7\u6211\u4eec\u6240\u5206\u914d\u7684\u7f13\u51b2\u533a\u3002</p> </li> <li> <p><code>c    recv_comm = send_comm    recv_tag = send_tag    dest = r    src = q    \u4e14\u524d\u4e09\u4e2a\u4fe1\u606f\u517c\u5bb9</code></p> </li> </ol> <p>\u200b   \u8fd9\u610f\u5473\u7740q\u53f7\u8fdb\u7a0b\u7684\u4fe1\u606f\u53ef\u4ee5\u88abr\u53f7\u8fdb\u7a0b\u6536\u5230</p> <ol> <li>MPI\u4f7f\u7528\u7684\u662f\u201c\u63a8\u201d\u901a\u4fe1\u673a\u5236</li> <li>MPI\u6d88\u606f\u4e0d\u53ef\u8d85\u8d8a\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#_3","title":"\u6f5c\u5728\u7684\u4e00\u4e9b\u9677\u9631","text":"<ul> <li>\u6211\u4eec\u9700\u8981\u6bcf\u6761\u63a5\u53d7\u8bed\u53e5\u6709\u76f8\u5e94\u7684\u53d1\u9001\u8bed\u53e5\u5339\u914d\uff0c\u9632\u6b62\u8fdb\u7a0b\u60ac\u6302\u3002</li> </ul> <ul> <li> <p>also have a function <code>MPI_Probe</code>is like a mpi receive.</p> </li> <li> <p>unblocking IO \u4f1a\u4f7f\u7f16\u7a0b\u53d8\u590d\u6742\u3002</p> </li> </ul> <p></p>"},{"location":"ZJU_CS/HPC/AIPP/#io","title":"I/O\u5904\u7406","text":"<p>\u4e66\u4e2d\u4e3e\u7684\u4f8b\u5b50\u662f\u5e76\u884c\u79ef\u5206\u65b9\u6cd5\u3002</p> <p>\u5176\u4e2d\u7684\u4e00\u4e9b\u8981\u70b9\u5982\u4e0b\uff1a</p> <ol> <li>MPI\u5141\u8bb8\u591a\u4e2a\u8f93\u51fa\uff0c\u4f46\u8f93\u51fa\u7684\u987a\u5e8f\u5e76\u4e0d\u4e00\u5b9a\u8ddf<code>my_rank</code>\u6709\u5173\uff0c\u53ef\u80fd\u662f\u4e71\u5e8f\u7684\u3002</li> <li>\u4f46\u8f93\u5165\u7684\u8bdd\u6211\u4eec\u4e00\u822c\u53ea\u89c4\u5b9a0\u53f7\u8fdb\u7a0b\u8d1f\u8d23\u8bfb\u53d6\uff0c\u518d\u5c06\u4fe1\u606f\u5206\u53d1\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002</li> <li>\u96c6\u5408\u901a\u4fe1\uff08collective communication\uff09\uff0c\u53ef\u4ee5\u7528\u6765\u63d0\u9ad8\u6548\u7387\u3002\u4e66\u4e2d\u7684\u4e3e\u4f8b\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\u5f62\u7ed3\u6784\u6765\u901a\u4fe1</li> <li>MPI_Reduce\uff1a\u7528\u6765\u4f18\u5316\u5168\u5c40\u6c42\u548c\u51fd\u6570</li> </ol> <pre><code>double local_x[N], sum[N]\nMPI_Reduce(local _x, sum, N, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD)\n//\u524d\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5730\u5740\u4f20\u53c2\n</code></pre> <p></p> <p>\u5c0f\u7ed3\uff1a\u6211\u4eec\u4e0d\u96be\u6ce8\u610f\u5230\u70b9\u5bf9\u70b9\u901a\u4fe1\u548c\u96c6\u5408\u901a\u4fe1\u7684\u4e0d\u540c\u3002\u4ed6\u4eec\u90fd\u6709\u4e9b\u7279\u70b9\uff1a\u5fc5\u987b\u6709\u5339\u914d\u7684\u96c6\u5408\u901a\u4fe1\u51fd\u6570\uff1b\u4f20\u9012\u7684\u53c2\u6570\u5fc5\u987b\u201c\u76f8\u5bb9\uff1f\u201d\uff1b\u5fe0\u544a\u5c31\u662f\u4e0d\u5efa\u8bae\u5c06\u540c\u4e00\u5757\u7f13\u51b2\u533a\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u540c\u65f6\u8c03\u7528\uff01</p>"},{"location":"ZJU_CS/HPC/AIPP/#_4","title":"\u5411\u91cf\u5904\u7406\u7684\u6280\u5de7","text":"<p>\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230CMU\u8bfe\u7a0b\u540e\u534a\u90e8\u5206\u4ee5\u53ca\u4e66\u4e0a\u7684\u4e00\u4e9b\u77e5\u8bc6\u70b9\uff1a</p> <ol> <li>\u6570\u636e\u5206\u53d1\uff1a\u5757\u5212\u5206\u3001\u5faa\u73af\u5212\u5206\u3001\u5757-\u5faa\u73af\u5212\u5206</li> <li>\u6563\u5c04:<code>MPI_Scatter</code>; \u805a\u96c6\uff1a<code>MPI_Gather</code>\uff1bMPI_ALLgather:\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u7684send_buf_p\u5185\u5bb9\u4e32\u8054\u8d77\u6765\u3002</li> <li>\u4e66\u4e2d\u6709\u77e9\u9635\u4e58\u6cd5\u548c\u52a0\u6cd5\u7684\u793a\u4f8b\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#mpi_1","title":"MPI\u6027\u80fd","text":"<ol> <li>\u8ba1\u65f6\uff1a<code>MPI_Wtime</code>\u7528double\u7c7b\u578b\u7684\u53d8\u91cf\u8bb0\u5f55\u8fd4\u56de\u503c\u53ca\u53ef\u3002</li> <li><code>MPI_Barrier</code>\u7528\u6765\u540c\u6b65\u8fdb\u7a0b\u3002\u5728\u540c\u4e00\u901a\u4fe1\u5b50\u7684\u6240\u6709\u8fdb\u7a0b\u8c03\u7528\u8be5\u51fd\u6570\u4e4b\u524d\u6240\u6709\u8c03\u7528MPI_Barrier \u7684\u8fdb\u7a0b\u90fd\u4e0d\u80fd\u8fd4\u56de\u3002</li> <li>\u6392\u5e8f\u7b97\u6cd5\u7684\u5e76\u884c\u4f18\u5316\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/AIPP/#chapter-5-openmp","title":"Chapter 5 \u7528OpenMP\u8fdb\u884c\u5171\u4eab\u5185\u5b58\u7f16\u7a0b","text":"<p>OpenMP\u4e2d\u7684MP\u4ee3\u8868\u7740\u201c\u591a\u5904\u7406\u201d\uff0c\u662f\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u5e76\u884c\u7f16\u7a0b\u540c\u4e00\u7684\u672f\u8bed\u3002</p>"},{"location":"ZJU_CS/HPC/class/","title":"note of class","text":"<p>\u8fd9\u91cc\u662f\u6d59\u6c5f\u5927\u5b66\u5927\u4e00\u8d85\u7b97\u77ed\u5b66\u671f\u7684\u8bfe\u5802\u7b14\u8bb0  </p>"},{"location":"ZJU_CS/HPC/class/#_1","title":"\u5173\u4e8e\u672c\u8bfe\u7684\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5927\u5bb6\u53ef\u4ee5\u5148\u50a8\u5907\u4e00\u4e9b\u6570\u903b\u548c\u796d\u7956\u7684\u77e5\u8bc6\u3002\u6bd4\u5982\u901a\u8fc7cs\u901f\u6210\u8bfe\uff0c\u4ee5\u53caDRAM\u6765\u8865\u5145\u4e00\u4e9b\u77e5\u8bc6\uff0c\u4fbf\u4e8e\u4f60\u7406\u89e3\u3002</p> <p>Table</p> Date Target 7\u67083\u65e5 \u4e00\u4e9b\u4e9b\u4ecb\u7ecd\u4e0e\u7f51\u7edc\u77e5\u8bc6 7\u67084\u65e5 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u9ad8\u6027\u80fd\u8ba1\u7b97\u57fa\u7840 7\u67085\u65e5 \u9ad8\u6027\u80fd\u8ba1\u7b97\u65b9\u6cd5\u8bba\uff08HPC\uff09 7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u53ca\u8fd0\u7ef4\u57fa\u7840"},{"location":"ZJU_CS/HPC/class/L1/","title":"7\u67084\u65e5 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u9ad8\u6027\u80fd\u8ba1\u7b97\u57fa\u7840","text":""},{"location":"ZJU_CS/HPC/class/L1/#overview","title":"Overview","text":"<ul> <li>ISA and x86 Instructions</li> <li>Processor Architecture</li> <li>Memory Hierarchy</li> <li>Concurrency Basic</li> </ul>"},{"location":"ZJU_CS/HPC/class/L1/#prerequisite-checklist","title":"Prerequisite Checklist","text":"<ul> <li>Digital representation of values</li> <li>Memory &amp; Address</li> <li>C code</li> </ul>"},{"location":"ZJU_CS/HPC/class/L1/#isa-x86-instruction","title":"ISA &amp; x86 instruction","text":"<ol> <li>ISA: instruction ser architecture.</li> <li>Assembly Language</li> </ol>"},{"location":"ZJU_CS/HPC/class/L1/#processor-architecture","title":"Processor Architecture","text":"<ol> <li>Microarchitecture is implementation.(could make faster)</li> <li>thread\uff08\u7ebf\u7a0b\uff09</li> <li>fetch -&gt; Decode -&gt; Execute -&gt; Commit </li> <li>Data hazards: You haven't already written but the next process need to call the data.</li> <li>control hazard: parallel processing could make a fault.</li> <li>structure hazard : like fetch and execute could make conflict.</li> <li>SRAM &amp; DRAM\uff1aSRAM = cache\uff08\u9ad8\u7f13\u51b2\uff09.</li> </ol>"},{"location":"ZJU_CS/HPC/class/L1/#memory-layout","title":"Memory Layout","text":"<ol> <li>Stack: Runtime stack (8MB limit) local variables.</li> <li>Heap: Dynamically allocated as needed.</li> <li>Data: statically allocated data.</li> <li>virtual memory: OS utilizes virtual memory to isolate address space of different processes and provide each process the same linear address space(\u7ebf\u6027\u6620\u5c04\uff0c\u7c7b\u4f3c\u4e8e\u54c8\u5e0c)</li> <li>Translation Lookaside buffer\uff08TLB\uff09 -&gt; could accelerate the virtual memory and physical memory interactive.</li> <li>NVM: between SSD and SRAM.</li> <li>Cache Organization(valid bit; dirty bit ; Tag: check if matching)</li> <li>Cache usage : Read hit ; Read miss ; Write hit(write-back); Write miss(write-allocate)</li> <li>Multiple Cache Hierarchy\u3002\uff08L1 L2 L3)</li> <li>Processes vs. Threads.</li> </ol> <p>differences: Threads in one process share memory but processes not.</p> <pre><code>//\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u4e00\u5757\u8fdb\u884c\u8fd9\u4e2a\u4ee3\u7801\u65f6\uff0c\u6700\u5c0f\u7684\u8ba1\u7b97\u7ed3\u679c\u662f2\uff0c\u601d\u8003\u4e3a\u4ec0\u4e48\uff1f\nfor(int i=1; i &lt; 10000; i++)\n{\n    counter++;\n}\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L1/#x86-microarchitecture","title":"x86 microarchitecture","text":""},{"location":"ZJU_CS/HPC/class/L2/","title":"7\u67085\u65e5 \u9ad8\u6027\u80fd\u8ba1\u7b97\u65b9\u6cd5\u8bba\uff08HPC\uff09","text":""},{"location":"ZJU_CS/HPC/class/L2/#overview","title":"Overview","text":"<ul> <li>Basic Theories for HPC</li> <li>Performance Analysis and Optimization Methodology</li> <li>Practical Optimization Strategies</li> <li>HPC Skill Tree</li> <li>How to Learn HPC/CS</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#basic-theories-for-hpc","title":"Basic Theories for HPC","text":"<p>Factor affecting performance:</p> <ol> <li>Algorithms</li> <li>Models </li> <li>Software</li> <li>Hardware</li> <li>Physics</li> </ol> <p>Example: Large Matrix Multiplication(\u8be6\u60c5\u53ef\u770bAIPP\u4e2d\u7684MPI\u4f18\u5316\u548cBLAS\u77e9\u9635\u8ba1\u7b97\uff0cGPU\u901f\u5ea6\u4f1a\u6bd4CPU\u8dd1\u5f97\u5feb)</p>"},{"location":"ZJU_CS/HPC/class/L2/#performance-analysis-and-optimization-methodology","title":"Performance Analysis and Optimization Methodology","text":"<ol> <li>\u6590\u6ce2\u90a3\u5951\u6570\u5217\u8ba1\u7b97\uff0c\u7f16\u8bd1\u5668\u4f1a\u6709\u4f18\u5316\uff08O2\u3001O3\uff09\u3002\u53ef\u4ee5\u901a\u8fc7IDA\u53cd\u7f16\u8bd1\u770b\u770b\u5b9e\u9645\u8fd0\u7b97\u7684\u4ee3\u7801\u3002</li> <li>Maximize performance\uff1a Speed\u3001Throughout\u3001Latency\uff08\u5ef6\u8fdf\uff09or Resource is limited\uff08quota\u914d\u989d\uff09</li> <li>black box  Dominant component</li> </ol> <p>Roofline Performance Mode:</p> <p>Arithmetic Intensity(AI) = FLOP's/Bytes (this could judge the performance of program)</p> <p>\u5c4b\u9876\u7ebf\u53ef\u4ee5\u5224\u65ad CPU \u548c\u7f13\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u6211\u4eec\u662f\u7684\u6700\u7ec8\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u5b83\u8fbe\u5230\u62d0\u70b9\uff01</p> <p>\u800c2020\u540e\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u6765\u8bad\u7ec3\u9ed1\u7bb1\u6d4b\u6574\u4f53\u6027\u80fd</p> <ol> <li>Amadal\u2019s law\uff08\u6c34\u6876\u6548\u5e94\uff0c\u8865\u5168\u6700\u77ed\u7684\uff09</li> <li>Methods \uff1a Analysis in math\uff1b Hardware simulator\uff1b Profile: sampling some usage of a resource; Trace: collecting highly detailed data about the execution of a system.</li> <li>General Optimization Pipeline</li> </ol>"},{"location":"ZJU_CS/HPC/class/L2/#practical-optimization-strategies","title":"Practical Optimization Strategies","text":"<ol> <li>Algorithm Optimization - Prefetch &amp; Prediction</li> <li>Caching \uff1astores results from previous executions ; Limited cache size.</li> <li>Lock - Free: Use atomic primitives(CAS Atomic_add)</li> </ol> <p>Negative example: GIL in Python</p> <ol> <li>Load Balancing(make or cores to work)</li> <li>Reduce Precision(\u7cbe\u5ea6)</li> <li>Reduce Branching(skip list or like binary tree of branch)</li> <li>Vectorization(High-level: vectorized computation graph ; Instruction-level: SIMD instructions)</li> </ol> <p>See in your lab2</p> <ol> <li>Optimize Memory Access Locality</li> </ol> <ul> <li>GEMM</li> <li>Blocking</li> <li>Loop Permutation(\u6392\u5217)</li> <li>Array Packing</li> </ul> <p>See in your lab3</p> <ol> <li>Instruction / Data Alignment</li> </ol> <p>eg: compiler could auto optimize.\uff08\u4f8b\u5982\u7ed3\u6784\u4f53\u4f1a\u5185\u5b58\u81ea\u52a8\u5bf9\u9f50\uff09</p>"},{"location":"ZJU_CS/HPC/class/L2/#discussion","title":"Discussion","text":"<ul> <li>Domain Specific Language </li> <li>Manual Optimization is indispensable</li> <li>Core Affinity\uff08\u4eb2\u548c\u529b\uff09\uff08NUMA non-uniform memory access\uff09</li> <li>Adapts general code to local machine</li> <li>Auto - learning eg. black-box method : TVM</li> <li>You can learn something about TPU and DPU and FPGA.</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#hpc-skill-tree","title":"HPC skill tree","text":"<ul> <li>Linux:  \u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u77e5\u8bc6\u3001Linux\u57fa\u672c\u7ed3\u6784\u3001 Shell\u4f7f\u7528</li> <li>\u96c6\u7fa4\u8fd0\u7ef4\u548c\u7f51\u7edc\u7ba1\u7406\uff08\u5206\u5e03\u5f0f\uff09\uff1aNFS\uff1b</li> <li>\u534f\u4f5c\u5f00\u53d1\u4e0e\u7248\u672c\u63a7\u5236</li> <li>\u811a\u672c\u81ea\u52a8\u5316\uff08Linux shell \u6216\u8005 Python\uff09</li> <li>\u5e26\u4f9d\u8d56\u7a0b\u5e8f\u7684\u624b\u52a8\u7f16\u8bd1\u94fe\u63a5</li> <li>\u5e76\u884c\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6d4b\u8bd5\u548c\u4f18\u5316</li> <li>\u529f\u8017\u63a7\u5236\u4e0e\u8c03\u53c2</li> </ul>"},{"location":"ZJU_CS/HPC/class/L2/#_1","title":"\u5982\u4f55\u5b66\u4e60","text":""},{"location":"ZJU_CS/HPC/class/L3/","title":"7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u4ee5\u53ca\u8fd0\u7ef4\u57fa\u7840","text":"<ul> <li>7\u67086\u65e5 \u96c6\u7fa4\u8f6f\u786c\u4ef6\u4ee5\u53ca\u8fd0\u7ef4\u57fa\u7840<ul> <li>Linux\u57fa\u7840\u64cd\u4f5c</li> <li>\u96c6\u7fa4</li> <li>\u5e94\u7528\u548c\u529f\u8017</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/class/L3/#linux","title":"Linux\u57fa\u7840\u64cd\u4f5c","text":"<p>\u672c\u8bb2\u6709\u90e8\u5206\u5185\u5bb9\u6211\u653e\u5230/missing semester/Linux \u4e2d\u53bb\u4e86</p> <ol> <li> <p>\u5b66\u4e60\u5efa\u8bae\uff1aChatGPT \uff1b-- help\uff1b man</p> </li> <li> <p>Linux\u4f1a\u6709\u5f88\u591a\u53d1\u884c\u7248\uff0cUbuntu\u7b14\u8bb0\u5bb9\u6613\u4e0a\u624b\uff0c\u5927\u591a\u96c6\u7fa4\u4f7f\u7528\u7684\u662fDebian\u3002</p> </li> <li> <p>\u7528\u6237\u7ba1\u7406\uff1a<code>/etc/passwd</code>(\u7528\u6237\u540d\uff1a\u5bc6\u7801\u8868\u793a\uff1aUID\uff1aGID\u7ec4\u522b\uff1a\u63cf\u8ff0\u6027\u5185\u5bb9\uff1a\u4e3b\u76ee\u5f55\uff1a\u9ed8\u8ba4shell)</p> </li> </ol> <p>\u5bc6\u7801\u5728<code>/etc/shadow</code></p> <ol> <li> <p><code>passwd [user]</code>(\u96c6\u7fa4\u4e0b\u5982\u679c\u5f00\u4e86NIS\u5219\u8981\u7528<code>yppasswd</code>)</p> </li> <li> <p>\u6587\u4ef6\u7cfb\u7edf</p> </li> </ol> <p></p> <p>\u6ce8\uff1a/opt\u4e2d\u4f1a\u6709\u4e00\u4e9b\u53ef\u9009\u7684\u4e1c\u897f\uff1b/mnt\u4e00\u822c\u7528\u6765\u6302\u5728\u786c\u76d8</p> <ol> <li><code>lsblk</code>\u7528\u6765\u663e\u793a\u5206\u533a ; <code>df</code>\u53ef\u4ee5\u770b\u5230\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5</li> <li><code>mount</code>(need the su authority)</li> <li><code>umount -l(lazy) -f(forced)</code> </li> <li>git\u7684\u4f7f\u7528\uff01\uff01\uff01\uff08\u667a\u4e91\u8bfe\u580242\uff1a34\u5de6\u53f3\u5f00\u59cb\uff09\uff08\u53ef\u4ee5\u4e0b\u8f7dgit line\u63d2\u4ef6\uff09</li> <li><code>make &amp;&amp; make install</code></li> <li><code>ps</code>\u8fdb\u7a0b\u7ba1\u7406\uff0c<code>kill</code>\u6740\u6b7b\u8fdb\u7a0b\uff0c<code>htop</code>\u5728\u7ebf\u76d1\u7ba1</li> <li>\u7ec8\u7aef\u5206\u5757\uff1a<code>tmux</code></li> </ol> <pre><code>$ tmux new -s &lt;name&gt;\n\n# \u5206\u79bb\u5bf9\u8bdd\n$ tmux detach \n\u6216\u8005 ctrl+B \u518d\u6309 D\n# \u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\n$ tmux attach -t &lt;name&gt; \n# \u4f7f\u7528\u4f1a\u8bdd\u540d\u79f0\n$ tmux switch -t &lt;session-name&gt;\n# rename\n$ tmux rename-session -t 0 &lt;new-name&gt;\n\n\u62c6\u6210\u5de6\u53f3\u4e24\u8fb9\nctrl+B+%\n\u770b\u6240\u6709section\nctrl+S\n\n# \u5217\u51fa\u6240\u6709\u5feb\u6377\u952e\uff0c\u53ca\u5176\u5bf9\u5e94\u7684 Tmux \u547d\u4ee4\n$ tmux list-keys\n# \u5217\u51fa\u6240\u6709 Tmux \u547d\u4ee4\u53ca\u5176\u53c2\u6570\n$ tmux list-commands\n# \u5217\u51fa\u5f53\u524d\u6240\u6709 Tmux \u4f1a\u8bdd\u7684\u4fe1\u606f\n$ tmux info\n# \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u7684 Tmux \u914d\u7f6e\n$ tmux source-file ~/.tmux.conf\n</code></pre> <ol> <li>ctrl+B \u518d\u6309 '['\u5c31\u53ef\u4ee5\u4e0a\u4e0b\u6d3b\u52a8\u5149\u6807</li> <li>\u7f51\u7edc\uff1a\u4f1a\u6709\u7aef\u53e3</li> </ol> <pre><code>netstat -a   # \u5217\u51fa\u6240\u6709\u7aef\u53e3\nnetstat -pt  # \u663e\u793a\u6240\u6709PID\u548c\u8fdb\u7a0b\u7684\u540d\u5b57\niptables -L -n   # \u67e5\u770b\u7aef\u53e3\u662f\u5426\u5f00\u653e\n</code></pre> <p></p> <p>NAS00 \u8d77\u5230\u8df3\u677f\u673a\u7684\u4f5c\u7528</p> <ol> <li>\u4f20\u8f93\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7<code>scp</code>\u6216\u8005<code>xftp/xshell</code></li> </ol>"},{"location":"ZJU_CS/HPC/class/L3/#_1","title":"\u96c6\u7fa4","text":"<ol> <li>HPC\u96c6\u7fa4\uff0cnode\u8282\u70b9</li> <li>\u670d\u52a1\u5668\uff08\u4e3b\u6d41\u9ad8\u6027\u80fdNVlink AI\u670d\u52a1\u5668\uff1b\u5f00\u653e\u52a0\u901f\u751f\u6001OAM AI\u670d\u52a1\u5668\uff1b\u9ad8\u9002\u5e94\u6027PCLeAI\u670d\u52a1\u5668\uff09</li> <li>FLOPS\uff08\u6bcf\u79d2\u6d6e\u70b9\u8fd0\u7b97\u6b21\u6570\uff09\uff1b Latency\uff08\u5ef6\u8fdf\uff09\uff1b Bandwidth or throughout\uff08\u541e\u5410\u91cf\uff09</li> <li>PCLe(Peripheral Component Interconnect Express): \u9ad8\u901f\u4e32\u884c\u8ba1\u7b97\u673a\u6269\u5c55\u603b\u7ebf\u6807\u51c6</li> <li>\u5b58\u50a8\u534f\u8bae\uff1aSATA\uff1bNVMe</li> <li>M.2\u662f\u4e00\u79cd\u63a5\u53e3</li> <li>NVLinke\u670d\u52a1\u5668\u662fNVIDIA\u7684\u663e\u5361\u4ea4\u4e92\u7684\u901a\u4fe1\u534f\u8bae</li> <li>IPMI\uff08intelligentPlatform Management Interfere\uff09\u667a\u80fd\u5e73\u53f0\u7ba1\u7406\u63a5\u53e3</li> <li>BMC\u7f51\u7edc\u7ba1\u7406\u5e73\u53f0</li> <li>\u73af\u5883\u7ba1\u7406\u53ef\u4ee5\u770b\u770b\uff1aenvironment Module</li> <li>Slurm\u96c6\u7fa4\u7ba1\u7406\u548c\u4f18\u5316\u7528</li> </ol> <ol> <li>sbatch:\u7528\u4e8e\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u5230\u961f\u5217</li> <li>srun\uff1a\u76f4\u63a5\u518dSlurm\u96c6\u7fa4\u8fd0\u884c\u547d\u4ee4\u6216\u8005\u7a0b\u5e8f</li> <li>squeue\uff1a\u67e5\u770b\u5728\u961f\u5217\u4e2d\u7684\u4f5c\u4e1a</li> <li>sinfo\uff1a\u7528\u4e8e\u67e5\u770bSlurm\u7ba1\u7406\u7684\u8282\u70b9\u548c\u5206\u533a\u7684\u60c5\u51b5</li> <li>Scancel\uff1a\u7528\u4e8e\u53d6\u6d88\u5df2\u7ecf\u63d0\u4ea4\u7684\u4f5c\u4e1a</li> <li>Salloc\uff1a\u4ea4\u4e92\u5f0f\u4f5c\u4e1a\u8bf7\u6c42\u8d44\u6e90</li> </ol> <ol> <li>NVIDIA\u548cIntel\u90fd\u6709\u76f8\u5173HPC\u7684\u5957\u4ef6</li> </ol>"},{"location":"ZJU_CS/HPC/class/L3/#_2","title":"\u5e94\u7528\u548c\u529f\u8017","text":""},{"location":"ZJU_CS/HPC/class/L4/","title":"7\u67088\u65e5 \u5411\u91cf\u5316\u5e76\u884c\u8ba1\u7b97\u57fa\u7840","text":"<ul> <li> <p>python\u3001numpy \u3001\u5411\u91cf\u5316\u8ba1\u7b97\u2026\u2026</p> </li> <li> <p>\u5411\u91cf\u5316\u8ba1\u7b97\u662f\u4ec0\u4e48\uff1f</p> </li> <li> <p>Array Programming \u5bf9\u6570\u7ec4\u76f4\u63a5\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c</p> </li> <li>Automatic/Manual vectorization</li> </ul>"},{"location":"ZJU_CS/HPC/class/L4/#what-is-array-programming","title":"What is array programming","text":"<ol> <li>c\u8bed\u8a00\u5b8c\u6210\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u662f\u4ece\u57fa\u672c\u4e58\u6cd5\u4e00\u4e2a\u4e2a\u89c4\u5b9a\u5143\u7d20\u7684\u8ba1\u7b97\u3002</li> </ol> <p>\u5b9e\u73b0\u6548\u7387\u4f4e\uff1b\u4ee3\u7801\u8026\u5408\uff1b\u4ee3\u7801\u590d\u7528\u56f0\u96be</p> <ol> <li>\u9ad8\u5c42\u6b21\u5411\u91cf\u5316\u7684\u6838\u5fc3\uff1a\u8ba1\u7b97\u8bed\u610f\u4e0e\u8c03\u5ea6\u5206\u79bb\u3002</li> </ol> <ol> <li>\u7f16\u5199\u7a0b\u5e8f\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u8bed\u4e49\u672c\u8eab\uff0c\u4e0d\u9700\u8981\u5206\u5fc3\u5982\u4f55\u9ad8\u6548\u5b9e\u73b0\u7b97\u5b50</li> <li>\u7075\u6d3b\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u63d0\u4f9b\u7684\u9ad8\u6027\u80fd\u5b9e\u73b0\u5927\u5e45\u8282\u7ea6\u5f00\u53d1\u6210\u672c</li> <li>\u4ee3\u7801\u5177\u6709\u66f4\u9ad8\u7684\u53ef\u79fb\u690d\u6027\uff0c\u540c\u4e00\u4efd\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u540e\u7aef\u5b9e\u73b0\u52a0\u901f</li> </ol> <pre><code>graph LR\na[Numpy API] --&gt; b[Numpy]\na --&gt; c[Jax Numpy]\na --&gt; d[Cupy]\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L4/#numpy","title":"Numpy","text":"<p>NumPy \u662f Python \u4e2d\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002\u5b83\u662f\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u4ee5\u53ca\u7528\u4e8e\u6570\u7ec4\u5feb\u901f\u64cd\u4f5c\u7684\u5404\u79cd API\uff0c\u6709\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002</p> <p>Numpy \u4ee3\u7801\u4e00\u822c\u91c7\u7528\u5411\u91cf\u5316\uff08\u77e2\u91cf\u5316\uff09\u63cf\u8ff0\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u4e2d\u6ca1\u6709\u4efb\u4f55\u663e\u5f0f\u7684\u5faa\u73af\uff0c\u7d22\u5f15\u7b49\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u4ee5\u4e0b\u597d\u5904\uff1a</p> <ul> <li>\u5411\u91cf\u5316\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u4e8e\u9605\u8bfb</li> <li>\u66f4\u5c11\u7684\u4ee3\u7801\u884c\u901a\u5e38\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef</li> <li>\u4ee3\u7801\u66f4\u63a5\u8fd1\u4e8e\u6807\u51c6\u7684\u6570\u5b66\u7b26\u53f7</li> </ul> <p>\u53e6\u5916\uff0c\u5411\u91cf\u5316\u7684\u4ee3\u7801\u80fd\u591f\u89c4\u907f\u6389 Python \u4e2d\u7f13\u6162\u7684\u8fed\u4ee3\u5faa\u73af\uff0c\u88ab\u5e95\u5c42\u7684\u5b9e\u73b0\u66f4\u597d\u7684\u8c03\u5ea6\uff0c\u5982\u63a5\u5165 BLAS \u77e9\u9635\u8fd0\u7b97\u5e93\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002</p>"},{"location":"ZJU_CS/HPC/class/L4/#numpy-api","title":"NumPy API","text":"<p>\u7531\u4e8e\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 NumPy \u7684\u6587\u6863\uff08\u771f\u7684\u4e00\u5b9a\u4e00\u5b9a\u8981\u597d\u597d\u67e5\u6587\u6863\uff0c\u5f88\u591a\u4eba\u53ef\u80fd\u4f1a\u8bf4\u901f\u901a\u600e\u4e48\u6837\uff0c\u4f46\u6211\u89c9\u5f97\u8fd8\u662f\u8981\u6253\u597dpython\u7684\u57fa\u7840\u3002\uff09</p>"},{"location":"ZJU_CS/HPC/class/L4/#_1","title":"\u53ef\u80fd\u7684\u8c03\u5ea6\u4f18\u5316","text":"<p>\u5e76\u884c\uff1a\u591a\u4e2a\u6838\u5fc3\u4e00\u8d77\u8ba1\u7b97</p> <p>SIMD\uff1a\u4f7f\u7528\u5904\u7406\u5668\u7684SIMD\u6307\u4ee4\u52a0\u901f</p> <p>Trade Off \u662f\u95e8\u827a\u672f\uff01\uff01\uff01</p>"},{"location":"ZJU_CS/HPC/class/L4/#numpy_1","title":"NumPy\u4f7f\u7528","text":"<p>\uff08ps\uff1a\u8fd9\u91cc\u63a8\u8350\u4e00\u4e2ab\u7ad9up\u4e3b\u201c\u5947\u4e50\u7f16\u7a0b\u5b66\u9662\u201d\uff0c\u4ed6\u7684\u89c6\u9891\u7684\u51dd\u805a\u5ea6\u5f88\u9ad8\uff0c\u9002\u5408\u901f\u901a\uff09</p> <pre><code>import numpy as np\n&gt;&gt;&gt; a = np.zeros((3,2)) # initialize the matrix\n&gt;&gt;&gt; a.shape # got the size\n(3,2)\n\n&gt;&gt;&gt; a = np.ones((2,4))\na = array([[1,1,1,1],\n           [1,1,1,1]])\n\n&gt;&gt;&gt; np.arange(3,7)\narray([3, 4, 5, 6])\n\n# random elements\n&gt;&gt;&gt; np.random.rand(2,4)\narray([[0.26649161, 0.92231931, 0.9729259 , 0.4400486 ],\n       [0.80943781, 0.53395907, 0.16488674, 0.33438204]])\n\n&gt;&gt;&gt; np.linspace(0,1,5) # notice the spell\narray([0.  , 0.25, 0.5 , 0.75, 1.  ])\n\n# numpy\u4e2d\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u662f64\u4f4d\u6d6e\u70b9\u6570\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u6307\u5b9a\uff0c\u5982\u4e0b\uff1a\n&gt;&gt;&gt; a = np.zeros((4,2), dtype = np.int32)\n\n&gt;&gt;&gt; a\narray([[0., 0.],\n       [0., 0.],\n       [0., 0.],\n       [0., 0.]])\n&gt;&gt;&gt; a.dtype\ndtype('float64')\n&gt;&gt;&gt; a = a.astype(int)\n&gt;&gt;&gt; a.dtype\ndtype('int64')\n\n# \u4e24\u4e2a\u76f8\u540c\u4f4d\u7f6e\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u56db\u5219\u8fd0\u7b97\u3002\u5b83\u4f1a\u5c06\u6570\u7ec4\u540c\u4f4d\u7f6e\u7684\u5143\u7d20\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\n# \u70b9\u4e58\u662f\u4f7f\u7528dot\u51fd\u6570\n# @\u662f\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\n&gt;&gt;&gt;a = np.array([1,2,3])\n&gt;&gt;&gt;b = np.array([4,5,6])\n&gt;&gt;&gt;np.dot(a,b)\n32\n\n#\u6c42\u5e73\u65b9\u6839/sin/cos/log/power\n&gt;&gt;&gt; a\narray([1, 2, 3])\n&gt;&gt;&gt; np.sqrt(a)\narray([1.        , 1.41421356, 1.73205081])\n&gt;&gt;&gt; np.sin(a)\narray([0.84147098, 0.90929743, 0.14112001])\n\n# \u5e7f\u64ad\n&gt;&gt;&gt; a\narray([1, 2, 3])\n&gt;&gt;&gt; a*5\narray([ 5, 10, 15])\n&gt;&gt;&gt; b\narray([[1],\n       [2],\n       [3]])\n&gt;&gt;&gt; a+b\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n\n# min \u6216\u8005 max\uff0c\u8fd4\u56de\u6570\u7ec4\u6700\u5c0f\u6216\u6700\u5927\n# argmin \u6216\u8005 argmax\u4f1a\u8fd4\u56de\u6700\u5c0f\u6216\u6700\u5927\u7684\u7d22\u5f15\n# sum\u4f1a\u8fd4\u56de\u6240\u6709\u6570\u636e\u7684\u603b\u548c\n# mean\u6216\u8005median\u4f1a\u8fd4\u56de\u6570\u636e\u7684\u5e73\u5747\u503c\n# var\u662f\u65b9\u5dee\uff0cstd\u662f\u6807\u51c6\u65b9\u5dee\u7b49\n# \u4ee5\u4e0a\u53ef\u4ee5\u6307\u5b9aaxis\uff0caxis=0\u4ee3\u8868\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u884c\uff0c=1\u4ee3\u8868\u5217\n&gt;&gt;&gt; c\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n&gt;&gt;&gt; c.sum(axis=0)\narray([ 9, 12, 15])\n&gt;&gt;&gt; c.min(axis=0)\narray([2, 3, 4])\n&gt;&gt;&gt; c.mean(axis=0)\narray([3., 4., 5.])\n&gt;&gt;&gt; c.var(axis=0)\narray([0.66666667, 0.66666667, 0.66666667])\n\n# \u4e0epython list\u76f8\u540c\uff0c\u53ef\u4ee5\u6709\u8bb8\u591a\u65b0\u5947\u7684\u64cd\u4f5c\u5982\u4e0b\n&gt;&gt;&gt; c\narray([[2, 3, 4],\n       [3, 4, 5],\n       [4, 5, 6]])\n&gt;&gt;&gt; c[0,1]\n3\n# \u6ce8\u610f\uff1a\u4e0ec\u4e0d\u540c\uff0c\u4e0e\u548c\u6216\u53ea\u6253\u4e00\u4e2a\u7b26\u53f7\n&gt;&gt;&gt; c[(c&gt;3) &amp; (c%2 == 0)]\narray([4, 4, 4, 6])\n&gt;&gt;&gt; c[0,0:2]\narray([2, 3])\n&gt;&gt;&gt; a[0:] || a[0]\narray([1, 2, 3])\n&gt;&gt;&gt; a[0:3:2]\narray([1, 3])\n&gt;&gt;&gt; a[::-1]\narray([3, 2, 1])\n\n</code></pre> <p>\u66f4\u6df1\u5165\u7684\u5b66\u4e60\u53ef\u4ee5\u53c2\u52a0From python to numpy</p>"},{"location":"ZJU_CS/HPC/class/L4/#_2","title":"\u4f7f\u7528\u6280\u5de7","text":"<ul> <li>\u5411\u91cf\u5316\u9664\u4e86\u5355\u4e2a\u7b97\u5b50\u5185\u90e8\u7684\u8c03\u5ea6\u4f18\u5316\u5916\uff0c\u53ef\u4ee5\u4e0d\u4e00\u4e2a\u7b97\u5b50\u4e00\u4e2a\u7b97\u5b50\u7684\u6267\u884c\uff0c\u6240\u6709\u9700\u8981\u6267\u884c\u7684\u7b97\u5b50\u53ef\u4ee5\u6784\u6210\u8ba1\u7b97\u56fe</li> <li>\u5728\u8ba1\u7b97\u56fe\u4e0a\u7684\u8c03\u5ea6\u4f18\u5316\u4e0d\u518d\u5c40\u9650\u4e8e\u7b97\u5b50\u5185\u90e8\uff0c\u800c\u53ef\u4ee5\u8de8\u7b97\u5b50\u6d88\u9664\u5197\u4f59\uff0c\u589e\u5f3a\u7f13\u5b58\u53cb\u597d\u578b\u51cf\u5c11\u8bbf\u5b58\uff0c\u5e76\u884c\u6267\u884c\u591a\u4e2a\u7b97\u5b50\u7b49\u7b49\u66f4\u7075\u6d3b\u7684\u4f18\u5316\u3002</li> </ul>"},{"location":"ZJU_CS/HPC/class/L4/#automaticmanual-vectorization","title":"Automatic/Manual vectorization","text":""},{"location":"ZJU_CS/HPC/class/L4/#automatic-vectorization","title":"Automatic vectorization","text":"<p>\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8bc6\u522b\u5e76\u5c06\u4f60\u7684\u4ee3\u7801\u5411\u91cf\u5316</p> <p>Single Instruction Multiple Data. Generally speaking, SIMD is combined with SSE and AVX.</p>"},{"location":"ZJU_CS/HPC/class/L5/","title":"7\u67089\u65e5 GPU (Graphic Processing Unit)","text":"<p>\u672c\u8282\u8bfe\u4e3b\u8981\u7531\u5219\u53ef\u8001\u5e08\u8fdb\u884c\u4e00\u4e2a\u5f15\u5bfc\uff0c\u4e4b\u540e\u4fbf\u662f\u901a\u8fc7\u5b98\u7f51\u5bf9CUDA\u7684\u5b66\u4e60\uff0c\u4ee5\u53cappt\u4e0a\u6709\u4e00\u4e9b\u6ca1\u8bb2\u5230\u7684\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003\u5b66\u4e60\u3002\u5f53\u7136\u6211\u4e5f\u5efa\u8bae\u5927\u5bb6\u53ef\u4ee5\u53bb\u770bCMU 15-418.\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u77e5\u8bc6\u4e0a\u7684\u8865\u5145\u3002\uff08\u8fd9\u91cc\u5219\u53ef\u8001\u5e08\u5bf9\u6574\u4e2a\u8ba1\u7b97\u673a\u786c\u4ef6\u6709\u4e00\u5f20\u975e\u5e38\u597d\u7684\u6846\u67b6\u56fe\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/class/L5/#why-gpu","title":"Why GPU","text":"<ol> <li> <p>\u7b97\u529b\u7684\u9700\u6c42</p> </li> <li> <p>Von Neumann Model has two key properties:</p> </li> </ol> <ol> <li>Stored program (Instruction stored in a linear memory array; the interpretation of a stored  )</li> <li>Sequential instruction processing(fixed output; one instruction processed at a time; )</li> </ol> <ol> <li>Each instruction takes a single clock cycle to execute.</li> </ol> <p>AS: Architecture state</p> <ol> <li>Multi-Cycle Microarchitecture</li> </ol> <p>\u5355\u5468\u671f\uff0c\u4e2d\u95f4\u6267\u884c\u591a\u4e2a\u547d\u4ee4\u7684\u72b6\u6001</p> <ol> <li>Pipeline CPU</li> <li>GPU\u4f1a\u66f4\u504f\u5411\u8dd1\u5e76\u884c\u7684\u3002</li> <li>distinguish between Programming Model and Executing Model\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/class/L5/#cuda","title":"CUDA\u67b6\u6784\u4ee5\u53ca\u57fa\u7840\u77e5\u8bc6","text":"<p>\u82f1\u4f1f\u8fbe\u6709\u81ea\u5df1\u7684GPU\u67b6\u6784\u4ee5\u53ca\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p></p> <p></p> <p>\u4ee5\u4e0a\u4e24\u4e2a\u56fe\u7247\u89e3\u91ca\u4e86GPU\u7684\u7ed3\u6784\u8bbe\u8ba1\u3002\uff08Global Memory and shared memory\uff09\uff08Kernel\u3001 threads\u3001 block\u3001 grid \u3001 warp\u7b49\u6982\u5ff5\u8981\u6e05\u6670\uff09</p> <p></p> <p>SM is a division of a block created within the sm to assign the work.</p> <p></p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u793a\u4f8b\u7684GPU\u5411\u91cf\u8ba1\u7b97\u7684\u4f8b\u5b50\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u3002\uff08\u5c24\u5176\u662f\u4ece\u67b6\u6784\u7684\u89d2\u5ea6\u51fa\u53d1\u7406\u89e3\u7b97\u6cd5\u8bbe\u8ba1\u5c24\u5176\u662f\u201c\u6d41\u201d\u7684\u4f7f\u7528\u3002\uff09</p> <p></p> <p>\u4e00\u4e9b\u7f16\u7a0b\u5efa\u8bae\u5982\u4e0b\uff1a</p> <p></p> <p>\u9605\u8bfb\u5b8c\u4ee5\u4e0a\u57fa\u672c\u5185\u5bb9\uff0c\u6b64\u540e\u4fbf\u5f00\u59cbCUDA\u8bed\u6cd5\u7684\u4ecb\u7ecd\u4e86\uff01\uff01\uff01</p>"},{"location":"ZJU_CS/HPC/class/L5/#gpu","title":"GPU \u51fd\u6570\u7684\u7528\u6cd5\u4ee5\u53ca\u540c\u6b65","text":"<pre><code>//'__global__' before GPU function\nvoid CPUFunction()\n{\n  printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction()\n{\n  printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main()\n{\n  CPUFunction();\n\n  GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;(); // &lt;&lt;&lt;m,n&gt;&gt;&gt; m is the number of blocks,n is the num of threads in one block\n  cudaDeviceSynchronize(); //\u540c\u6b65\n}\n</code></pre> <pre><code>//CUDA \u6838\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u80fd\u591f\u8bc6\u522b\u5982\u4e0b\u4e24\u79cd\u7d22\u5f15\u7684\u7279\u6b8a\u53d8\u91cf\uff1a\u6b63\u5728\u6267\u884c\u6838\u51fd\u6570\u7684\u7ebf\u7a0b\uff08\u4f4d\u4e8e\u7ebf\u7a0b\u5757\u5185\uff09\u7d22\u5f15\u548c\u7ebf\u7a0b\u6240\u5728\u7684\u7ebf\u7a0b\u5757\uff08\u4f4d\u4e8e\u7f51\u683c\u5185\uff09\u7d22\u5f15\u3002\u8fd9\u4e24\u79cd\u53d8\u91cf\u5206\u522b\u4e3a threadIdx.x \u548c blockIdx.x\n\n// Note the address of `a` is passed as first argument.\ncudaMallocManaged(&amp;a, size);\n// Use `a` on the CPU and/or on any GPU in the accelerated system.\ncudaFree(a);\n</code></pre> <pre><code>//\u5904\u7406\u5757\u914d\u5236\u4e0e\u6240\u9700\u7ebf\u7a0b\u6570\u4e0d\u5339\u914d\n// Assume `N` is known\nint N = 100000;\n\n// Assume we have a desire to set `threads_per_block` exactly to `256`\nsize_t threads_per_block = 256;\n\n// Ensure there are at least `N` threads in the grid, but only 1 block's worth extra\nsize_t number_of_blocks = (N + threads_per_block - 1) / threads_per_block;\n\nsome_kernel&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;(N);\n</code></pre> <pre><code>//CUDA \u63d0\u4f9b\u4e00\u4e2a\u53ef\u7ed9\u51fa\u7f51\u683c\u4e2d\u7ebf\u7a0b\u5757\u6570\u7684\u7279\u6b8a\u53d8\u91cf\uff1agridDim.x\u3002\u7136\u540e\u8ba1\u7b97\u7f51\u683c\u4e2d\u7684\u603b\u7ebf\u7a0b\u6570\uff0c\u5373\u7f51\u683c\u4e2d\u7684\u7ebf\u7a0b\u5757\u6570\u4e58\u4ee5\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u6570\uff1agridDim.x * blockDim.x\u3002\u5e26\u7740\u8fd9\u6837\u7684\u60f3\u6cd5\u6765\u770b\u770b\u4ee5\u4e0b\u6838\u51fd\u6570\u4e2d\u7f51\u683c\u8de8\u5ea6\u5faa\u73af\u7684\u8be6\u7ec6\u793a\u4f8b\uff1a\n\n__global void kernel(int *a, int N)\n{\n  int indexWithinTheGrid = threadIdx.x + blockIdx.x * blockDim.x;\n  int gridStride = gridDim.x * blockDim.x;\n\n  for (int i = indexWithinTheGrid; i &lt; N; i += gridStride)\n  {\n    // do work on a[i];\n  }\n}\n</code></pre> <pre><code>\u9519\u8bef\u5904\u7406\n\u4e0e\u5728\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e00\u6837\uff0c\u52a0\u901f CUDA \u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u5904\u7406\u540c\u6837\u81f3\u5173\u91cd\u8981\u3002\u5373\u4fbf\u4e0d\u662f\u5927\u591a\u6570\uff0c\u4e5f\u6709\u8bb8\u591a CUDA \u51fd\u6570\uff08\u4f8b\u5982\uff0c\u5185\u5b58\u7ba1\u7406\u51fd\u6570\uff09\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\uff0c\u8be5\u503c\u53ef\u7528\u4e8e\u68c0\u67e5\u8c03\u7528\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\u3002\u4ee5\u4e0b\u662f\u5bf9\u8c03\u7528 cudaMallocManaged \u51fd\u6570\u6267\u884c\u9519\u8bef\u5904\u7406\u7684\u793a\u4f8b\uff1a\n\ncudaError_t err;\nerr = cudaMallocManaged(&amp;a, N)                    // Assume the existence of `a` and `N`.\n\nif (err != cudaSuccess)                           // `cudaSuccess` is provided by CUDA.\n{\n  printf(\"Error: %s\\n\", cudaGetErrorString(err)); // `cudaGetErrorString` is provided by CUDA.\n}\n\u542f\u52a8\u5b9a\u4e49\u4e3a\u8fd4\u56de void \u7684\u6838\u51fd\u6570\u540e\uff0c\u5c06\u4e0d\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\u3002\u4e3a\u68c0\u67e5\u542f\u52a8\u6838\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5982\u679c\u542f\u52a8\u914d\u7f6e\u9519\u8bef\uff09\uff0cCUDA \u63d0\u4f9b cudaGetLastError \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\u3002\n\n/*\n * This launch should cause an error, but the kernel itself\n * cannot return it.\n */\n\nsomeKernel&lt;&lt;&lt;1, -1&gt;&gt;&gt;();  // -1 is not a valid number of threads.\n\ncudaError_t err;\nerr = cudaGetLastError(); // `cudaGetLastError` will return the error from above.\nif (err != cudaSuccess)\n{\n  printf(\"Error: %s\\n\", cudaGetErrorString(err));\n}\n\u6700\u540e\uff0c\u4e3a\u6355\u6349\u5f02\u6b65\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5728\u5f02\u6b65\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff09\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u540e\u7eed\u540c\u6b65 CUDA \u8fd0\u884c\u65f6 API \u8c03\u7528\u6240\u8fd4\u56de\u7684\u72b6\u6001\uff08\u4f8b\u5982 cudaDeviceSynchronize\uff09\uff1b\u5982\u679c\u4e4b\u524d\u542f\u52a8\u7684\u5176\u4e2d\u4e00\u4e2a\u6838\u51fd\u6570\u5931\u8d25\uff0c\u5219\u5c06\u8fd4\u56de\u9519\u8bef\u3002\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#debugging","title":"Debugging","text":"<pre><code>inline cudaError_t checkCuda(cudaError_t result)\n{\n  if (result != cudaSuccess) {\n    fprintf(stderr, \"CUDA Runtime Error: %s\\n\", cudaGetErrorString(result));\n    assert(result == cudaSuccess);\n  }\n  return result;\n}\n</code></pre> <pre><code>const int a = 2&lt;&lt;20; // \u5de6\u79fb20\u4f4d\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#nsys","title":"\u4f7f\u7528nsys\u6027\u80fd\u5206\u6790\u5668\u5e2e\u52a9\u5e94\u7528\u7a0b\u5e8f\u8fed\u4ee3\u5730\u8fdb\u884c\u4f18\u5316","text":"<p>\u5982\u8981\u786e\u4fdd\u4f18\u5316\u52a0\u901f\u4ee3\u7801\u5e93\u7684\u5c1d\u8bd5\u771f\u6b63\u53d6\u5f97\u6210\u529f\uff0c\u552f\u4e00\u65b9\u6cd5\u4fbf\u662f\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u4ee5\u83b7\u53d6\u6709\u5173\u5176\u6027\u80fd\u7684\u5b9a\u91cf\u4fe1\u606f\u3002<code>nsys</code> \u662f\u6307 NVIDIA \u7684Nsight System\u547d\u4ee4\u884c\u5206\u6790\u5668\u3002\u8be5\u5206\u6790\u5668\u9644\u5e26\u4e8eCUDA\u5de5\u5177\u5305\u4e2d\uff0c\u63d0\u4f9b\u5206\u6790\u88ab\u52a0\u901f\u7684\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u5f3a\u5927\u529f\u80fd\u3002</p> <p><code>nsys</code> \u4f7f\u7528\u8d77\u6765\u5341\u5206\u7b80\u5355\uff0c\u6700\u57fa\u672c\u7528\u6cd5\u662f\u5411\u5176\u4f20\u9012\u4f7f\u7528 <code>nvcc</code> \u7f16\u8bd1\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\u3002\u968f\u540e <code>nsys</code> \u4f1a\u7ee7\u7eed\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5728\u6b64\u4e4b\u540e\u6253\u5370\u5e94\u7528\u7a0b\u5e8f GPU \u6d3b\u52a8\u7684\u6458\u8981\u8f93\u51fa\u3001CUDA API \u8c03\u7528\u4ee5\u53ca\u7edf\u4e00\u5185\u5b58\u6d3b\u52a8\u7684\u76f8\u5173\u4fe1\u606f\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u5728\u672c\u5b9e\u9a8c\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u4e3b\u9898\u3002</p> <p>\u5728\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u6216\u4f18\u5316\u5df2\u7ecf\u52a0\u901f\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u91c7\u7528\u79d1\u5b66\u7684\u8fed\u4ee3\u65b9\u6cd5\u3002\u4f5c\u51fa\u66f4\u6539\u540e\u9700\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u3001\u505a\u597d\u8bb0\u5f55\u5e76\u8bb0\u5f55\u4efb\u4f55\u91cd\u6784\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u4f55\u79cd\u5f71\u54cd\u3002\u5c3d\u65e9\u4e14\u7ecf\u5e38\u8fdb\u884c\u6b64\u7c7b\u89c2\u5bdf\u901a\u5e38\u4f1a\u8ba9\u60a8\u8f7b\u677e\u83b7\u5f97\u8db3\u591f\u7684\u6027\u80fd\u63d0\u5347\uff0c\u4ee5\u52a9\u60a8\u53d1\u5e03\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u5916\uff0c\u7ecf\u5e38\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u60a8\u4e86\u89e3\u5230\u5bf9 CUDA \u4ee3\u7801\u5e93\u4f5c\u51fa\u7684\u7279\u5b9a\u66f4\u6539\u4f1a\u5bf9\u5176\u5b9e\u9645\u6027\u80fd\u9020\u6210\u4f55\u79cd\u5f71\u54cd\uff1a\u800c\u5f53\u53ea\u5728\u4ee3\u7801\u5e93\u4e2d\u8fdb\u884c\u591a\u79cd\u66f4\u6539\u540e\u518d\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5c06\u5f88\u96be\u5f97\u77e5\u8fd9\u4e00\u70b9\u3002</p> <p><code>nsys profile</code>\u5c06\u751f\u6210\u4e00\u4e2a<code>qdrep</code>\u62a5\u544a\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4ee5\u591a\u79cd\u65b9\u5f0f\u4f7f\u7528\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528<code>--stats = true</code>\u6807\u5fd7\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6253\u5370\u8f93\u51fa\u6458\u8981\u7edf\u8ba1\u4fe1\u606f\u3002 \u8f93\u51fa\u7684\u4fe1\u606f\u6709\u5f88\u591a.</p> <pre><code>!nsys profile --stats=true ./single-thread-vector-add\n</code></pre> <p>\u53ef\u4ee5\u5411<code>nsys profile</code>\u63d0\u4f9b<code>-f</code>\u6807\u5fd7\u4ee5\u5141\u8bb8\u8986\u76d6\u73b0\u6709\u7684\u62a5\u544a\u6587\u4ef6</p>"},{"location":"ZJU_CS/HPC/class/L5/#streaming-multiprocessorsgpu","title":"\u6d41\u591a\u5904\u7406\u5668\uff08Streaming Multiprocessors\uff09\u53ca\u67e5\u8be2GPU\u7684\u8bbe\u5907\u914d\u7f6e","text":"<p>\u672c\u8282\u5c06\u63a2\u8ba8\u4e86\u89e3 GPU \u786c\u4ef6\u7684\u7279\u5b9a\u529f\u80fd\uff0c\u4ee5\u8fdb\u4e00\u6b65\u4fc3\u8fdb\u4f18\u5316\u3002\u5b66\u4e60\u5b8c\u6d41\u591a\u5904\u7406\u5668\u540e\uff0c\u60a8\u5c06\u5c1d\u8bd5\u8fdb\u4e00\u6b65\u4f18\u5316\u81ea\u5df1\u4e00\u76f4\u6267\u884c\u7684\u52a0\u901f\u5411\u91cf\u52a0\u6cd5\u7a0b\u5e8f\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n  /*\n   * Device ID is required first to query the device.\n   */\n\n  int deviceId;\n  cudaGetDevice(&amp;deviceId);\n\n  cudaDeviceProp props;\n  cudaGetDeviceProperties(&amp;props, deviceId);\n\n  /*\n   * `props` now contains several properties about the current device.\n   */\n\n  int computeCapabilityMajor = props.major;\n  int computeCapabilityMinor = props.minor;\n  int multiProcessorCount = props.multiProcessorCount;\n  int warpSize = props.warpSize;\n\n\n  printf(\"Device ID: %d\\nNumber of SMs: %d\\nCompute Capability Major: %d\\nCompute Capability Minor: %d\\nWarp Size: %d\\n\", deviceId, multiProcessorCount, computeCapabilityMajor, computeCapabilityMinor, warpSize);\n}\n\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#_1","title":"\u83b7\u5f97\u7edf\u4e00\u5185\u5b58\u7684\u7ec6\u8282","text":"<p>\u60a8\u4e00\u76f4\u4f7f\u7528 <code>cudaMallocManaged</code> \u5206\u914d\u65e8\u5728\u4f9b\u4e3b\u673a\u6216\u8bbe\u5907\u4ee3\u7801\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5e76\u4e14\u73b0\u5728\u4ecd\u5728\u4eab\u53d7\u8fd9\u79cd\u65b9\u6cd5\u7684\u4fbf\u5229\u4e4b\u5904\uff0c\u5373\u5728\u5b9e\u73b0\u81ea\u52a8\u5185\u5b58\u8fc1\u79fb\u4e14\u7b80\u5316\u7f16\u7a0b\u7684\u540c\u65f6\uff0c\u800c\u65e0\u9700\u6df1\u5165\u4e86\u89e3 <code>cudaMallocManaged</code> \u6240\u5206\u914d\u7edf\u4e00\u5185\u5b58 (UM) \u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\u3002<code>nsys profile</code> \u63d0\u4f9b\u6709\u5173\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u4e2d UM \u7ba1\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5728\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u7684\u540c\u65f6\u7ed3\u5408\u5bf9 UM \u5de5\u4f5c\u539f\u7406\u7684\u66f4\u6df1\u5165\u7406\u89e3\uff0c\u8fdb\u800c\u4e3a\u4f18\u5316\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u521b\u9020\u66f4\u591a\u673a\u4f1a\u3002</p>"},{"location":"ZJU_CS/HPC/class/L5/#um","title":"\u7edf\u4e00\u5185\u5b58(UM)\u7684\u8fc1\u79fb","text":"<p>\u5206\u914d UM \u65f6\uff0c\u5185\u5b58\u5c1a\u672a\u9a7b\u7559\u5728\u4e3b\u673a\u6216\u8bbe\u5907\u4e0a\u3002\u4e3b\u673a\u6216\u8bbe\u5907\u5c1d\u8bd5\u8bbf\u95ee\u5185\u5b58\u65f6\u4f1a\u53d1\u751f \u9875\u9519\u8bef\uff0c\u6b64\u65f6\u4e3b\u673a\u6216\u8bbe\u5907\u4f1a\u6279\u91cf\u8fc1\u79fb\u6240\u9700\u7684\u6570\u636e\u3002\u540c\u7406\uff0c\u5f53 CPU \u6216\u52a0\u901f\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 GPU \u5c1d\u8bd5\u8bbf\u95ee\u5c1a\u672a\u9a7b\u7559\u5728\u5176\u4e0a\u7684\u5185\u5b58\u65f6\uff0c\u4f1a\u53d1\u751f\u9875\u9519\u8bef\u5e76\u89e6\u53d1\u8fc1\u79fb\u3002</p> <p>\u80fd\u591f\u6267\u884c\u9875\u9519\u8bef\u5e76\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u5bf9\u4e8e\u5728\u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7b80\u5316\u5f00\u53d1\u6d41\u7a0b\u5927\u6709\u52a9\u76ca\u3002\u6b64\u5916\uff0c\u5728\u5904\u7406\u5c55\u793a\u7a00\u758f\u8bbf\u95ee\u6a21\u5f0f\u7684\u6570\u636e\u65f6\uff08\u4f8b\u5982\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u8fd0\u884c\u4e4b\u524d\u65e0\u6cd5\u5f97\u77e5\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u65f6\uff09\uff0c\u4ee5\u53ca\u5728\u5177\u6709\u591a\u4e2a GPU \u7684\u52a0\u901f\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u53ef\u80fd\u7531\u591a\u4e2a GPU \u8bbe\u5907\u8bbf\u95ee\u65f6\uff0c\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u5c06\u4f1a\u5e26\u6765\u663e\u8457\u4f18\u52bf\u3002</p> <p>\u6709\u4e9b\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\uff0c\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u9700\u8981\u5f97\u77e5\u6570\u636e\uff0c\u4ee5\u53ca\u9700\u8981\u5927\u91cf\u8fde\u7eed\u7684\u5185\u5b58\u5757\u65f6\uff09\uff0c\u6211\u4eec\u8fd8\u80fd\u6709\u6548\u89c4\u907f\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002</p> <p>\u672c\u5b9e\u9a8c\u7684\u540e\u7eed\u5185\u5bb9\u5c06\u4fa7\u91cd\u4e8e\u5bf9\u6309\u9700\u8fc1\u79fb\u7684\u7406\u89e3\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u5206\u6790\u5668\u8f93\u51fa\u4e2d\u8bc6\u522b\u6309\u9700\u8fc1\u79fb\u3002\u8fd9\u4e9b\u77e5\u8bc6\u53ef\u8ba9\u60a8\u5728\u4eab\u53d7\u6309\u9700\u8fc1\u79fb\u4f18\u52bf\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u5176\u4ea7\u751f\u7684\u5f00\u9500\u3002</p>"},{"location":"ZJU_CS/HPC/class/L5/#_2","title":"\u5f02\u6b65\u5185\u5b58\u9884\u53d6","text":"<p>\u5728\u4e3b\u673a\u5230\u8bbe\u5907\u548c\u8bbe\u5907\u5230\u4e3b\u673a\u7684\u5185\u5b58\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u6280\u672f\u6765\u51cf\u5c11\u9875\u9519\u8bef\u548c\u6309\u9700\u5185\u5b58\u8fc1\u79fb\u6210\u672c\uff0c\u6b64\u5f3a\u5927\u6280\u672f\u79f0\u4e3a\u5f02\u6b65\u5185\u5b58\u9884\u53d6\u3002\u901a\u8fc7\u6b64\u6280\u672f\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4f7f\u7528\u7edf\u4e00\u5185\u5b58 (UM) \u4e4b\u524d\uff0c\u5728\u540e\u53f0\u5c06\u5176\u5f02\u6b65\u8fc1\u79fb\u81f3\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 CPU \u6216 GPU \u8bbe\u5907\u3002\u6b64\u4e3e\u53ef\u4ee5\u51cf\u5c11\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u5e26\u6765\u7684\u6210\u672c\uff0c\u5e76\u8fdb\u800c\u63d0\u9ad8 GPU \u6838\u51fd\u6570\u548c CPU \u51fd\u6570\u7684\u6027\u80fd\u3002</p> <p>\u6b64\u5916\uff0c\u9884\u53d6\u5f80\u5f80\u4f1a\u4ee5\u66f4\u5927\u7684\u6570\u636e\u5757\u6765\u8fc1\u79fb\u6570\u636e\uff0c\u56e0\u6b64\u5176\u8fc1\u79fb\u6b21\u6570\u8981\u4f4e\u4e8e\u6309\u9700\u8fc1\u79fb\u3002\u6b64\u6280\u672f\u975e\u5e38\u9002\u7528\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff1a\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u5df2\u77e5\u6570\u636e\u8bbf\u95ee\u9700\u6c42\u4e14\u6570\u636e\u8bbf\u95ee\u5e76\u672a\u91c7\u7528\u7a00\u758f\u6a21\u5f0f\u3002</p> <p>CUDA \u53ef\u901a\u8fc7 <code>cudaMemPrefetchAsync</code> \u51fd\u6570\uff0c\u8f7b\u677e\u5c06\u6258\u7ba1\u5185\u5b58\u5f02\u6b65\u9884\u53d6\u5230 GPU \u8bbe\u5907\u6216 CPU\u3002\u4ee5\u4e0b\u6240\u793a\u4e3a\u5982\u4f55\u4f7f\u7528\u8be5\u51fd\u6570\u5c06\u6570\u636e\u9884\u53d6\u5230\u5f53\u524d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u8bbe\u5907\uff0c\u7136\u540e\u518d\u9884\u53d6\u5230 CPU\uff1a</p> <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);                                         // The ID of the currently active GPU device.\n\ncudaMemPrefetchAsync(pointerToSomeUMData, size, deviceId);        // Prefetch to GPU device.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, cudaCpuDeviceId); // Prefetch to host. `cudaCpuDeviceId` is a\n                                                                  // built-in CUDA variable.\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L5/#_3","title":"\u624b\u52a8\u5185\u5b58\u5206\u914d\u548c\u590d\u5236","text":"<p>\u5c3d\u7ba1 <code>cudaMallocManaged</code> \u548c <code>cudaMemPrefetchAsync</code> \u51fd\u6570\u6027\u80fd\u51fa\u4f17\u5e76\u80fd\u5927\u5e45\u7b80\u5316\u5185\u5b58\u8fc1\u79fb\uff0c\u4f46\u6709\u65f6\u4e5f\u6709\u5fc5\u8981\u4f7f\u7528\u66f4\u591a\u624b\u52a8\u5185\u5b58\u5206\u914d\u65b9\u6cd5\u3002\u8fd9\u5728\u5df2\u77e5\u53ea\u9700\u5728\u8bbe\u5907\u6216\u4e3b\u673a\u4e0a\u8bbf\u95ee\u6570\u636e\u65f6\u5c24\u5176\u5982\u6b64\uff0c\u5e76\u4e14\u56e0\u514d\u4e8e\u8fdb\u884c\u81ea\u52a8\u6309\u9700\u8fc1\u79fb\u800c\u80fd\u591f\u6536\u56de\u6570\u636e\u8fc1\u79fb\u6210\u672c\u3002</p> <p>\u6b64\u5916\uff0c\u901a\u8fc7\u624b\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u975e\u9ed8\u8ba4\u6d41\u540c\u65f6\u5f00\u5c55\u6570\u636e\u4f20\u8f93\u4e0e\u8ba1\u7b97\u5de5\u4f5c\u3002\u5728\u672c\u8282\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u4e00\u4e9b\u57fa\u672c\u7684\u624b\u52a8\u5185\u5b58\u5206\u914d\u548c\u62f7\u8d1d\u6280\u672f\uff0c\u4e4b\u540e\u4f1a\u5ef6\u4f38\u5e94\u7528\u8fd9\u4e9b\u6280\u672f\u4ee5\u540c\u65f6\u5f00\u5c55\u6570\u636e\u62f7\u8d1d\u4e0e\u8ba1\u7b97\u5de5\u4f5c\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7528\u4e8e\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u7684 CUDA \u547d\u4ee4\uff1a</p> <ul> <li><code>cudaMalloc</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u5206\u914d\u5185\u5b58\u3002\u8fd9\u53ef\u9632\u6b62\u51fa\u73b0\u6240\u6709 GPU \u5206\u9875\u9519\u8bef\uff0c\u800c\u4ee3\u4ef7\u662f\u4e3b\u673a\u4ee3\u7801\u5c06\u65e0\u6cd5\u8bbf\u95ee\u8be5\u547d\u4ee4\u8fd4\u56de\u7684\u6307\u9488\u3002</li> <li><code>cudaMallocHost</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a CPU \u5206\u914d\u5185\u5b58\u3002\u8be5\u547d\u4ee4\u53ef\u201c\u56fa\u5b9a\u201d\u5185\u5b58(pinned memory)\u6216\u201c\u9875\u9501\u5b9a\u201d\u5185\u5b58(page-locked memory)\uff0c\u6b64\u4e3e\u5141\u8bb8\u5c06\u5185\u5b58\u5f02\u6b65\u62f7\u8d1d\u81f3 GPU \u6216\u4ece GPU \u5f02\u6b65\u62f7\u8d1d\u81f3\u5185\u5b58\u3002\u56fa\u5b9a\u5185\u5b58\u8fc7\u591a\u5219\u4f1a\u5e72\u6270 CPU \u6027\u80fd\uff0c\u56e0\u6b64\u8bf7\u52ff\u65e0\u7aef\u4f7f\u7528\u8be5\u547d\u4ee4\u3002\u91ca\u653e\u56fa\u5b9a\u5185\u5b58\u65f6\u5e94\u4f7f\u7528 <code>cudaFreeHost</code> \u547d\u4ee4\u3002</li> <li>\u65e0\u8bba\u662f\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\u8fd8\u662f\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\uff0c<code>cudaMemcpy</code> \u547d\u4ee4\u5747\u53ef\u62f7\u8d1d\uff08\u800c\u975e\u4f20\u8f93\uff09\u5185\u5b58\u3002</li> </ul>"},{"location":"ZJU_CS/HPC/class/L5/#_4","title":"\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u6bb5\u6f14\u793a\u4f7f\u7528\u4e0a\u8ff0 CUDA API \u8c03\u7528\u7684\u4ee3\u7801\u3002</p> <pre><code>int *host_a, *device_a;        // Define host-specific and device-specific arrays.\ncudaMalloc(&amp;device_a, size);   // `device_a` is immediately available on the GPU.\ncudaMallocHost(&amp;host_a, size); // `host_a` is immediately available on CPU, and is page-locked, or pinned.\n\ninitializeOnHost(host_a, N);   // No CPU page faulting since memory is already allocated on the host.\n\n// `cudaMemcpy` takes the destination, source, size, and a CUDA-provided variable for the direction of the copy.\ncudaMemcpy(device_a, host_a, size, cudaMemcpyHostToDevice);\n\nkernel&lt;&lt;&lt;blocks, threads, 0, someStream&gt;&gt;&gt;(device_a, N);\n\n// `cudaMemcpy` can also copy data from device to host.\ncudaMemcpy(host_a, device_a, size, cudaMemcpyDeviceToHost);\n\nverifyOnHost(host_a, N);\n\ncudaFree(device_a);\ncudaFreeHost(host_a);          // Free pinned memory like this.\n</code></pre> <p>\u9664\u4e86<code>cudaMemcpy</code>\u4e4b\u5916\uff0c\u8fd8\u6709<code>cudaMemcpyAsync</code>\uff0c\u53ea\u8981\u56fa\u5b9a\u4e86\u4e3b\u673a\u5185\u5b58\uff0c\u5b83\u5c31\u53ef\u4ee5\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\u5f02\u6b65\u590d\u5236\u5185\u5b58\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>cudaMallocHost</code>\u5206\u914d\u5b83\u6765\u5b8c\u6210\u3002</p> <p>\u4e0e\u6838\u51fd\u6570\u7684\u6267\u884c\u7c7b\u4f3c\uff0c<code>cudaMemcpyAsync</code>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ec5\u76f8\u5bf9\u4e8e\u4e3b\u673a\u662f\u5f02\u6b65\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5728\u9ed8\u8ba4\u6d41\u4e2d\u6267\u884c\uff0c\u56e0\u6b64\u5bf9\u4e8eGPU\u4e0a\u53d1\u751f\u7684\u5176\u4ed6CUDA\u64cd\u4f5c\u800c\u8a00\uff0c\u5b83\u662f\u963b\u585e\u64cd\u4f5c\u3002\u4f46\u662f\uff0c<code>cudaMemcpyAsync</code>\u51fd\u6570\u5c06\u975e\u9ed8\u8ba4\u6d41\u4f5c\u4e3a\u53ef\u9009\u7684\u7b2c5\u4e2a\u53c2\u6570\u3002\u901a\u8fc7\u5411\u5176\u4f20\u9012\u975e\u9ed8\u8ba4\u6d41\uff0c\u53ef\u4ee5\u5c06\u5185\u5b58\u4f20\u8f93\u4e0e\u5176\u4ed6\u975e\u9ed8\u8ba4\u6d41\u4e2d\u53d1\u751f\u7684\u5176\u4ed6CUDA\u64cd\u4f5c\u5e76\u53d1\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u4e14\u6709\u7528\u7684\u6a21\u5f0f\u662f\u7ed3\u5408\u4f7f\u7528\u56fa\u5b9a\u4e3b\u673a\u5185\u5b58\uff0c\u975e\u9ed8\u8ba4\u6d41\u4e2d\u7684\u5f02\u6b65\u5185\u5b58\u526f\u672c\u548c\u975e\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u6267\u884c\uff0c\u4ee5\u4f7f\u5185\u5b58\u4f20\u8f93\u4e0e\u6838\u51fd\u6570\u7684\u6267\u884c\u91cd\u53e0\u3002</p> <p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5e76\u975e\u5728\u7b49\u5f85\u6574\u4e2a\u5185\u5b58\u62f7\u8d1d\u5b8c\u6210\u4e4b\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u6838\u51fd\u6570\uff0c\u800c\u662f\u62f7\u8d1d\u5e76\u5904\u7406\u6240\u9700\u7684\u6570\u636e\u6bb5\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u62f7\u8d1d/\u5904\u7406\u4e2d\u7684\u6570\u636e\u6bb5\u5747\u5728\u5404\u81ea\u7684\u975e\u9ed8\u8ba4\u6d41\u4e2d\u8fd0\u884c\u3002\u901a\u8fc7\u4f7f\u7528\u6b64\u6280\u672f\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\u90e8\u5206\u6570\u636e\uff0c\u540c\u65f6\u4e3a\u540e\u7eed\u6bb5\u5e76\u53d1\u6267\u884c\u5185\u5b58\u4f20\u8f93\u3002\u4f7f\u7528\u6b64\u6280\u672f\u8ba1\u7b97\u64cd\u4f5c\u6b21\u6570\u7684\u6570\u636e\u6bb5\u7279\u5b9a\u503c\u548c\u6570\u7ec4\u5185\u7684\u504f\u79fb\u4f4d\u7f6e\u65f6\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>int N = 2&lt;&lt;24;\nint size = N * sizeof(int);\n\nint *host_array;\nint *device_array;\n\ncudaMallocHost(&amp;host_array, size);               // Pinned host memory allocation.\ncudaMalloc(&amp;device_array, size);                 // Allocation directly on the active GPU device.\n\ninitializeData(host_array, N);                   // Assume this application needs to initialize on the host.\n\nconst int numberOfSegments = 4;                  // This example demonstrates slicing the work into 4 segments.\nint segmentN = N / numberOfSegments;             // A value for a segment's worth of `N` is needed.\nsize_t segmentSize = size / numberOfSegments;    // A value for a segment's worth of `size` is needed.\n\n// For each of the 4 segments...\nfor (int i = 0; i &lt; numberOfSegments; ++i)\n{\n  // Calculate the index where this particular segment should operate within the larger arrays.\n  segmentOffset = i * segmentN;\n\n  // Create a stream for this segment's worth of copy and work.\n  cudaStream_t stream;\n  cudaStreamCreate(&amp;stream);\n\n  // Asynchronously copy segment's worth of pinned host memory to device over non-default stream.\n  cudaMemcpyAsync(&amp;device_array[segmentOffset],  // Take care to access correct location in array.\n                  &amp;host_array[segmentOffset],    // Take care to access correct location in array.\n                  segmentSize,                   // Only copy a segment's worth of memory.\n                  cudaMemcpyHostToDevice,\n                  stream);                       // Provide optional argument for non-default stream.\n\n  // Execute segment's worth of work over same non-default stream as memory copy.\n  kernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;(&amp;device_array[segmentOffset], segmentN);\n\n  // `cudaStreamDestroy` will return immediately (is non-blocking), but will not actually destroy stream until\n  // all stream operations are complete.\n  cudaStreamDestroy(stream);\n}\n</code></pre>"},{"location":"ZJU_CS/HPC/class/L6/","title":"7\u670810\u65e5 OpenMP","text":""},{"location":"ZJU_CS/HPC/class/L7/","title":"7\u670811\u53f7 \u673a\u5668\u5b66\u4e60\uff08Machine Learning)","text":""},{"location":"ZJU_CS/HPC/class/L7/#why-ml-in-an-hpc-course","title":"Why ML in an HPC course?","text":"<ul> <li>ML(especially DL) is a special serious of application requiring large computing power.</li> <li>ML can be used to guide system optimization</li> <li>Emerging research topic : MLsys()</li> </ul>"},{"location":"ZJU_CS/HPC/class/L7/#preview","title":"Preview","text":"<ul> <li> <p>Introduction</p> </li> <li> <p>Basic of Machine Learning</p> </li> <li> <p>Typical Network Architectures</p> </li> </ul> <p>CNN</p> <p>Attention</p> <ul> <li>DL Hardware &amp; Software</li> <li>MLSys</li> </ul>"},{"location":"ZJU_CS/HPC/class/L7/#ml","title":"ML","text":"<ol> <li>Machine Learning Problems(classification / Regression / Clustering / Dimensionality reduction)</li> <li>Learning method((un)Supervised learning / transfer learning / reinforcement learning)</li> <li>Gradient Descent, and learning rate (just like \u6b65\u957f) (Stochastic\u968f\u673a)</li> <li>About fit.</li> </ol>"},{"location":"ZJU_CS/HPC/class/L7/#dl","title":"DL","text":"<ol> <li> <p>Multilayer Perceptions(Input \\ Hidden \\ Output)</p> </li> <li> <p>Forward / Back Propagation(follow chain rules)</p> </li> </ol> <p></p> <p>Preview</p> <ol> <li> <p>Layers(Activation Function \\ Loss Function \\ Regularization \\ Dropout \\ Normalization)</p> </li> <li> <p>Optimizers</p> </li> <li> <p>Problems in DL(Gradient Vanishment \\ Overfitting \\ Fitting Non\u2010linear Functions )</p> </li> </ol> <ol> <li>Activation Function(sigmoid(\u5bb9\u6613\u68af\u5ea6\u6d88\u5931) / tanh / Rectified Linear Unit\uff08\u53ef\u907f\u514d\u68af\u5ea6\u6d88\u5931\uff09 )</li> </ol> <p></p> <p></p> <ol> <li>Loss Function(\u2022Cross Entropy / Mean Square Error)</li> <li>Regularization(\u6b63\u5219\u5316)</li> <li> <p>Dropout</p> </li> <li> <p>Batch Normalization(skip math)</p> </li> <li>Optimizer(link)</li> </ol> <p>SGD; SGD + Momentum; AdaGrad; Adam</p>"},{"location":"ZJU_CS/HPC/class/L7/#cnn","title":"CNN","text":"<p>\u5b66\u957f\u8bb2\u4e86\u4e0d\u5c11\uff0c\u4f46\u662f\u4e0d\u592a\u60f3\u8bb0\u4e86\u3002\u4e3b\u8981\u542c\u542c\u5c31\u597d</p>"},{"location":"ZJU_CS/HPC/class/L8/","title":"\u9ad8\u6027\u80fd\u8ba1\u7b97\u9ad8\u7ea7\u8bdd\u672f","text":"<ul> <li>\u9ad8\u6027\u80fd\u8ba1\u7b97\u9ad8\u7ea7\u8bdd\u672f<ul> <li>CPU GPU FPGA</li> <li>\u670d\u52a1\u5668</li> <li>RC4ML\u5b9e\u9a8c\u5ba4\u7684\u7cfb\u7edf\u7814\u7a76</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/class/L8/#cpu-gpu-fpga","title":"CPU GPU FPGA","text":"<ol> <li>CPU\u7ecf\u5178\u4e94\u7ea7\u6d41\u6c34</li> <li>CPU\uff1a\u8d85\u6807\u91cfSuperscalar\uff08CISC\u6307\u4ee4\u5185\u90e8RISC\u5316\u3001\u6307\u4ee4\u591a\u5e76\u53d1\uff09</li> </ol>"},{"location":"ZJU_CS/HPC/class/L8/#_2","title":"\u670d\u52a1\u5668","text":"<ol> <li>1U\u30012U\u30014U\u6839\u636e\u5927\u5c0f\u5224\u65ad\u30024U\u4e00\u822c\u80fd\u653e2\u4e2acpu8\u4e2aGPU\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/class/L8/#rc4ml","title":"RC4ML\u5b9e\u9a8c\u5ba4\u7684\u7cfb\u7edf\u7814\u7a76","text":""},{"location":"ZJU_CS/HPC/homework/lab1/","title":"Lab-1","text":"<ul> <li>Lab-1<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)<ul> <li>\u96c6\u7fa4</li> <li>Linux\u547d\u4ee4</li> <li>HPL</li> <li>UFW</li> <li>BLAS</li> <li>MPI</li> <li>SSH</li> <li>Makefile</li> <li>\u5185\u7f51 IP</li> </ul> </li> <li>Lab Design &amp; Test Result<ul> <li>\u865a\u62df\u673a</li> <li>HPL\u73af\u5883\u642d\u5efa<ul> <li>\u865a\u62df\u673a\u73af\u5883\u914d\u5236</li> <li>Openmpi\u5b89\u88c5</li> <li>OpenBLAS\u5b89\u88c5</li> </ul> </li> <li>HPL\u7684\u5b89\u88c5\u4ee5\u53ca\u73af\u5883\u914d\u5236</li> <li>\u514b\u9686\u8282\u70b9</li> <li>\u6d4b\u8bd5\u96c6\u7fa4<ul> <li>ping\u901a</li> <li>\u914d\u5236SSH</li> <li>mpirun\u5c1d\u8bd5</li> </ul> </li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab1/#lab-description","title":"Lab Description","text":"<p>ps\uff1a\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u6d59\u6c5f\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u8ba1\u7b97\u4e13\u4e1a\u5927\u4e00\uff082023\uff09\u77ed\u5b66\u671f\u2014\u2014\u8d85\u7b97\u8bfe\u7a0b\u7684\u5b9e\u9a8c\uff0c\u8be6\u60c5\u8bf7\u70b9\u51fb\u6b64\u5904</p> <p>\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u4f7f\u7528\u56db\u53f0\u865a\u62df\u673a\u642d\u5efa\u4e00\u4e2a\u7b80\u6613\u7684\u96c6\u7fa4\uff0c\u5e76\u5bf9\u8be5\u96c6\u7fa4\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u6700\u540e\u63d0\u4ea4\u6d4b\u8bd5\u7ed3\u679c\u548c\u5b9e\u9a8c\u62a5\u544a\u3002</p> <p>\u96c6\u7fa4\u642d\u5efa\u7684\u4efb\u52a1\u5305\u62ec\u521b\u5efa\u865a\u62df\u673a\u3001\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3001\u914d\u7f6e\u7f51\u7edc\u548c ssh \u901a\u4fe1\u3002</p> <p>\u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7\u4f7f\u7528 OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e0b\u8f7d\u5e76\u7f16\u8bd1 OpenMPI\u3001BLAS \u548c HPL \u7684\u6e90\u4ee3\u7801\uff0c\u5176\u4e2d OpenMPI\u3001BLAS\u662f HPL \u7684\u4f9d\u8d56\u9879\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<p>(ps:\u82e5\u4e0d\u60f3\u770b\u53ef\u8df3\u8fc7\uff0c\u540e\u9762\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u770b\u4e0d\u61c2\u4e86\u53ef\u4ee5\u518d\u6765\u5b66\u4e60)</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_1","title":"\u96c6\u7fa4","text":"<p>\u8ba1\u7b97\u673a\u96c6\u7fa4\uff08\u82f1\u8bed\uff1acomputer cluster\uff09\u662f\u4e00\u7ec4\u677e\u6563\u6216\u7d27\u5bc6\u8fde\u63a5\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\u8ba1\u7b97\u673a\u3002\u7531\u4e8e\u8fd9\u4e9b\u8ba1\u7b97\u673a\u534f\u540c\u5de5\u4f5c\uff08\u5e76\u884c\u8ba1\u7b97\uff09\uff0c\u5728\u8bb8\u591a\u65b9\u9762\u5b83\u4eec\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5355\u4e2a\u7cfb\u7edf\u3002\u4e0e\u7f51\u683c\u8ba1\u7b97\u673a\u4e0d\u540c\uff0c\u8ba1\u7b97\u673a\u96c6\u7fa4\u5c06\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u4e3a\u6267\u884c\u76f8\u540c\u7684\u4efb\u52a1\uff0c\u7531\u8f6f\u4ef6\u63a7\u5236\u548c\u8c03\u5ea6\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#linux","title":"Linux\u547d\u4ee4","text":"<p>\u8fd9\u4e2a\u611f\u89c9\u7f51\u4e0a\u90fd\u4f1a\u6709\u5f88\u591a\u6559\u7a0b\uff0c\u53ef\u4ee5\u81ea\u5df1\u719f\u6089\u4e00\u4e0b\u5c31\u80fd\u5b66\u4f1a\u3002 \uff08Tips\uff1aman\u5f88\u591a\u65f6\u5019\u662f\u4e2a\u597d\u4e1c\u897f\uff09</p> <pre><code>cd ls clear mkdir rmdir \u2026\u2026\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl","title":"HPL","text":"<p>HPL\uff08The High-Performance Linpack Benchmark\uff09\u662f\u6d4b\u8bd5\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u7cfb\u7edf\u6d6e\u70b9\u6027\u80fd\u7684\u57fa\u51c6\u7a0b\u5e8f\u3002HPL\u901a\u8fc7\u5bf9\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u91c7\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u6c42\u89e3\u4e00\u5143N\u6b21\u7a20\u5bc6\u7ebf\u6027\u4ee3\u6570\u65b9\u7a0b\u7ec4\u7684\u6d4b\u8bd5\uff0c\u8bc4\u4ef7\u9ad8\u6027\u80fd\u8ba1\u7b97\u96c6\u7fa4\u7684\u6d6e\u70b9\u8ba1\u7b97\u80fd\u529b\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ufw","title":"UFW","text":"<p>Uncomplicated Firewall[1]\uff0c\u7b80\u79f0UFW\uff0c\u662fUbuntu\u7cfb\u7edf\u4e0a\u9ed8\u8ba4\u7684\u9632\u706b\u5899\u7ec4\u4ef6\u3002UFW\u662f\u4e3a\u8f7b\u91cf\u5316\u914d\u7f6eiptables\u800c\u5f00\u53d1\u7684\u4e00\u6b3e\u5de5\u5177\u3002UFW \u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u53cb\u597d\u7684\u754c\u9762\u7528\u4e8e\u521b\u5efa\u57fa\u4e8eIPV4\uff0cIPV6\u7684\u9632\u706b\u5899\u89c4\u5219\u3002UFW \u5728 Ubuntu 8.04 LTS \u540e\u7684\u6240\u6709\u53d1\u884c\u7248\u4e2d\u9ed8\u8ba4\u53ef\u7528[2]\u3002UFW \u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u53ebGufw</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#blas","title":"BLAS","text":"<p>BLAS\uff08\u82f1\u8bed\uff1aBasic Linear Algebra Subprograms\uff0c\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u7a0b\u5e8f\u96c6\uff09\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\u6807\u51c6\uff0c\u7528\u4ee5\u89c4\u8303\u53d1\u5e03\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u7684\u6570\u503c\u5e93\uff08\u5982\u77e2\u91cf\u6216\u77e9\u9635\u4e58\u6cd5\uff09\u3002\u8be5\u7a0b\u5e8f\u96c6\u6700\u521d\u53d1\u5e03\u4e8e1979\u5e74\uff0c\u5e76\u7528\u4e8e\u521b\u5efa\u66f4\u5927\u7684\u6570\u503c\u7a0b\u5e8f\u5305\uff08\u5982LAPACK\uff09\u3002\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\uff0cBLAS\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4f8b\u5982\uff0cLINPACK\u7684\u8fd0\u7b97\u6210\u7ee9\u5219\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8eBLAS\u4e2d\u5b50\u7a0b\u5e8fDGEMM\u7684\u8868\u73b0\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#mpi","title":"MPI","text":"<p>\u6d88\u606f\u4f20\u9012\u63a5\u53e3\uff08\u82f1\u8bed\uff1aMessage Passing Interface\uff0c\u7f29\u5199MPI\uff09\u662f\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\uff0c\u5e38\u5728\u8d85\u7ea7\u7535\u8111\u3001\u7535\u8111\u96c6\u7fa4\u7b49\u975e\u5171\u4eab\u5185\u5b58\u73af\u5883\u7a0b\u5e8f\u8bbe\u8ba1\u3002</p> <p>\u800c\u672c\u6b21\u5b9e\u9a8c\u7684OpenMPI\u662fMPI\u7684\u4e00\u79cd\uff0c\u5171\u4eab\u5185\u5b58\u7684\u5e76\u884c\u7f16\u7a0b\u7684\u4e00\u4e2aAPI\u3002OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002MPI\u7684\u6838\u5fc3\u4e3b\u8981\u662f\uff1a\u7aef\u5230\u7aef\u901a\u4fe1\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u548c\u96c6\u5408\u901a\u4fe1\uff08Collective Communication\uff09\u3002\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u89c1MPI\u53c2\u8003\u624b\u518c</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ssh","title":"SSH","text":"<p>\u5b89\u5168\u5916\u58f3\u534f\u8bae\uff08Secure Shell Protocol\uff0c\u7b80\u79f0SSH\uff09\u662f\u4e00\u79cd\u52a0\u5bc6\u7684\u7f51\u7edc\u4f20\u8f93\u534f\u8bae\uff0c\u53ef\u5728\u4e0d\u5b89\u5168\u7684\u7f51\u7edc\u4e2d\u4e3a\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5b89\u5168\u7684\u4f20\u8f93\u73af\u5883[1]\u3002SSH\u901a\u8fc7\u5728\u7f51\u7edc\u4e2d\u521b\u5efa\u5b89\u5168\u96a7\u9053\u6765\u5b9e\u73b0SSH\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5[2]\u3002SSH\u6700\u5e38\u89c1\u7684\u7528\u9014\u662f\u8fdc\u7a0b\u767b\u5f55\u7cfb\u7edf\uff0c\u4eba\u4eec\u901a\u5e38\u5229\u7528SSH\u6765\u4f20\u8f93\u547d\u4ee4\u884c\u754c\u9762\u548c\u8fdc\u7a0b\u6267\u884c\u547d\u4ee4\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u684c\u9762\u6216\u8005\u670d\u52a1\u5668\uff09</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u5e38\u7528\u7684Github\u4e5f\u662f\u6bd4\u8f83\u5efa\u8bae\u91c7\u7528SSH\u901a\u4fe1\uff0c\u8fd9\u6837\u8bbf\u95ee\u6bd4\u8f83\u7a33\u5b9a\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#makefile","title":"Makefile","text":"<p>\u6211\u4eec\u5e38\u8bf4\u7684Makefile\u5c31\u662fGNU make.\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b8c\u6210\u7f16\u8bd1\u3002\u4e0a\u8fc7C\u5927\u7684\u540c\u5b66\u5e94\u8be5\u5df2\u7ecf\u6709\u6240\u4e86\u89e3\u4e86\u3002\u6211\u4e5f\u4e0d\u5728\u6b64\u8fc7\u591a\u8bf4\u660e\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u6df1\u5165\u6d45\u51fa\u7684\u624b\u518c\u653e\u5728\u8fd9\u91cc\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ip","title":"\u5185\u7f51 IP","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u7684\u662f\u5185\u7f51IP\u4e92\u901a\u3002\u7531\u4e8e\u7f51\u5173\u7684\u5b58\u5728\uff0c\u4e0d\u540c\u5c40\u57df\u7f51\u5185\u7684\u5185\u7f51IP\u662f\u53ef\u4ee5\u91cd\u590d\u7684\u3002</p> <p>\u5185\u7f51IP\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u5c40\u57df\u7f51\u7f51\u7edc\u5730\u5740\uff0c\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u4ee5NAT\uff08\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09\u534f\u8bae\uff0c\u901a\u8fc7\u4e00\u4e2a\u516c\u5171\u7684\u7f51\u5173\u8bbf\u95eeInternet\u3002\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u53ef\u5411Internet\u4e0a\u7684\u5176\u4ed6\u8ba1\u7b97\u673a\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\uff0c\u4f46Internet\u4e0a\u5176\u4ed6\u7684\u8ba1\u7b97\u673a\u65e0\u6cd5\u5411\u5185\u7f51\u7684\u8ba1\u7b97\u673a\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u3002</p> <p>NAT\uff08Network Address Translator\uff09\u662f\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff0c\u5b83\u5b9e\u73b0\u5185\u7f51\u7684IP\u5730\u5740\u4e0e\u516c\u7f51\u7684\u5730\u5740\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u5c06\u5927\u91cf\u7684\u5185\u7f51IP\u5730\u5740\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6216\u5c11\u91cf\u7684\u516c\u7f51IP\u5730\u5740\uff0c\u51cf\u5c11\u5bf9\u516c\u7f51IP\u5730\u5740\u7684\u5360\u7528\u3002NAT\u7684\u6700\u5178\u578b\u5e94\u7528\u662f\uff1a\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\uff0c\u53ea\u9700\u8981\u4e00\u53f0\u8ba1\u7b97\u673a\u8fde\u63a5\u4e0aInternet\uff0c\u5c31\u53ef\u4ee5\u5229\u7528NAT\u5171\u4eabInternet\u8fde\u63a5\uff0c\u4f7f\u5c40\u57df\u7f51\u5185\u5176\u4ed6\u8ba1\u7b97\u673a\u4e5f\u53ef\u4ee5\u4e0a\u7f51\u3002</p> <p>\u800c\u672c\u6b21\u5b9e\u9a8c\u7684\u96c6\u7fa4\u53ca\u91c7\u53d6\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u6765\u5efa\u7acb\u96c6\u7fa4\u95f4\u7684\u7f51\u7edc\u8fde\u63a5\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab1/#_2","title":"\u865a\u62df\u673a","text":"<ol> <li> <p>\u7531\u4e8e\u6211\u4e4b\u524d\u5bd2\u5047\u60f3\u4e0a\u624b\u4e0bLinux\u7cfb\u7edf\uff0c\u6545\u5df2\u7ecf\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u5b89\u88c5\u8fc7<code>VMware</code>\uff0c\u6b64\u524d\u4f7f\u7528\u7684\u662f<code>redhat</code>\u3002\u73b0\u5728\u53ea\u9700\u8981\u4e0b\u8f7dLinux\u7684\u955c\u50cf\u6587\u4ef6\u5373\u53ef\u3002\u7531\u4e8e\u81ea\u5df1\u5df2\u7ecf\u4f7f\u7528\u4e86\u534a\u5e74\u591a\u7684<code>WSL2</code>\uff0c\u6545\u9009\u62e9\u4e0b\u8f7d\u7684\u662fUbuntu\u7cfb\u7edf\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95eeZJU-mirror\u5373\u53ef\u3002\uff08\u6211\u5efa\u8bae\u4f7f\u7528Desktop\u7248\u672c\uff0c\u4f60\u4f1a\u5feb\u4e50\u5f88\u591a\uff0c\u540e\u9762\u4e5f\u4f1a\u65b9\u4fbf\u5f88\u591a\uff09</p> </li> <li> <p>\u5efa\u8bae\u4f7f\u7528\u865a\u62df\u673a\u7684\u8bdd\u53ef\u4ee5\u5355\u72ec\u51fa\u6765\u78c1\u76d8\u4fbf\u4e8e\u7ba1\u7406\u4ee5\u53ca\u5b89\u5168\u3002</p> </li> </ol> <p></p> <ol> <li> <p>VMware\u865a\u62df\u673a\u7684\u5efa\u7acb\uff0c\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u6559\u7a0b\uff0c\u6545\u4e0d\u5728\u6b64\u8bf4\u660e\u3002(ps:\u57fa\u672c\u4e0a\u9009\u62e9\u4f60\u521a\u4e0b\u8f7d\u597d\u7684iso\u955c\u50cf\uff0c\u9009\u62e9\u597d\u914d\u7f6e\u540e\u4e00\u8def\u786e\u5b9a\u5373\u53ef)</p> </li> <li> <p>\u865a\u62df\u673a\u521b\u5efa\u6210\u529f\uff0c\u5982\u56fe\uff1a</p> </li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl_1","title":"HPL\u73af\u5883\u642d\u5efa","text":"<p>HPL\u662f<code>Linpack</code>\u6d4b\u8bd5\u7684\u4e00\u79cd\uff0c\u9700\u8981\u4f9d\u8d56<code>OpenMPI</code>&amp;<code>OpenBLAS</code>\u6765\u5b9e\u73b0\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_3","title":"\u865a\u62df\u673a\u73af\u5883\u914d\u5236","text":"<p>\u76ee\u6807\uff1a\u5b89\u88c5\u76f8\u5173\u7f16\u8bd1\u5668\u4ee5\u53camake\u5de5\u5177\u548c\u7f51\u7edc\u5de5\u5177</p> <ol> <li><code>sudo apt install gcc g++ python3 gfortran -y</code></li> </ol> <p>\u68c0\u67e5\u7684\u8bdd\u6709<code>\u2026 --version</code>\u5373\u53ef\uff0c\u6216\u8005<code>apt list --installed</code>(\u4f46\u8fd9\u4e2a\u592a\u8822\u4e86)</p> <ol> <li> <p><code>sudo apt install make net-tools -y</code></p> </li> <li> <p><code>sudo apt install openssh-server -y</code></p> </li> </ol> <p>\u7528<code>sudo systemctl status ssh</code>\u548c<code>ifconfig</code>\u9a8c\u8bc1\u7f51\u7edc\u5de5\u5177\u548cSSH Server</p> <ol> <li>UFW\u6253\u5f00SSH\u7aef\u53e3</li> </ol> <p><code>sudo ufw allow ssh</code></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#openmpi","title":"Openmpi\u5b89\u88c5","text":"<ol> <li>\u4e0b\u8f7d\u5e76\u89e3\u538bOpenMPI</li> </ol> <p>\u7f51\u5740\u4e3a\uff1aOpen MPI: Version 4.1 (open-mpi.org)</p> <p>\u7528\u706b\u72d0\u6d4f\u89c8\u5668\u6253\u5f00\u70b9\u51fb\u4e0b\u8f7d\u540e\uff0c\u4ece\u7ec8\u7aef\u6253\u5f00\u5f53\u524d\u6587\u4ef6\u5939\uff0c\u4f7f\u7528\uff1a <code>tar xvf openmpi-4.1.1.tar.gz</code>(\u5b66\u4f1a\u4f7f\u7528<code>tab</code>\u8865\u5168)</p> <p>\uff08ps\uff1a\u7528\u684c\u9762\u7248\u7684\u597d\u5904\u6765\u5566\uff01\uff09</p> <p>\u975e\u684c\u9762\u7248\u7684\u7528\u6237\u5c31\u6b63\u5e38\u7528<code>wget</code>\u548c<code>curl</code>\u4e0b\u8f7d\u5c31\u884c\u3002</p> <p></p> <ol> <li>\u5b89\u88c5OpenMPI</li> </ol> <p><code>cd openmpi-4.1.4    ./configure    sudo make all install</code></p> <p>\u200b    \u5173\u4e8e<code>sudo make all</code>&amp;<code>sudo make install</code>\u7684\u539f\u7406\uff0c\u6709\u4e00\u7bc7\u535a\u4e3b\u5199\u7684\u86ee\u4e0d\u9519\u7684\u3002link</p> <ol> <li>\u6dfb\u52a0\u8def\u5f84</li> </ol> <p><code>sudo vim /etc/profile</code>(\u8fd9\u91cc\u9700\u8981\u4e00\u70b9\u70b9vim\u7684\u77e5\u8bc6)</p> <p>\u5728profile\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0</p> <p></p> <p>\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u4f7f\u914d\u5236\u751f\u6548</p> <p><code>source /etc/profile</code></p> <p>(ps:\u53ef\u80fd\u7528\u6237\u540d\u4f1a\u53d8\u6210\u767d\u8272\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u73af\u5883\u66f4\u65b0)</p> <p>4.\u6d4b\u8bd5\u73af\u5883</p> <p><code>cd Downloads/openmpi-4.1.4/examples    make &amp;&amp; mpirun -np 2 hello_c.c</code></p> <ul> <li> <p>\u6d4b\u8bd5\u7ed3\u679c</p> <p></p> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab1/#openblas","title":"OpenBLAS\u5b89\u88c5","text":"<ul> <li> <p>\u7528<code>sudo apt-get install libopenblas-dev</code>\u547d\u4ee4\u5b89\u88c5</p> </li> <li> <p>\u5b89\u88c5\u8def\u5f84\u5728<code>/usr/lib/x86_64-linux-gnu/openblas-pthread</code></p> </li> </ul> <p>\u60f3\u8981\u6d4b\u8bd5\u81ea\u5df1\u662f\u5426\u5b89\u88c5\u6210\u529f\u53ef\u4ee5\u5728\u672c\u5730\u5199\u4e2a\u7a0b\u5e8f\u6d4b\u8bd5\uff0c\u4ee3\u7801\u89c1link</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#hpl_2","title":"HPL\u7684\u5b89\u88c5\u4ee5\u53ca\u73af\u5883\u914d\u5236","text":"<ul> <li>\u4e0b\u8f7d\u5e76\u89e3\u538b<code>hpl-2.3.tar.gz</code></li> </ul> <p><code>tar xvf hpl-2.3.tar.gz</code></p> <ul> <li>\u590d\u5236\u5e76\u7c98\u8d34Make\u6587\u4ef6\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u56fe\u5f62\u5316\u64cd\u4f5c\u55bd\uff09</li> </ul> <p><code>cp Downloads/hpl-2.3/setup/Make.Linux_PII_CBLAS Downloads/hpl-2.3/Make.test   mv hpl-2.3 hpl(\u91cd\u547d\u540d)</code></p> <ul> <li>\u4fee\u6539makefile</li> </ul> <p>\u8fd9\u91cc\u4e0d\u5f97\u4e0d\u5410\u69fd\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f\u6211\u76ee\u524d\u6765\u8bf4\u8d39\u65f6\u6700\u957f\u7684\u5730\u65b9\uff0c\u57fa\u672c\u4e0a\u81ea\u5df1\u628a\u6574\u4e2aMakefile\u5168\u90e8\u91cd\u65b0\u8bfb\u548c\u5199\u4e86\u4e00\u904d\uff0c\u6a21\u677f\u57fa\u672c\u4e0a\u4e0d\u80fd\u600e\u4e48\u7528\u3002\u7136\u540e\u81ea\u5df1\u770b\u7740make\u7f16\u8bd1\u51fa\u6765\u7684\u62a5\u9519\u4e00\u70b9\u70b9\u6539\u3002\u57fa\u672c\u4e0a\u5c31\u5bf9\u5e94\u81ea\u5df1\u627e\u4e86\u4e00\u904d\u3002\u5982\u679c\u662f\u5b8c\u5168\u6309\u7167\u6211\u4e4b\u524d\u6b65\u9aa4\u6765\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u7167\u6284\u6211\u7684Makefile\u4e86</p> <pre><code>  SHELL        = /bin/sh\n  CD           = cd\n  CP           = cp\n  LN_S         = ln -s\n  MKDIR        = mkdir\n  RM           = /bin/rm -f\n  TOUCH        = touch\n  ARCH = test\n\n  TOPdir       = $(HOME)/Downloads/hpl\n  INCdir       = $(TOPdir)/include\n  BINdir       = $(TOPdir)/bin/$(ARCH)\n  LIBdir       = $(TOPdir)/lib/$(ARCH)\n  HPLlib       = $(LIBdir)/libhpl.a\n\n  MPdir = /usr/local/lib/openmpi\n  MPinc =\n  MPlib = /usr/local/lib/libmpi.so\n\n  LAdir        = /usr/lib/x86_64-linux-gnu/openblas-pthread\n  LAinc        =\n  LAlib        = $(LAdir)/libblas.a $(LAdir)/libblas.so\n\n  F2CDEFS      =\n\n  HPL_INCLUDES = -I$(INCdir) -I$(INCdir)/$(ARCH) $(LAinc) $(MPinc)\n  HPL_LIBS     = $(HPLlib) $(LAlib) $(MPlib)\n\n  HPL_OPTS     =\n\n  HPL_DEFS     = $(F2CDEFS) $(HPL_OPTS) $(HPL_INCLUDES)\n\n  CC           = /usr/local/bin/mpicc\n  CCNOOPT      = $(HPL_DEFS)\n  CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -O3 -funroll-loops -w -Wall -pthread\n\n  LINKER       = /usr/local/bin/mpif77\n  LINKFLAGS    = $(CCFLAGS)\n\n  ARCHIVER     = ar\n  ARFLAGS      = r\n  RANLIB       = echo\n\n  arch = test\n</code></pre> <ul> <li>\u7f16\u8bd1\u5e76\u68c0\u67e5\u662f\u5426\u6210\u529f</li> </ul> <p><code>make arch=test(\u4e00\u5b9a\u4e0d\u8981\u56e0\u4e3a\u53d8\u6210\u7684\u4e60\u60ef\u5728\u7b49\u53f7\u4e24\u8fb9\u591a\u6253\u7a7a\u683c)   cd hpl/bin/test   dir   HPL.dat xhpl(\u8bc1\u660e\u5b89\u88c5\u6210\u529f!\u5982\u56fe)</code></p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_4","title":"\u514b\u9686\u8282\u70b9","text":"<p>\u5728VMware\u4e2d\u514b\u9686\u5df2\u7ecf\u914d\u7f6e\u597d\u7684\u8282\u70b9\uff0c\u6210\u4e3a\u96c6\u7fa4\u7684\u5176\u4ed6\u4e09\u4e2a\u8282\u70b9.</p> <p>\u53ef\u4ee5\u5728\u514b\u9686\u524d\u5728\u4e3b\u673a\u4e0a\u5148\u5b89\u88c5\u597d<code>SSH</code>.\u540e\u9762\u80fd\u8282\u7ea6\u4e00\u70b9\u70b9\u65f6\u95f4\u3002</p> <p>\uff08Tips\uff1a\u4e00\u822c\u5148\u4f1a\u5728\u5de6\u4e0a\u89d2\u7684\u7f16\u8f91\u8fdb\u5165 --&gt;\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\uff0c\u5c06\u5b50\u7f51IP\u66f4\u6539\u4e3a\u4e0d\u662f192.168.64\uff08\u53ef\u4ee5\u662f65\u2026\uff09\u3002\u7136\u540e\u518d\u53f3\u952e\u514b\u9686\uff0c\u8bb0\u5f97\u63d0\u524d\u683c\u51fa\u6765\u8fd1100G\u78c1\u76d8\uff0c\u5e76\u5728\u91cc\u9762\u5efa\u56db\u4e2a\u5c0f\u6587\u4ef6\u5939\u6709\u52a9\u4e8e\u7ba1\u7406\u548c\u865a\u62df\u673a\u7684\u7a33\u5b9a\uff09</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#_5","title":"\u6d4b\u8bd5\u96c6\u7fa4","text":""},{"location":"ZJU_CS/HPC/homework/lab1/#ping","title":"ping\u901a","text":"<ul> <li>\u83b7\u5f97\u6bcf\u53f0\u865a\u62df\u673a\u7684IP\u5730\u5740</li> </ul> <p><code>ifconfig</code></p> <p></p> <ul> <li>\u83b7\u5f97\u7684\u865a\u62df\u673a\u5730\u5740\u5982\u4e0b\uff1a</li> </ul> <p><code>192.168.253.129   192.168.253.130   192.168.253.131   192.168.253.132</code></p> <ul> <li>\u786e\u8ba4\u80fd\u76f8\u4e92ping\u901a</li> </ul> <p><code>ping 192.168.253.130 \u2026\u2026</code> </p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#ssh_1","title":"\u914d\u5236SSH","text":"<ol> <li>\u751f\u6210\u516c\u94a5\u79c1\u94a5\u5bf9</li> </ol> <p>\u200b   <code>ssh-kegen -t rsa</code></p> <p>\u200b   \u8fd9\u91cc\u8ddfgit\u524d\u671f\u6b65\u9aa4\u4e00\u6837\uff0c\u8be6\u60c5\u53ef\u4ee5\u89c1git\u7b14\u8bb0</p> <ol> <li>\u5c06\u4e3b\u673a\u4e0a\u7684\u516c\u94a5\u62f7\u8d1d\u5230\u53e6\u5916\u4e09\u53f0\u865a\u62df\u673a\u7684\u76ee\u5f55\u4e0b</li> </ol> <p></p> <ol> <li>\u8fdc\u7a0b\u514d\u5bc6\u8bbf\u95ee\u6d4b\u8bd5</li> </ol> <p><code>ssh username@192.168.***.***</code></p> <p>\u590d\u5236\u5b8c\u6210\u540e\uff0c\u6ce8\u610f\u68c0\u67e5 <code>authorized_keys</code> (600) \u548c <code>.ssh/</code> (700) \u76ee\u5f55\u7684\u6743\u9650\uff0c\u5426\u5219\u65e0\u6cd5\u987a\u5229 <code>ssh</code>\u3002</p> <p>ssh passphrase \u2014\u2014 \u5982\u679c\u81ea\u5df1\u7684\u5bc6\u94a5\u6709 passphrase\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528 <code>ssh-agent</code> \u786e\u4fdd\u80fd\u6682\u65f6\u4e0d\u7528\u8f93\u5165 passphrase\uff0c\u4ee5\u514d\u4e4b\u540e\u5f71\u54cd <code>mpirun</code> \u6b63\u786e\u8fd0\u884c\u3002</p> <p>\u6ce8\uff1a\u6211\u4eec\u8fd8\u662f\u7528<code>ifconfig</code>\u5224\u65ad\u81ea\u5df1\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\uff1b\u7528<code>logout</code>\u9000\u51faSSH\u8bbf\u95ee</p>"},{"location":"ZJU_CS/HPC/homework/lab1/#mpirun","title":"mpirun\u5c1d\u8bd5","text":"<ol> <li>\u521b\u5efa\u4e3b\u673a\u4e2d\u7684hostfile\u6587\u4ef6\uff08\u4e0d\u7528\u5728\u610f\u683c\u5f0f\uff09</li> </ol> <p><code>vim myhostfile</code></p> <p>\uff08slots\u662f\u6838\u5fc3\u6570\u7684\u610f\u601d\uff0c\u8fd9\u8ddf\u4f60\u5728\u521b\u5efa\u865a\u62df\u7684\u65f6\u5019\u8bbe\u5b9a\u6709\u5173\uff0c\u8bb0\u5f97\u4e00\u5b9a\u52a0s\uff09</p> <p><code>192.168.253.129 slots=2    192.168.253.130 slots=2    192.168.253.131 slots=2    192.168.253.132 slots=2</code></p> <ol> <li>\u67e5\u770b\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ebf\u65f6\u95f4</li> </ol> <p><code>mpirun --hostfile myhostfile uptime</code></p> <p></p> <ol> <li>\u8fd0\u884cHPL</li> </ol> <p><code>mpirun --hostfile myhostfile ./xhpl</code></p> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab1/#discussion","title":"Discussion","text":"<p>\u9996\u5148\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u6536\u83b7\u4e86\u5f88\u591a\uff0c\u4e00\u65b9\u9762\u4e86\u89e3\u4e86\u8d85\u7ea7\u8ba1\u7b97\u673a\u5728\u5e76\u884c\u8fd0\u7b97\u65b9\u9762\u7684\u4e00\u4e9b\u7b80\u5355\u539f\u7406\uff1b\u6b64\u5916\uff0c\u6211\u5b66\u4e60\u5230\u4e86\u8bb8\u591a\u7f51\u7edc\u4e0e\u901a\u4fe1\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u5e76\u4e14\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5728\u505alab\u7684\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u6211\u53d1\u73b0\u6211\u81ea\u5df1\u4e4b\u524d\u6240\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u90fd\u80fd\u6574\u5408\u8d77\u6765\u5e76\u8fd0\u7528\u3002</p> <p>\u6b64\u5916\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u5728OpenMPI\u5b89\u88c5\u5e76\u6d4b\u8bd5\u7a0b\u5e8f\uff08\u7531\u4e8e\u5ffd\u7565\u4e86<code>&amp;&amp;</code>\u8fde\u63a5\u547d\u4ee4\u7b26\uff0c\u5bfc\u81f4\u803d\u6401\u4e86\u5f88\u591a\u65f6\u95f4\uff09\u4ee5\u53ca\u5728HPL\u7684makefile\u7f16\u5199\u8fc7\u7a0b\uff08\u6700\u7ec8\u81ea\u5df1\u76f8\u5f53\u4e8e\u627e\u76ee\u5f55\u91cd\u65b0\u624b\u5199\u4e86\u4e00\u904dmakefile\uff09\uff0c\u7565\u6709\u78d5\u7eca\uff0c\u5176\u4ed6\u60c5\u51b5\u90fd\u7b97\u987a\u5229\u3002\u672c\u6b21\u5b9e\u9a8c\u8fd8\u6709\u4e00\u4e2a\u5fc3\u5f97\u4f53\u4f1a\u5c31\u662f\u6211\u4eec\u4e00\u5b9a\u8981\u5b66\u4f1a\u770b\u7ec8\u7aef\u53cd\u9988\u56de\u6765\u7684\u62a5\u9519\uff0c\u4e0d\u80fd\u76f2\u76ee\u5728\u7f51\u4e0a\u67e5\u627e\u6559\u7a0b\uff08\u56fd\u5185\u6559\u7a0b\u62c9\u7684\u4e00\u5339\uff09\uff0c\u8fd9\u6837\u80fd\u591f\u6709\u6548\u5e76\u4e14\u5feb\u901f\u7684\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u81ea\u5df1\u7684\u95ee\u9898\u6240\u5728\u3002</p> <p>\u6700\u540e\u6d4b\u8bd5\u7684\u5b9e\u9a8c\u7ed3\u679c\u5982\u4e0a\u56fe\uff0c\u867d\u7136\u7ed3\u679c\u6709\u53cd\u9988\uff0c\u4f46\u4ecd\u6709\u56f0\u60d1\u7684\u70b9\u5c31\u662f\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u5bf9\u6bd4\u4f53\u73b0\u5e76\u884c\u8ba1\u7b97\u7684\u4f18\u8d8a\u6027\u3002\u8fd9\u4e2alab\u7ed9\u6211\u7684\u4e94\u6708\u753b\u4e0a\u4e86\u4e00\u4e2a\u8fd8\u7b97\u5706\u6ee1\u7684\u53e5\u53f7\u3002\u5e0c\u671b\u80fd\u591f\u52a0\u5165<code>ZJUSCT</code>\uff0c\u5728\u6bb5\u5b66\u671f\u5185\u6536\u83b7.</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/","title":"Lab-2","text":"<ul> <li>Lab-2<ul> <li>Lab Description</li> </ul> </li> <li>include </li> <li>include </li> <li>include <ul> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)<ul> <li>SIMD</li> <li>\u5411\u91cf\u5316\u6307\u4ee4</li> <li>\u6c47\u7f16\u8bed\u8a00</li> </ul> </li> <li>Lab Design &amp; Test Result<ul> <li>Code Design</li> <li>\u6c47\u7f16\u6bd4\u8f83<ul> <li>SIMD\u7684\u6c47\u7f16</li> <li>\u666e\u901a\u7684\u6c47\u7f16</li> <li>\u6e90\u4ee3\u7801\u4e2d\u666e\u901a\u8868\u8fbe\u5f0f\u7684\u6c47\u7f16</li> </ul> </li> <li>\u5b9e\u9a8c\u7ed3\u679c</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#lab-description","title":"Lab Description","text":"<p>\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570 API \u9700\u8981 include \u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u540c SIMD \u6307\u4ee4\u96c6\u9700\u8981\u7684\u5934\u6587\u4ef6\u4e0d\u540c\uff0c\u5177\u4f53\u9700\u8981\u53c2\u8003 Intel \u76f8\u5173\u6587\u6863\u3002</p> <p>```c</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#include","title":"include","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#include_1","title":"include","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#include_2","title":"include  <p>```</p>  <p>\u672c\u6b21\u5b9e\u9a8c\u7684\u5b9e\u9a8c\u76ee\u6807\uff1a\u901a\u8fc7\u4f7f\u7528\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u65b9\u5f0f\u5bf9\u8fd9\u4e2a\u5faa\u73af\u8fdb\u884c\u4f18\u5316</p> <pre><code>/* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n// -----------------------------------\nfor (int i = 0; i &lt; MAXN; ++i)\n{\n    c[i] += a[i] * b[i];\n}\n// -----------------------------------\n\n</code></pre>   <p>\u8be6\u60c5\u8bf7\u770b\u5b9e\u9a8c\u6307\u5bfc</p>","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#simd","title":"SIMD","text":"<p>\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\uff08\u82f1\u8bed\uff1aSingle Instruction Multiple Data\uff0c\u7f29\u5199\uff1aSIMD\uff09\u662f\u4e00\u79cd\u91c7\u7528\u4e00\u4e2a\u63a7\u5236\u5668\u6765\u63a7\u5236\u591a\u4e2a\u5904\u7406\u5668\uff0c\u540c\u65f6\u5bf9\u4e00\u7ec4\u6570\u636e\uff08\u53c8\u79f0\u201c\u6570\u636e\u5411\u91cf\u201d\uff09\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5206\u522b\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u4ece\u800c\u5b9e\u73b0\u7a7a\u95f4\u4e0a\u7684\u5e76\u884c\u6027\u7684\u6280\u672f\u3002</p> <p>\u5728\u5fae\u5904\u7406\u5668\u4e2d\uff0c\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\u6280\u672f\u5219\u662f\u4e00\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u591a\u4e2a\u5e73\u884c\u7684\u5904\u7406\u5fae\u5143\uff0c\u4f8b\u5982Intel\u7684MMX\u6216SSE\uff0c\u4ee5\u53caAMD\u76843D Now!\u6307\u4ee4\u96c6\u3002</p> <p>\u56fe\u5f62\u5904\u7406\u5668\uff08GPU\uff09\u62e5\u6709\u5f3a\u5927\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u548c\u53ef\u7f16\u7a0b\u6d41\u6c34\u7ebf\uff0c\u9762\u5bf9\u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41\u65f6\uff0c\u8fd0\u7b97\u80fd\u529b\u8fdc\u8d85\u4f20\u7edfCPU\u3002OpenCL\u548cCUDA\u5206\u522b\u662f\u76ee\u524d\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f00\u6e90\u548c\u4e13\u5229\u901a\u7528\u56fe\u5f62\u5904\u7406\u5668\uff08GPGPU\uff09\u8fd0\u7b97\u8bed\u8a00\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_1","title":"\u5411\u91cf\u5316\u6307\u4ee4","text":"<p>\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982 SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002</p> <p>\u73b0\u4ee3\u7f16\u8bd1\u5668\u5728\u9ad8\u4f18\u5316\u7b49\u7ea7\u4e0b\uff0c\u5177\u6709\u81ea\u52a8\u5411\u91cf\u5316\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u7ed3\u6784\u6e05\u6670\uff0c\u5faa\u73af\u8fb9\u754c\u6e05\u6670\u7684\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u5f88\u4f18\u79c0\u7684\u7a0b\u5ea6\u4e86\u3002\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u59cb\u7ec8\u662f\u4fdd\u5b88\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u65e0\u6cd5\u5b8c\u6210\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u5411\u91cf\u5316\u7684\u5de5\u4f5c\uff0c\u4e3a\u4e86\u8ffd\u6c42\u6027\u80fd\uff0c\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\u7ecf\u5e38\u9700\u8981\u624b\u5199 SIMD \u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002</p> <p>\u663e\u7136\u76f4\u63a5\u624b\u5199\u6c47\u7f16\u6307\u4ee4\u8fc7\u4e8e\u56f0\u96be\uff0c\u5728 C \u8bed\u8a00\u73af\u5883\u4e0b\uff0cIntel \u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5173\u4e8e SIMD \u6307\u4ee4\u7684\u51fd\u6570\u5c01\u88c5\u63a5\u53e3\u548c\u6307\u4ee4\u76f8\u5173\u884c\u4e3a\u7684\u53c2\u7167\u624b\u518c\uff0c\u53ef\u4ee5\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u627e\u5230\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_2","title":"\u6c47\u7f16\u8bed\u8a00","text":"<p>\u6c47\u7f16\u8bed\u8a00\uff08\u82f1\u8bed\uff1aassembly language\uff09[\u6ce8 1][1]\u662f\u4efb\u4f55\u4e00\u79cd\u7528\u4e8e\u7535\u5b50\u8ba1\u7b97\u673a\u3001\u5fae\u5904\u7406\u5668\u3001\u5fae\u63a7\u5236\u5668\uff0c\u6216\u5176\u4ed6\u53ef\u7f16\u7a0b\u5668\u4ef6\u7684\u4f4e\u7ea7\u8bed\u8a00\u3002\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e2d\uff0c\u6c47\u7f16\u8bed\u8a00\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u96c6\u3002\u4e00\u79cd\u6c47\u7f16\u8bed\u8a00\u4e13\u7528\u4e8e\u67d0\u79cd\u8ba1\u7b97\u673a\u7cfb\u7edf\u7ed3\u6784\uff0c\u800c\u4e0d\u50cf\u8bb8\u591a\u9ad8\u7ea7\u8bed\u8a00\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7cfb\u7edf\u5e73\u53f0\u4e4b\u95f4\u79fb\u690d\u3002</p> <p>\u4f7f\u7528\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u7684\u6e90\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7\u76f8\u5e94\u7684\u6c47\u7f16\u7a0b\u5e8f\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u53ef\u6267\u884c\u7684\u673a\u5668\u4ee3\u7801\u3002\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6c47\u7f16\u8fc7\u7a0b\u3002</p> <p>\u5173\u4e8e\u6c47\u7f16\uff1a</p> <ol> <li>\u5b66\u4e60\u5185\u5bb9\u5341\u5206\u63a8\u8350\u53bb\u770bCSAPP</li> <li>\u6709\u4e2a\u5728\u7ebf\u7684\u7f16\u8bd1\u5668\u80fd\u591f\u6709\u52a9\u4e8e\u4f60\u7406\u89e3!</li> <li>\u5f53\u7136\u6211\u4e5f\u5efa\u8bae\u5927\u5bb6\u53ef\u4ee5\u5728\u81ea\u5df1\u672c\u5730\u7684\u7535\u8111\u4e0a\u901a\u8fc7gcc\u7684\u4e00\u4e9b\u53c2\u6570\u9009\u9879\u81ea\u5df1\u6765\u4e86\u89e3\u6c47\u7f16\u3002</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#code-design","title":"Code Design","text":"<p>My Code:</p> <pre><code>for (int n = 0; n &lt; 20; ++n)\n{\n    /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */\n    // -----------------------------------\n    __m256 vecA, vecB, vecC, vecAB;\n    for (int i = 0; i &lt; MAXN; i += 8) \n    {\n        vecA = _mm256_loadu_ps(a + i);\n        vecB = _mm256_loadu_ps(b + i);\n        vecC = _mm256_loadu_ps(c + i);\n\n        // vecAB = _mm256_mul_ps(vecA, vecB);\n        // vecC = _mm256_add_ps(vecAB, vecC);\n        vecC = _mm256_fmadd_ps(vecA, vecB, vecC);\n        _mm256_storeu_ps(c + i, vecC);\n    }\n}\n</code></pre> <p>ps: \u8fd9\u6bb5\u4ee3\u7801\u4e5f\u6ca1\u6709\u8003\u8651\u5185\u5b58\u5bf9\u9f50\u95ee\u9898\uff0c\u5982\u679c\u4f60\u7684\u6570\u636e\u662f\u5bf9\u9f50\u7684\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528<code>_mm256_load_ps</code>\u548c<code>_mm256_store_ps</code>\u6765\u63d0\u9ad8\u6027\u80fd\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_3","title":"\u6c47\u7f16\u6bd4\u8f83","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#simd_1","title":"SIMD\u7684\u6c47\u7f16","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#_4","title":"\u666e\u901a\u7684\u6c47\u7f16","text":""},{"location":"ZJU_CS/HPC/homework/lab2.5/#_5","title":"\u6e90\u4ee3\u7801\u4e2d\u666e\u901a\u8868\u8fbe\u5f0f\u7684\u6c47\u7f16","text":"<p>\u6211\u4eec\u4e0d\u96be\u770b\u5230\u4ed6\u7684\u5904\u7406\u4e5f\u5df2\u7ecf\u6709SIMD\uff08\u5982\uff1a<code>vmovss</code>\u3001<code>vaddss</code>\uff09\u7b49\u7684\u4f18\u5316\u4e86</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#_6","title":"\u5b9e\u9a8c\u7ed3\u679c","text":"<p>ps:\u8bb0\u5f97\u6dfb\u52a0<code>gcc</code>\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5426\u5219\u53ef\u80fd\u4e0d\u901a\u8fc7!</p> <p></p> <p>\u7ed3\u8bba\uff1a\u6700\u540e\u7684\u52a0\u901f\u6bd4\u5c06\u8fd12.</p>"},{"location":"ZJU_CS/HPC/homework/lab2.5/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u624b\u5199SIMD\u7684\u5206\u88c5\u51fd\u6570\u5b9e\u73b0\u6c47\u7f16\u4e0a\u7684\u4f18\u5316\u3002\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6211\u8fd8\u770b\u5230\uff0c\u73b0\u4ee3\u7f16\u8bd1\u5668\u90fd\u5341\u5206\u667a\u80fd\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u4f8b\u5982\u50cf\uff1a<code>GCC</code>\u7f16\u8bd1\u5668\uff1a\u4f7f\u7528<code>-O3</code>\u9009\u9879\u542f\u7528\u6240\u6709\u4f18\u5316\uff0c\u5e76\u4f7f\u7528<code>-ftree-vectorize</code>\u9009\u9879\u542f\u7528\u81ea\u52a8\u5411\u91cf\u5316\u3002\uff08\u5982\u4e0b\u56fe\uff09\u5f53\u7136\u6709\u7684\u65f6\u5019\u53ef\u80fd\u56e0\u4e3a\u5206\u652f\u590d\u6742\u7684\u539f\u56e0\u65e0\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u7f16\u8bd1\u6307\u5bfc\u8bed\u53e5\u4f8b\u5982\uff1a<code>\\#pragma omp parallel for reduction(+:sum) private(x)</code>\u6765\u63d0\u793a\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u4f18\u5316</p> <p></p> <p>\u5b9e\u9645\u81ea\u52a8\u4f18\u5316\u7684\u52a0\u901f\u6bd4\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u624b\u52a8\u4f18\u5316\u7684\u4e86\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u8fd9\u4e9b\u5c01\u88c5\u51fd\u6570\u7684\u5e95\u5c42\u5b9e\u73b0\u8fd8\u662f\u6539\u53d8\u6c47\u7f16\u8bed\u8a00\u3002\u8fd9\u5f53\u7136\u5f97\u76ca\u4e8e\u73b0\u4ee3\u8ba1\u7b97\u673a\u9ad8\u901f\u53d1\u5c55\u4f7f\u5f97cpu\u4e0a\u80fd\u5b9e\u73b0\u66f4\u591a\u7684\u6307\u4ee4\u52a0\u901f\u5de5\u4f5c\u3002\u5411\u91cf\u5316\u7684\u601d\u60f3\u4ee5\u53ca\u8fd9\u4e2a\u51fd\u6570\u7684\u6574\u4f53\u6784\u9020\uff0c\u5176\u5b9e\u8ddf\u6211\u4eec\u5728<code>CUDA</code>\u7f16\u7a0b\u8bfe\u4e0a\u5206\u914dthreads\u53bb\u5b8c\u6210\u52a0\u6cd5\u5de5\u4f5c\u4e00\u6837\u5341\u5206\u76f8\u4f3c\u3002\u5305\u62ec\u4e00\u4e9bMPI\u7684\u8bbe\u8ba1\u7ed3\u6784\u4e5f\u662f\u5982\u6b64\u3002\u901a\u8fc7\u5411\u91cf\u5316\uff08\u4ea6\u6216\u662f\u5c01\u88c5\u7edf\u4e00\u5904\u7406\u7684\u601d\u60f3\uff09\u6765\u5b9e\u73b0high performance\uff01</p> <p>\u6700\u540e\u7684\u6700\u540e\u6211\u60f3\u8bf4\u7684\u662f\uff1a\u6b63\u5982\u5b9e\u9a8c\u6307\u5bfc\u548c\u4e0a\u8bfe\u8bb2\u8fc7\u7684\u90a3\u6837\uff1a\u201c\u6df1\u5165\u5230\u8fd9\u4e2a\u7ea7\u522b\u7684\u4f18\u5316\u5df2\u7ecf\u5f00\u59cb\u9700\u8981\u8003\u8651\u5177\u4f53\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u7ec6\u8282\u4e86\uff0c\u5982\u67d0\u4e2a\u67b6\u6784\u4e0b\u67d0\u6761\u6307\u4ee4\u7684\u5b9e\u73b0\u5ef6\u65f6\u548c\u541e\u5410\u91cf\u662f\u591a\u5c11\uff0c\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u591a\u5c11\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8bbf\u5b58\u7684\u5bf9\u9f50\u7b49\u7b49\u3002\u8fd9\u79cd\u65f6\u5019\u7f16\u8bd1\u5668\u5177\u4f53\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u80fd\u6bd4 C \u8bed\u8a00\u4ee3\u7801\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4f60\u80fd\u4e86\u89e3\u5230\u81ea\u5df1\u4f7f\u7528\u4e86\u591a\u5c11\u5bc4\u5b58\u5668\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u751f\u6210\u4e86\u9884\u671f\u5916\u7684\u4ee3\u7801\u7b49\u7b49\u3002\u4f46\u8fd9\u4e00\u5b9a\u662f\u4f60\u6700\u540e\u518d\u53bb\u8003\u8651\u53bb\u901a\u8fc7SIMD\u4f18\u5316\u4ee3\u7801\u201d\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2/","title":"Lab2 \u5411\u91cf\u5316\u8ba1\u7b97","text":"<ul> <li>Lab2 \u5411\u91cf\u5316\u8ba1\u7b97<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>Code Design</li> <li>Test Result</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab2/#lab-description","title":"Lab Description","text":"<p>\u672c\u5b9e\u9a8c\u7684\u76ee\u6807\u662f\u4f7f\u7528<code>numpy</code>\uff0c\u7528\u5411\u91cf\u5316\u7684\u8bed\u8a00\u6539\u5199\u53cc\u7ebf\u6027\u63d2\u503c\uff01\uff08\u4e0d\u8981\u51fa\u73b0for\uff09</p> <ol> <li>\u57fa\u51c6\u4ee3\u7801</li> </ol> <p>```python def bilinear_interp_baseline(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:     \"\"\"     This is the baseline implementation of bilinear interpolation without vectorization.     - a is a ND array with shape [N, H1, W1, C], dtype = int64     - b is a ND array with shape [N, H2, W2, 2], dtype = float64     - return a ND array with shape [N, H2, W2, C], dtype = int64     \"\"\"     # Get axis size from ndarray shape     N, H1, W1, C = a.shape     N1, H2, W2, _ = b.shape     assert N == N1</p> <pre><code># Do iteration\nres = np.empty((N, H2, W2, C), dtype=int64)\nfor n in range(N):\n    for i in range(H2):\n        for j in range(W2):\n            x, y = b[n, i, j]\n            x_idx, y_idx = int(np.floor(x)), int(np.floor(y))\n            _x, _y = x - x_idx, y - y_idx\n            # For simplicity, we assume:\n            # - all x are in [0, H1 - 1)\n            # - all y are in [0, W1 - 1)\n            res[n, i, j] = a[n, x_idx, y_idx] * (1 - _x) * (1 - _y) + \\\n                           a[n, x_idx + 1, y_idx] * _x * (1 - _y) + \\\n                           a[n, x_idx, y_idx + 1] * (1 - _x) * _y + \\\n                           a[n, x_idx + 1, y_idx + 1] * _x * _y\nreturn res\n</code></pre> <p>```</p> <ol> <li>\u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0</li> </ol> <p>\u5728\u6e90\u4ee3\u7801\u4e2d\u7684 <code>bilinear_interp/vectorized.py</code> \u4e2d\uff0c\u4f7f\u7528numpy\u5b8c\u6210 <code>bilinear_interp_vectorized</code> \u51fd\u6570\u3002</p> <ol> <li>\u68c0\u67e5\u6b63\u786e\u6027\u4ee5\u53ca\u52a0\u901f\u6bd4</li> </ol> <p>\u8be6\u7ec6\u7684\u5b9e\u9a8c\u6307\u5bfc\u8bf7\u70b9\u51fb</p> <p>\u63d0\u793a\uff1a</p> <ol> <li>\u4e00\u5b9a\u4e00\u5b9a\u6ce8\u610f\u672c\u5b9e\u9a8c\u4e2d\u6240\u751f\u6210\u7684$(N,H_2,W_2,2)$\u4e2d\u7684\u20182\u2019\u662f\u6307\u6bcf\u4e2a\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 a' \u56fe\u4e2d\u5bf9\u5e94\u70b9\u7684\u5750\u6807\uff0c\u5e76\u5c06\u91c7\u6837\u7ed3\u679c\u8fd4\u56de\u3002\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u4e0e\u56fe\u7247\u7684\u653e\u5927\u7f29\u5c0f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff01\uff01\uff01 (\u66f4\u5177\u4f53\u6765\u8bf4\u5e94\u8be5\u662f\u5c5e\u6027\u7a7a\u95f4\u548c\u6837\u672c\u7a7a\u95f4\u8fd9\u6837\u4e00\u4e2a\u6982\u5ff5)</li> <li>\u6b64\u5916\u5408\u7406\u5229\u7528<code>numpy</code>\u81ea\u8eab\u7684\u5e7f\u64ad\u6216\u8005\u63d2\u8f74\u7b49\u65b9\u6cd5\u6765\u8ba1\u7b97\uff08\u4e0d\u8981\u51fa\u73b0<code>for</code>)</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab2/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li>Numpy\uff1aNumPy\u662fPython\u8bed\u8a00\u7684\u4e00\u4e2a\u6269\u5c55\u7a0b\u5e8f\u5e93\u3002\u652f\u6301\u9ad8\u9636\u5927\u89c4\u6a21\u7684\u591a\u7ef4\u6570\u7ec4\u4e0e\u77e9\u9635\u8fd0\u7b97\uff0c\u6b64\u5916\u4e5f\u9488\u5bf9\u6570\u7ec4\u8fd0\u7b97\u63d0\u4f9b\u5927\u91cf\u7684\u6570\u5b66\u51fd\u6570\u5e93\u3002\u5176\u5e95\u5c42\u662fc\u8bed\u8a00\u6765\u5b9e\u73b0\u3002\u901a\u8fc7\u63a5\u53e3\u4ee5\u53ca\u5411\u91cf\u5316\u7684\u8868\u8ff0\u907f\u514d\u4e86python\u4e2d\u5faa\u73af\u8c03\u7528\u7684\u5f00\u9500\uff0c\u6781\u5927\u52a0\u5feb\u4e86\u901f\u5ea6\u3002</li> </ol> <p>\u6211\u8bb0\u5f55\u4e86\u4e00\u4e9bnumpy\u7684\u4f7f\u7528\u5728\u8bfe\u7a0b\u7b14\u8bb0\u4e2d\uff0c\u4ec5\u4f5c\u4e3a\u53c2\u8003</p> <ol> <li>\u53cc\u7ebf\u6027\u63d2\u503c\uff1a\u5982\u4e0b\u56fe\uff0c\u76f8\u4fe1\u80fd\u591f\u5f88\u5feb\u7684\u7406\u89e3\u5176\u4e2d\u7684\u610f\u601d</li> </ol> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab2/#code-design","title":"Code Design","text":"<p>\u6211\u8ba4\u4e3a\u672c\u5b9e\u9a8c\u7684\u8bbe\u8ba1\u7684\u76ee\u6807\u5728\u4e8e\u80fd\u591f\u719f\u6089<code>numpy</code>\u4ee5\u53ca\u5176\u4e2d<code>\u5e7f\u64ad</code>\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u4ee5\u53ca\u77e9\u9635/\u5411\u91cf\u7684\u8ba1\u7b97\u3002\u6211\u8bbe\u8ba1\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n\n    # TODO: Implement vectorized bilinear interpolation\n\n    # Get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assert N == N1\n\n    # Calculate floor indices\n    x_int = np.floor(b[:, :, :, 0]).astype(int)\n    y_int = np.floor(b[:, :, :, 1]).astype(int)\n\n    # Calculate fractional parts\n    x_frac = b[:, :, :, 0] - x_int\n    y_frac = b[:, :, :, 1] - y_int\n\n    # Calculate interpolation weights\n    w1 = (1 - x_frac) * (1 - y_frac)\n    w2 = x_frac * (1 - y_frac)\n    w3 = (1 - x_frac) * y_frac\n    w4 = x_frac * y_frac\n\n    # Perform vectorized bilinear interpolation using numpy.\n    res = a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int, y_int] * w1[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int + 1, y_int] * w2[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int, y_int + 1] * w3[:, :, :, np.newaxis] + \\\n          a[np.arange(N)[:, np.newaxis, np.newaxis],\n            x_int + 1, y_int + 1] * w4[:, :, :, np.newaxis]\n\n    return res.astype(int)\n</code></pre> <p>\u5176\u4e2d\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6700\u540e\u7684\u8ba1\u7b97\u65b9\u6cd5\uff08\u901a\u8fc7\u7f51\u7edc\u4e0a\u7684\u5b66\u4e60\uff09\uff1a</p> <p><code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u662f\u4e00\u79cd\u4f7f\u7528NumPy\u7684\u9ad8\u7ea7\u7d22\u5f15\u6280\u5de7\uff0c\u7528\u4e8e\u4ece\u6570\u7ec4<code>a</code>\u4e2d\u83b7\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</p> <p>\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a</p> <ol> <li><code>np.arange(N)</code>\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5305\u542b\u4ece0\u5230N-1\u7684\u6574\u6570\u3002</li> <li><code>[:, np.newaxis, np.newaxis]</code>\u4f7f\u7528\u5207\u7247\u64cd\u4f5c\u548c<code>np.newaxis</code>\u5c06\u4e00\u7ef4\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e09\u7ef4\u6570\u7ec4\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4e0e<code>x_idx</code>\u548c<code>y_idx</code>\u7684\u7ef4\u5ea6\u5339\u914d\u3002</li> <li><code>x_idx</code>\u548c<code>y_idx</code>\u662f\u4e4b\u524d\u8ba1\u7b97\u5f97\u5230\u7684\u6574\u6570\u7d22\u5f15\u6570\u7ec4\uff0c\u5b83\u4eec\u7684\u5f62\u72b6\u4e3a[N, H2, W2]\u3002</li> <li><code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u4f7f\u7528\u8fd9\u4e9b\u7d22\u5f15\u6570\u7ec4\u6765\u83b7\u53d6<code>a</code>\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u8fd9\u91cc\u7684\u9ad8\u7ea7\u7d22\u5f15\u64cd\u4f5c\u4f1a\u540c\u65f6\u5728\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u7d22\u5f15\uff0c\u8fd4\u56de\u4e00\u4e2a\u5f62\u72b6\u4e3a[N, H2, W2, C]\u7684\u6570\u7ec4\u3002</li> </ol> <p>\u603b\u7ed3\u8d77\u6765\uff0c<code>a[np.arange(N)[:, np.newaxis, np.newaxis], x_idx, y_idx]</code>\u7684\u4f7f\u7528\u9ad8\u7ea7\u7d22\u5f15\u64cd\u4f5c\u4ece\u6570\u7ec4<code>a</code>\u4e2d\u83b7\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u901a\u8fc7\u5728\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u540c\u65f6\u8fdb\u884c\u7d22\u5f15\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e94\u4f4d\u7f6e\u7684\u63d2\u503c\u8ba1\u7b97\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab2/#test-result","title":"Test Result","text":"<p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u52a0\u901f\u6bd4\uff1a\u8fd1\u4e4e34\u500d\uff0c\u53ef\u89c1\u5411\u91cf\u5316\u8ba1\u7b97\u7684\u597d\u5904\uff01</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab2/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u9996\u5148\u901a\u8fc7\u6559\u5b66\u4ee5\u53ca\u5b98\u65b9\u6587\u6863\u7684\u9605\u8bfb\u5b66\u4e60\u4e86<code>NumPy</code>\u7684\u57fa\u672c\u4f7f\u7528\u3002\u901a\u8fc7\u7f51\u7edc\u5de5\u5177\u7684\u5e2e\u52a9\u5b66\u4e60\u5230\u4e86\u4e00\u79cd\u9ad8\u9636\u7684\u7d22\u5f15\u6280\u5de7\u4ee5\u53ca\u6570\u636e\u8ba1\u7b97\u7684\u65b9\u6cd5\u3002</p> <p>\u672c\u6b21\u4e3b\u8981\u78d5\u7eca\u81ea\u5df1\u7684\u5b9e\u9a8c\u96be\u70b9\u662f\u6ca1\u6709\u81ea\u5df1\u8bfb\u9898\uff0c\u4e3b\u89c2\u4ee3\u5165\u4ee5\u4e3a\u662f\u8981\u901a\u8fc7\u63d2\u503c\u6765\u8fdb\u884c\u56fe\u7247\u7684\u653e\u7f29\u64cd\u4f5c\uff0c\u4f46\u5b9e\u9645\u5219\u4e0d\u662f\u8fd9\u6837\u3002\u540e\u6765\u81ea\u5df1\u9605\u8bfb\u4e86\u4ee3\u7801\uff0c\u641e\u6e05\u6bcf\u53e5\u8bed\u6cd5\u4ee5\u53ca\u610f\u4e49\u4e4b\u540e\u5f88\u5feb\u89e3\u51b3\u4e86\u8fd9\u4e2alab\uff01</p> <p>\u6700\u540e\u611f\u8c22\u8001\u5e08\u548c\u5b66\u957f\uff0c\u8ba9\u6211\u901a\u8fc7\u672c\u6b21lab\u7684\u7ec3\u4e60\u5bf9\u9ad8\u6027\u80fd\u8ba1\u7b97\u4ee5\u53ca\u4f18\u5316\u6709\u4e86\u4e00\u4e2a\u66f4\u6e05\u6670\u7684\u8ba4\u8bc6\uff01</p>"},{"location":"ZJU_CS/HPC/homework/lab3/","title":"Lab-3 \u57fa\u4e8eCUDA\u5bf9GEMM\u7684\u4f18\u5316","text":"<ul> <li>Lab-3 \u57fa\u4e8eCUDA\u5bf9GEMM\u7684\u4f18\u5316<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>AdderCudaKernel</li> <li>Shared Memory</li> <li>\u5faa\u73af\u5c55\u5f00</li> <li>\u6d4b\u8bd5\u7ed3\u679c</li> </ul> </li> <li>Discussion</li> <li>Bonus</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab3/#lab-description","title":"Lab Description","text":"<p>\u5177\u4f53\u63cf\u8ff0\u8bf7\u89c1{\u5b9e\u9a8c\u624b\u518c}(https://zjusct.pages.zjusct.io/summer-course-2023/HPC101-Labs-2023/Lab3-Cuda/)</p> <p>\u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08General matrix multiply, GEMM\uff09\u662f BLAS \u4e2d\u7ecf\u5178\u7684\u5b50\u7a0b\u5e8f\u4e4b\u4e00\u3002[2] \u4f5c\u4e3a\u5f53\u4eca\u79d1\u5b66\u8ba1\u7b97\u6700\u5e38\u89c1\u7684\u8ba1\u7b97\u4efb\u52a1\u4e4b\u4e00\uff0cGEMM \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u77e9\u9635\u4e58\u6cd5\u3002\u4f18\u5316 GEMM \u4e5f\u662f HPC \u754c\u975e\u5e38\u57fa\u7840\u7684\u4efb\u52a1\u3002</p> <p>\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 CUDA \u5b8c\u6210\u4e00\u4e2a\u9ad8\u6027\u80fd GEMM \u5b9e\u73b0\u3002</p> <p>Bonus\uff1a\u53e6\u5916\u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u7684 GPU \u4e0a\uff0c\u5305\u542b\u4e0a\u8ff0\u63d0\u53ca\u7684 Tensor Core \u6a21\u5757\u3002\u5408\u7406\u7684\u4f7f\u7528\u5b83\u80fd\u591f\u8fdb\u4e00\u6b65\u52a0\u901f\u5377\u79ef\u7684\u8ba1\u7b97\u3002\u5728 Cuda 9.0 \u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c <code>PTX</code> \u6c47\u7f16\u6216\u8005 CUDA \u7684 C++ \u6269\u5c55 <code>nvcuda::wmma</code> \u7684\u65b9\u5f0f\u6765\u663e\u5f0f\u5730\u8c03\u7528 Tensor Core \u6765\u8fdb\u884c\u8ba1\u7b97\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li> <p>CUDA\u4f7f\u7528\uff1a\u5efa\u8bae\u4e0a\u5b98\u7f51\u3002\u81f3\u4e8elab\u4e2d\u63d0\u5230\u7684\u4e0d\u540cAPI\u7684\u533a\u522b\uff0c\u53ef\u89c1\u535a\u5ba2</p> </li> <li> <p>\u5173\u4e8e\u9ad8\u6027\u80fd\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\uff08GEMM\uff09\u7684\u8bf4\u660e. CS217</p> </li> <li> <p>Introduction to shared memory.(link) </p> </li> <li> <p>\u4e00\u4e2aGithub\u4e0a\u4e0d\u540c\u4f18\u5316\u65b9\u6cd5\u7684\u5bf9\u6bd4</p> </li> <li> <p>CUDA\u81ea\u5df1\u5bf9shared memory \u7684\u4f7f\u7528\u7684\u793a\u4f8b3.2.4 GEMM</p> </li> <li> <p>\u6709\u4e9b\u77e5\u8bc6\u611f\u89c9\u95eegpt\u83b7\u53d6\u7684\u901f\u5ea6\u4f1a\u66f4\u5feb\uff0c\u4f46\u662f\u5177\u4f53\u7684\u7ec6\u8282\u8fd8\u662f\u5728\u5b98\u7f51\u4e0a\u67e5\u9605\u66f4\u597d\uff08\u5b98\u7f51\u7684\u77e5\u8bc6\u4ecb\u7ecd\u975e\u5e38\u5168\uff09\\</p> </li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab3/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":"<pre><code>/// \\brief Let A to be A + B.\n__global__ void AdderCudaKernel(double *__restrict__ a,\n                                  const double *__restrict__ b)\n{\n    // const int i = blockIdx.x * block_size + threadIdx.x;\n    // const int j = blockIdx.y * block_size + threadIdx.y;\n    // if (i &lt; size &amp;&amp; j &lt; size)\n    // {\n    //   a(i, j) += b(i, j);\n    // }\n    __shared__ double shared_a[block_size][block_size];\n    __shared__ double shared_b[block_size][block_size];\n\n    int i = blockIdx.x * block_size + threadIdx.x;\n    int j = blockIdx.y * block_size + threadIdx.y;\n\n    if (i &lt; size &amp;&amp; j &lt; size) {\n        shared_a[threadIdx.x][threadIdx.y] = a[i * size + j];\n        shared_b[threadIdx.x][threadIdx.y] = b[i * size + j];\n        __syncthreads();\n\n        shared_a[threadIdx.x][threadIdx.y] += shared_b[threadIdx.x][threadIdx.y];\n        __syncthreads();\n\n        a(i,j) = shared_a[threadIdx.x][threadIdx.y];\n    }\n}\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ a, \n                                   const double *__restrict__ b, \n                                   double *__restrict__ result) \n{     \n    // Get the index of the current thread\n    const int row = blockIdx.y * blockDim.y + threadIdx.y;\n    const int col = blockIdx.x * blockDim.x + threadIdx.x;\n    const int block_num = (size + block_size - 1) / block_size;\n\n    // Define shared memory\n    alignas(32) __shared__ double shared_a[block_size][block_size];\n    alignas(32) __shared__ double shared_b[block_size][block_size];\n\n    // Perform matrix multiplication operation\n    double sum = 0.0f;\n    for (int i = 0; i &lt; block_num; i++) {\n        // Load data from A and B into shared memory\n        int idx_a = row * size + i * block_size + threadIdx.x;\n        int idx_b = (i * block_size + threadIdx.y) * size + col;\n        shared_a[threadIdx.y][threadIdx.x] = (row &lt; size &amp;&amp; (i * block_size + threadIdx.x) &lt; size) ? a[idx_a] : 0.0f;\n        shared_b[threadIdx.y][threadIdx.x] = ((i * block_size + threadIdx.y) &lt; size &amp;&amp; col &lt; size) ? b[idx_b] : 0.0f;\n         // Synchronize to make sure the matrices are loaded before starting the computation\n        __syncthreads();\n\n        #pragma unroll\n        for (int j = 0;  j &lt; block_size; j ++) {\n            // sum = fma(shared_a[threadIdx.y][j], shared_b[j][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 1], shared_b[j + 1][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 2], shared_b[j + 2][threadIdx.x], sum);\n            // sum = fma(shared_a[threadIdx.y][j + 3], shared_b[j + 3][threadIdx.x], sum);\n            sum += shared_a[threadIdx.y][j] * shared_b[j][threadIdx.x];\n        }\n        // Synchronize to make sure the computation is done before loading the next sub-matrix\n        __syncthreads();\n    }\n\n    if(row &lt; size &amp;&amp; col &lt; size) {\n        // Write the result back to result_kernel\n        result(row, col) = sum;\n    }\n}\n</code></pre> <p>Baseline\u5206\u6790\uff1a\u5bf9\u4e8ebaseline\u800c\u8a00\uff0c\u5176\u901f\u5ea6\u6162\u7684\u539f\u56e0\u4e00\u65b9\u9762\u662f\u53ea\u80fd\u4e32\u884c\u7ebf\u6027\u8fdb\u884c\u8ba1\u7b97\uff1b\u53e6\u4e00\u65b9\u9762\u5728\u4e8e\u6bcf\u6b21\u5faa\u73af\u90fd\u8981\u5bf9\u4e3b\u5b58\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u3002\u6545\u6211\u4eec\u8981\u9488\u5bf9\u4ee5\u4e0a\u7684\u5185\u5bb9\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u4f18\u5316\u7b56\u7565\uff1a\u5171\u4eab\u5185\u5b58\uff0c\u5185\u5b58\u5bf9\u9f50\uff0c\u5faa\u73af\u5c55\u5f00\uff08\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5b9e\u73b0\uff09\u3001fma\u7b49</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#addercudakernel","title":"AdderCudaKernel","text":"<p>\u7b2c\u4e00\u4e2a\u662f\u5e38\u89c4\u7684AdderCudaKernel\u7684\u6d4b\u8bd5\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u7684\u6d4b\u8bd5\u65f6\u95f4\uff0c\u7531\u4e8e\u6bcf\u6b21\u6d4b\u8bd5\u5177\u6709\u968f\u673a\u4ee5\u53ca\u4e0d\u7a33\u5b9a\u6027\uff0c\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\u6211\u5206\u6790\u53ef\u80fd\u662f<code>__syncthreads()\uff1b</code>\u5bfc\u81f4\u505c\u987f\u7684\u65f6\u95f4\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#shared-memory","title":"Shared Memory","text":"<p>\u5171\u4eab\u5185\u5b58\u662f\u6d4b\u8bd5\u4e2d\u52a0\u901f\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u6211\u4eec\u5176\u4e2d\u4f7f\u7528\u5185\u5b58\u5bf9\u9f50\u7684\u65b9\u5f0f\u80fd\u591f\u6709\u4e9b\u8bb8\u52a0\u901f\u3002</p> <p>\u5728\u6d4b\u8bd5\u4e2d\u6211\u4eec\u53d1\u73b0\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\u662f<code>0xc000</code>,\u56e0\u6b64\u6211\u4eec\u5c06blocksize\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a16\u6bd4\u8f83\u5408\u9002\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#_1","title":"\u5faa\u73af\u5c55\u5f00","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u4f18\u5316\u624b\u6bb5\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662fO3\u4f18\u5316\uff0c\u4ee5\u53ca<code>#pragma unroll</code>,\u63d0\u793a\u7f16\u8bd1\u5668\uff0c\u6545\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u4e0d\u7528\u81ea\u5df1\u624b\u5199\u5faa\u73af\u5c55\u5f00\u7684\u4f18\u5316\u3002</p> <p>\u5176\u4e2d<code>fma</code> \u503c\u5f97\u6211\u4eec\u5b66\u4e60\uff0c\u8fd9\u662fCUDA\u672c\u8eab\u81ea\u5e26\u7684\u4e00\u79cd\u52a0\u901f\u6307\u4ee4\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#_2","title":"\u6d4b\u8bd5\u7ed3\u679c","text":"<p>\u6545\u52a0\u901f\u6bd4\u4e3a0.94818</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#discussion","title":"Discussion","text":"<p>\u672c\u6b21lab\u6559\u4f1a\u4e86\u6211\u5982\u4f55\u4f7f\u7528CUDA\u8fdb\u884cGPU\u7f16\u7a0b\uff0c\u5728\u6574\u4e2a\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u57fa\u672c\u9605\u8bfb\u4e86\u5b98\u65b9\u6587\u6863\uff0c\u5e76\u4e14\u4e86\u89e3\u4e86thread\u548cwarp\u7f16\u7a0b\u601d\u60f3\uff0c\u4ee5\u53ca\u7ed3\u5408\u8bfe\u4e0a\u7684\u77e5\u8bc6\uff0c\u6df1\u5165\u7406\u89e3\u4e86\u5185\u5b58\u7684\u5185\u90e8\u6784\u9020\u4ee5\u53caNVIDA\u663e\u5361\u7684\u81ea\u8eab\u7ed3\u6784\u7279\u6027\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u4f18\u5316\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab3/#bonus","title":"Bonus","text":"<p>\u5173\u4e8eBonus\uff0c\u867d\u7136\u81ea\u5df1\u6ca1\u6709\u5b8c\u6574\u505a\u51fa\u6765\u7528tensor core\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4f46\u81ea\u5df1\u4e5f\u5728\u8fd9\u4e2a\u4e0a\u9762\u6295\u5165\u4e86\u6bd4\u8f83\u591a\u7684\u7cbe\u529b\uff0c\u6700\u540e\u6839\u636e\u6211\u7684\u6d4b\u8bd5\u5e94\u8be5\u95ee\u9898\u8fd8\u662f\u51fa\u73b0\u5728\u4e86block\u548cgrid\u7684\u6570\u76ee\u914d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u5bfc\u81f4\u8ba1\u7b97\u7ed3\u679c\u6709\u8bef\u3002\u6211\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>dim3 grid((size + block_size * WMMA_M - 1) / (block_size * WMMA_M),\n            (size + block_size * WMMA_N - 1) / (block_size * WMMA_N));\ndim3 block(block_size, block_size);\n\nconst int WMMA_M = 8;\nconst int WMMA_N = 8;\nconst int WMMA_K = 4;\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ a, \n                                   const double *__restrict__ b, \n                                   double *__restrict__ result) \n{\n    // Tile using a 2D grid\n    const int warpM = (blockIdx.x * blockDim.x + threadIdx.x) / warpSize;\n    const int warpN = (blockIdx.y * blockDim.y + threadIdx.y);\n\n    // Declare the fragments\n    using namespace nvcuda;\n    wmma::fragment&lt;wmma::matrix_a, WMMA_M, WMMA_N, WMMA_K, double, wmma::col_major&gt; a_frag;\n    wmma::fragment&lt;wmma::matrix_b, WMMA_M, WMMA_N, WMMA_K, double, wmma::col_major&gt; b_frag;\n    wmma::fragment&lt;wmma::accumulator, WMMA_M, WMMA_N, WMMA_K, double&gt; acc_frag;\n    //initialize\n    wmma::fill_fragment(acc_frag, 0.0);\n\n    // Loop over size\n    for (int i = 0; i &lt; size; i += WMMA_K) {\n        int aRow = warpM * WMMA_M;\n        int aCol = i;\n\n        int bRow = i;\n        int bCol = warpN * WMMA_N;\n\n        // Bounds checking\n        if (aRow &lt; size &amp;&amp; aCol &lt; size &amp;&amp; bRow &lt; size &amp;&amp; bCol &lt; size) {\n          // Load the inputs\n          wmma::load_matrix_sync(a_frag, a + aRow + aCol * size, size);\n          wmma::load_matrix_sync(b_frag, b + bRow + bCol * size, size);\n\n          // Perform the matrix multiplication\n          wmma::mma_sync(acc_frag, a_frag, b_frag, acc_frag);\n        }\n    }\n\n    int cRow = warpM * WMMA_M;\n    int cCol = warpN * WMMA_N;\n    // Store the output\n    if (cRow &lt; size &amp;&amp; cCol &lt; size) {\n    wmma::store_matrix_sync(result + cRow + cCol * size, acc_frag, size, wmma::mem_col_major);\n    }\n}\n</code></pre> <p></p> <p>\u7ed3\u8bba\uff1a\u901a\u8fc7tensor core\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u80fd\u5f88\u5927\u7a0b\u5ea6\u4e0a\u907f\u514d\u51b2\u7a81\u5e76\u4e14\u52a0\u901f\u8ba1\u7b97\u3002\u901a\u8fc7printf\u5927\u6cd5\u6211\u770b\u51fa\u6211\u7684\u8ba1\u7b97\u7ed3\u679c\u4e0e\u6b63\u786e\u7684\u8ba1\u7b97\u7ed3\u679c\u76f8\u5dee\u4e86\u5927\u7ea64\u500d\u5de6\u53f3\uff0c\u4f46\u4e0d\u592a\u7406\u89e3\u81ea\u5df1\u9519\u5728\u4e86\u54ea\u91cc\uff1f\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u5e0c\u671b\u8d85\u7b97\u961f\u7684\u5b66\u957f\u53ef\u4ee5\u5e2e\u5fd9\u6307\u51fa\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/","title":"Lab-4 PCG\u7b97\u6cd5\u5728OMP\u548cMPI\u4e0b\u7684\u4f18\u5316","text":"<ul> <li>Lab-4 PCG\u7b97\u6cd5\u5728OMP\u548cMPI\u4e0b\u7684\u4f18\u5316<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>OMP</li> <li>MPI</li> <li>SIMD\u548c\u5faa\u73af\u5c55\u5f00</li> </ul> </li> <li>Profile<ul> <li>Intel trace analyzer</li> <li>Vtune</li> </ul> </li> <li>Bonus</li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab4/#lab-description","title":"Lab Description","text":"<p>\u6211\u4eec\u63d0\u4f9b<code>PCG</code>\u4ee3\u7801\u7684\u4e32\u884c\u7248\u672c\u4f5c\u4e3a\u57fa\u51c6\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u4ee3\u7801\u6846\u67b6\u4e2d\u6709\u4e00\u90e8\u5206\u4ee3\u7801\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u89c1\u4ee3\u7801\u7684<code>README</code>\u6587\u4ef6\uff08\u5982\u679c\u4f60\u8ba4\u4e3a\u4ee3\u7801\u6846\u67b6\u6709\u4e0d\u8db3\u4e4b\u5904\uff0c\u6216\u662f\u6709\u5176\u4ed6\u503c\u5f97\u4fee\u6539\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u5411\u6211\u4eec\u63d0\u51fa\u610f\u89c1\uff09\u3002\u7531\u4e8e\u8fed\u4ee3\u7b97\u6cd5\u7684\u65f6\u95f4\u7a33\u5b9a\u6027\u8f83\u5dee\uff0c<code>main.c</code>\u5c06\u5728\u540c\u6837\u4e00\u7ec4\u8f93\u5165\u4e0a\u91cd\u590d\u8fd0\u884c<code>pcg</code>\u4ee3\u780110\u6b21\uff0c\u603b\u65f6\u95f4\u4f5c\u4e3a\u5728\u8be5\u7ec4\u8f93\u5165\u4e0a\u7684\u8bc4\u6d4b\u6807\u51c6\u3002</p> <p>\u4ee3\u7801\u5728\u6d4b\u8bd5\u65f6\u5c06\u6d4b\u8bd54\u7ec4\u56fa\u5b9a\u7684\u8f93\u5165\uff0c\u5176\u4e2d\u4e09\u7ec4\u516c\u5e03\u4e8e\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u76f8\u5bf9\u5e94\u7684\u77e9\u9635\ufffd\u89c4\u6a21\u5206\u522b\u4e3a2001x2001\u30014001x4001\u30016001x6001\uff0c\u6700\u540e\u4e00\u7ec4\u8f93\u5165\u4e0d\u516c\u5e03\u3002<code>PCG</code>\u7b97\u6cd5\u901a\u5e38\u7528\u4e8e\u6c42\u89e3\u5927\u89c4\u6a21\u7684\u7a00\u758f\u77e9\u9635\uff0c\u7a00\u758f\u77e9\u9635\u4e0a\u53ef\u4ee5\u91c7\u53d6\u7279\u6b8a\u7684\u5b58\u50a8\u65b9\u5f0f\u6765\u8282\u7701\u7a7a\u95f4\u548c\u52a0\u901f\u8ba1\u7b97\u3002\u4e3a\u4e86\u4ee3\u7801\u7b80\u5355\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u9488\u5bf9\u7a00\u758f\u77e9\u9635\u8fdb\u884c\u7684\u4f18\u5316\uff0c\u7ed9\u51fa\u7684\u8f93\u5165\u6570\u636e\u90fd\u662f\u7a20\u5bc6\u77e9\u9635\u3002</p> <p>\u6b64\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u5728\u4ee3\u7801\u4e0a\u8fdb\u884cProfile\u3002\u4f9d\u636eProfile\u7ed3\u679c\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u5f97\u5230</p> <ul> <li>\u8017\u65f6\u6700\u591a\u7684\u4e09\u4e2aMPI\u51fd\u6570\uff1b</li> <li>\u7a0b\u5e8f\u5728MPI\u4e0a\u6d88\u8017\u7684\u603b\u65f6\u95f4\u3002</li> </ul> <p>Profiler\u8fd8\u4f1a\u63d0\u4f9b\u66f4\u591a\u5176\u4ed6\u7684\u4fe1\u606f\u3002\u5982\u679c\u4f60\u80fd\u591f\u83b7\u5f97\u5e76\u89e3\u91ca\u5176\u4ed6Profile\u83b7\u5f97\u7684\u6570\u636e\u548c\u56fe\u8868\uff0c\u6216\u8005\u80fd\u591f\u6839\u636eProfile\u7684\u7ed3\u679c\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u6709\u6548\u7684\u4f18\u5316\uff0c\u5c06\u80fd\u591f\u5728Profile\u90e8\u5206\u83b7\u5f97\u66f4\u597d\u7684\u5206\u6570\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<p>PCG\uff08\u82f1\u8bed\uff1apreconditioned conjugate gradient\uff0c\u9884\u5904\u7406\u5171\u8f6d\u68af\u5ea6\u7b97\u6cd5\uff09\u662f\u4e00\u79cd\u5229\u7528\u591a\u6b21\u8fed\u4ee3\u5bf9\u65b9\u7a0b\u7ec4\u8fdb\u884c\u6c42\u89e3\u7684\u65b9\u6cd5\u3002\u76f8\u6bd4\u4e8e\u4f7f\u7528\u76f4\u63a5\u6cd5\u6c42\u89e3\u65b9\u7a0b\u7ec4\uff0c\u5176\u5bf9\u4e8e\u5b58\u50a8\u7a7a\u95f4\u7684\u8981\u6c42\u4e0d\u9ad8\u4e14\u6269\u5c55\u6027\u826f\u597d\uff0c\u5728\u6d89\u53ca\u65b9\u7a0b\u7ec4\u6c42\u89e3\u7684\u79d1\u5b66\u8ba1\u7b97\u5e94\u7528\u4e2d\u5177\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\u3002\u5927\u89c4\u6a21\u65b9\u7a0b\u7ec4\u6c42\u89e3\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u4f7f\u7528\u76f4\u63a5\u6cd5\u5f80\u5f80\u4f1a\u56e0\u4e3a\u7a0b\u5e8f\u7684\u5d29\u6e83\u800c\u5bfc\u81f4\u4e4b\u524d\u7684\u8ba1\u7b97\u6210\u4e3a\u65e0\u6548\u8ba1\u7b97\u3002\u518d\u6b21\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u4e4b\u524d\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u90e8\u5206\u8981\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u4e0e\u8ba1\u7b97\u8d44\u6e90\uff0c\u4f7f\u7528PCG\u7b97\u6cd5\u80fd\u591f\u6709\u6548\u5730\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>MPI\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u89c1\u6211\u7684AIPP\u7b14\u8bb0</p> <p>OpenMP \u7684\u4f7f\u7528\u76f8\u5bf9\u7b80\u5355\uff0c\u53ef\u4ee5\u53bb\u770bxg\u7684\u7b14\u8bb0</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab4/#omp","title":"OMP","text":"<p>\u7531\u4e8e\u6700\u521d\u5bf9mpi\u4f7f\u7528\u8fd8\u4e0d\u591f\u719f\u6089\uff0c\u6211\u5148\u8003\u8651\u4f7f\u7528OpenMP\u8fdb\u884c\u4f18\u5316\u3002\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5982\u679c\u5728<code>PCG()\u51fd\u6570</code>\u8fd0\u884c\u7684for\u5faa\u73af\u5916\u5957\u7528OpenMP\uff0c\u5219\u53ef\u4ee5\u5145\u5206\u5229\u7528\u4e86\u5355\u8282\u70b9\u591a\u6838\u5fc3\u7684\u4f18\u52bf\uff0c\u5c06\u65f6\u95f4\u76f4\u63a5\u7f29\u77ed10\u500d\u5de6\u53f3\u3002</p> <pre><code># pragma omp parallel for\nfor (int i = 0; i &lt; 10; ++i) {\n    PCG(size, A, b);\n}\n</code></pre> <p>\u4f7f\u7528<code>srun -N 4 -n 4 --cpu-bind=cores --cpus-per-task=24 ./pcg input_1.bin</code></p> <p>\u6b64\u5916\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u5bf9\u6709\u5faa\u73af\u7684\u90e8\u5206\u4f7f\u7528OpenMP\u90fd\u53ef\u4ee5\u52a0\u901f\uff0c\u8fd9\u91cc\u503c\u5f97\u601d\u8003\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab4/#mpi","title":"MPI","text":"<p>PCG \u7b97\u6cd5\u7684\u4e3b\u8981\u8fed\u4ee3\u8fc7\u7a0b\u4ec5\u6d89\u53ca\u77e9\u9635\u5411\u91cf\u4e58\u6cd5\u3001\u5411\u91cf\u5185\u79ef\u4ee5\u53ca\u5411\u91cf\u7684\u6570\u91cf\u79ef\uff0c\u5747\u4e3a\u5178\u578b\u7684 embarrassingly parallel \u60c5\u5f62\uff0c\u56e0\u6b64\u53ef\u8f7b\u677e\u5229\u7528 MPI \u4f18\u5316\u7a0b\u5e8f\u3002\uff08\u6b64\u5916\uff0cMPI\u7684\u4ee3\u7801\u65e0\u6cd5\u5957\u7528OMP\u4e2d\u5bf9PCG\u51fd\u6570\u7684\u5e76\u884c\uff01\uff09</p> <p>\u8d77\u5148\u7531\u4e8eOpenMP\u7684\u4f18\u5316\u601d\u8def\uff0c\u7531\u4e8e<code>void MatrixMulVec \uff08\uff09</code>\u8ba1\u7b97\u4e3a$O(n^2)$\u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u53ea\u60f3\u7528MPI\u5bf9\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4f18\u5316\uff0c\u53ef\u64cd\u4f5c\u540e\u53d1\u73b0\u8fd9\u6837\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u5177\u4f53\u7684\u539f\u56e0\u4ecd\u7136\u672a\u77e5(\u540e\u6765\u53d1\u73b0\u7531\u4e8e\u7ebf\u7a0b\u5757\u5927\u5c0f\u4e0d\u4e00\u5b9a\uff0c\u6545\u5e94\u5f53\u4f7f\u7528MPI_GatherV\u51fd\u6570\u800c\u4e0d\u662fMPI_ALLGather\u51fd\u6570\u3002</p> <p>\u56e0\u6b64\u6211\u5728ddl\u7684\u4e24\u5929\u524d\u5f00\u59cb\u91cd\u65b0\u66f4\u6362\u601d\u8def\uff0c\u76f4\u63a5\u5bf9\u6574\u4e2a<code>PCG</code>\u51fd\u6570\u8fdb\u884cMPI\u5e76\u884c\u64cd\u4f5c\u3002</p> <p></p> <p>\u518d\u901a\u8fc7<code>printf</code>\u77e5\u9053\u4e86\u4e2d\u95f4\u51fa\u73b0\u4e86NA\u7684\u60c5\u51b5\uff0c\u662f\u7531\u4e8e<code>MatrixMulVec</code>\u51fd\u6570\u7684\u5199\u6cd5\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4ecd\u7136\u5f52\u548e\u5230MPIGatherV\u4e0a\u9762\u3002\uff08\u4f46\u8fd9\u91cc\u4ecd\u6709\u8ff7\u60d1\u7684\u70b9\u662f\u5982\u679c\u6211\u73af\u5883\u4e09\u4e2a\u90fd\u52a0\u8f7d\u90a3\u4e48\u4e0d\u80fd\u8dd1\u901a\uff0c\u4f46\u5982\u679c\u6211\u53ea\u542f\u7528OpenMP\u5219\u90fd\u53ef\u4ee5\u8dd1\u901a\uff09</p> <p>\u601d\u8def\u65e2\u662f\u5bf9\u6240\u6709\u77e9\u9635\u8fdb\u884c\u62c6\u5206\uff0c\u5229\u7528\u901a\u4fe1\u7684\u4f18\u52bf\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u540e\u6765\u7ecf\u8fc7\u81ea\u5df1\u7684\u52aa\u529b\u5c1d\u8bd5\uff0c\u53d1\u73b0\u53ef\u4ee5\u6b63\u5e38\u8ba1\u7b97\u4f46\u7ed3\u679c\u6709\u8bef\uff0c\u539f\u56e0\u662f\uff1f\u4e00\u6a21\u4e00\u6837\u7684\u4ee3\u7801\u6628\u5929\u8dd1\u901a\u51e0\u5929\u8dd1\u4e0d\u901a\u771f\u7684\u5f88\u5947\u602a</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include \"judge.h\"\n\ndouble dot(double a[], double b[], int size) {\n    double dot_sum = 0;\n    double local_dot_sum = 0;\n    #pragma omp parallel for reduction(+:local_dot_sum)\n    for (int i = 0; i &lt; size; ++i) {\n        local_dot_sum += a[i] * b[i];\n    }\n    MPI_Allreduce(&amp;local_dot_sum, &amp;dot_sum, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);\n    return dot_sum;\n}\n\nvoid MatrixMulVec(int size, double A[][size], double x[], double b[], int start, int end) {    \n    #pragma omp parallel for\n    for (int i = start; i &lt; end; ++i) {\n        double temp = 0;\n        for (int j = 0; j &lt; size; ++j) {\n            temp += A[i][j] * x[j];\n        }\n        #pragma omp critical\n        {\n            b[i - start] = temp;\n        }\n    }\n}\n\nvoid PCG(int size, double A[][size], double b[]) {\n\n    int rank, num_procs;\n    MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);\n    MPI_Comm_size(MPI_COMM_WORLD, &amp;num_procs);\n    MPI_Bcast(A, size * size, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n    MPI_Bcast(b, size, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n    if (rank == 0) {\n        start_timer();\n    }\n\n    int chunk_size = size / num_procs;\n    int remainder = size % num_procs;\n\n    int start = rank * chunk_size;\n    int end = start + chunk_size;\n    if (rank == num_procs - 1) {\n        end += remainder;\n    }\n    int counts = end - start;\n\n    double r[counts], x[counts], z[counts], p[counts];\n    double alpha, beta, gamma, r_dot_z, A_dot_p[counts];\n\n    /* initialization */\n    // #pragma omp parallel for\n    for (int i = start; i &lt; end; ++i){\n        x[i - start] = 0;\n        r[i - start] = b[i];\n        z[i - start] = r[i - start] / A[i][i];\n        p[i - start] = z[i - start];\n    }\n\n    /* solve */\n    int iter = 0;\n    double loss = 0;\n    int quit = 1;\n    r_dot_z = dot(r, z, counts);\n\n    double* local_x = (double*)malloc(size * sizeof(double));\n    double* local_p = (double*)malloc(size * sizeof(double));\n    int* recvcounts = (int*)malloc(num_procs * sizeof(int));\n    int* displs = (int*)malloc(num_procs * sizeof(int));\n    if (local_x == NULL || local_p == NULL) {\n        fprintf(stderr, \"Failed to allocate memory for local memory\\n\");\n        exit(1);\n    }\n\n    MPI_Allgather(&amp;counts, 1, MPI_INT, recvcounts, 1, MPI_INT, MPI_COMM_WORLD);\n\n    displs[0] = 0;\n    for (int i = 1; i &lt; num_procs; i++) {\n        displs[i] = displs[i-1] + recvcounts[i-1];\n    }\n\n    do {            \n        /* A * p_k */\n        MPI_Allgatherv(p, counts, MPI_DOUBLE, local_p, recvcounts, displs, MPI_DOUBLE, MPI_COMM_WORLD);\n        MatrixMulVec(size, A, local_p, A_dot_p, start, end);\n\n        /* alpha */\n        alpha = r_dot_z / dot(p, A_dot_p, counts);\n\n        /* x */\n        #pragma omp parallel for\n        for (int i = 0; i &lt; counts; ++i) {\n            x[i] += alpha * p[i];\n        }\n\n        /* r &amp; loss */\n\n        double my_loss = 0.0;\n        // #pragma omp parallel for reduction(+:loss)\n        for (int i = 0; i &lt; counts; ++i) {\n            r[i] = r[i] - alpha * A_dot_p[i];\n            if (r[i]) quit = 0;\n            my_loss += fabs(r[i]);\n        }\n        if (quit) break;\n        MPI_Allreduce(&amp;my_loss, &amp;loss, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);\n\n        /* z */\n        // #pragma omp parallel for\n        for (int i = start; i &lt; end; ++i) {\n            z[i - start] = r[i - start] / A[i][i];\n        }\n\n        /* beta */\n        double temp = dot(z, r, counts);\n        beta = temp / r_dot_z;\n        r_dot_z = temp;\n\n        /* p */\n        // #pragma omp simd\n        for (int i = 0; i &lt; counts; ++i) {\n            p[i] = z[i] + beta * p[i];\n        }\n    }\n    while (++iter &lt; MAXITER &amp;&amp; loss &gt; EPI);\n\n\n    MPI_Gatherv(x, counts, MPI_DOUBLE, local_x, recvcounts, displs, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n\n    if (rank == 0) {\n        check(size, A, local_x, b, iter);\n    }\n    free(local_x);\n    free(local_p);\n    free(recvcounts);\n    free(displs);\n}\n</code></pre> <p>OpenMPI\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>IntelMPI\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>ps\uff1ainput_2\u5927\u6982\u662f30\u591as\uff0cinput_3\u662f180\u591as\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#simd","title":"SIMD\u548c\u5faa\u73af\u5c55\u5f00","text":"<p>\u901a\u8fc7\u7f51\u7ad9\u89c2\u5bdf\u6c47\u7f16\u540e\u6211\u4eec\u53d1\u73b0,\u5f53\u6211\u4eec\u542f\u7528<code>O3</code>\u7f16\u8bd1\u7f16\u8bd1\u5668\u4f1a\u5e2e\u6211\u4eec\u81ea\u52a8\u5411\u91cf\u5316\u548c\u5faa\u73af\u5c55\u5f00\u3002\u6545\u4e0d\u518d\u6b21\u4f18\u5316\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab4/#profile","title":"Profile","text":"<p>\u8fd9\u4e2a\u677f\u5757\u5efa\u8bae\u4e0b\u8f7d\u6210\u672c\u5730\u7684\u5206\u6790\u8f6f\u4ef6\uff0c\u975e\u5e38\u4fbf\u6377\u7684\u5c31\u80fd\u5b8c\u6210\u5206\u6790\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#intel-trace-analyzer","title":"Intel trace analyzer","text":"<p>\u7a0b\u5e8f\u5728MPI\u4e2d\u603b\u8017\u65f648.7s\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5728\u6211\u7684\u7a0b\u5e8f\u7248\u672c\u4e2d\uff0cMPI Calls\u7684\u65f6\u95f4\u8fd8\u662f\u8fc7\u957f\u4e86\uff0c\u5177\u4f53\u5206\u6790\u540e\u5f97\u5230\u5177\u4f53\u6570\u636e\uff1a</p> <p></p> <p>\u8017\u65f6\u6700\u957f\u7684\u4e09\u4e2a\u51fd\u6570\u662f\uff1a<code>MPI_Allreduce</code> <code>MPI_Allgatherv</code> <code>MPI_Bcast</code></p> <p>\u7531\u6b64\u6211\u4eec\u770b\u5230\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\uff0cAllreduce\u6240\u5360\u7528\u7684\u65f6\u95f4\u592a\u591a\u3002\u5206\u6790\u6765\u770b\u4e3b\u8981\u662f\u5728\u505adot\u8fd0\u7b97\u65f6\u6211\u4f1a\u8ba9\u4e0d\u540c\u7684\u8282\u70b9\u53bb\u505a\u4e0d\u540c\u5411\u91cf\u7247\u6bb5\u7684\u8ba1\u7b97\u540ereduce\u3002\u7ecf\u8fc7\u4e4b\u540e\u7684\u8ba1\u7b97\u5206\u6790\uff0c\u5f88\u53ef\u80fd\u4f7f\u7528Allreduce\u7684\u4ee3\u4ef7\u4f1a\u5927\u4e8e\u5176\u5e26\u7ed9\u6211\u4eec\u7684\u597d\u5904\u3002</p> <p>\u6b64\u5916AllGatherv\u7684\u5f00\u9500\u662f\u4ee4\u6211\u6ca1\u6709\u60f3\u5230\u7684\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u7684\u4ee3\u4ef7\u5728\u4e8eA_dot_p\u6240\u4f7f\u7528\u7684\u5206\u5757\u8ba1\u7b97\u7684\u96c6\u5408\uff0c\u6211\u8ba4\u4e3a\u6b64\u5904\u7684\u65f6\u95f4\u635f\u5931\u5b8c\u5168\u53ef\u4ee5\u4ece\u4ee3\u7801\u8bbe\u8ba1\u4e0a\u6240\u907f\u514d\uff0c\u4f46\u7531\u4e8e\u5047\u671f\u5185\u5e76\u6ca1\u592a\u5408\u7406\u5b89\u6392\u81ea\u5df1\u7684\u65f6\u95f4\u5bfc\u81f4\u6240\u5269\u65f6\u95f4\u8f83\u5c11\uff0c\u65e0\u6cd5\u5728\u8fd9\u4e2a\u65b9\u9762\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u4e86\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#vtune","title":"Vtune","text":"<p>\u4f7f\u7528Vtune\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u7a0b\u5e8f\u4e2d\u7684\u4e00\u4e9b\u6c47\u7f16\u4ee3\u7801\u4ee5\u53ca\u51fd\u6570\u6267\u884c\u7684\u65f6\u673a\u3002\u6211\u4eec\u53d1\u73b0\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\u8bbe\u8ba1\u7684\u5e76\u884c\u6027\u8f83\u9ad8\uff0c\u4f46MPI\u51fd\u6570\u7684\u65f6\u95f4\u635f\u5931\u8fd8\u662f\u8fc7\u591a\u4e86\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#bonus","title":"Bonus","text":"<p>\u5173\u4e8ebonus\u7684Fortran\u90e8\u5206\uff0c\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\u52a0\u4e0a\u4e2a\u4eba\u5b89\u6392\u3002\u81ea\u5df1\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5b8c\u6574\u5b66\u4e60Fortran\u8bed\u8a00\uff0c\u4e5f\u4e0d\u60f3chatgpt\u968f\u4fbf\u66f4\u6539\uff0c\u6545\u518d\u6ca1\u5b8c\u6210\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab4/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b9e\u9a8c\uff0c\u81ea\u5df1\u5b8c\u6574\u7f16\u5199\u4e86MPI\u7684\u7a0b\u5e8f\uff0c\u719f\u6089\u4e86\u5206\u5e03\u5f0f\u7f16\u7a0b\u7684\u7279\u6027\u4ee5\u53cadebug\u7684\u65b9\u6cd5\uff0c\u4e86\u89e3\u4e86\u4e0d\u540cMPI\u7f16\u8bd1\u5668\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u4e0e\u6b64\u540c\u65f6\uff0c\u81ea\u5df1\u5b66\u4e60\u4e86intelMPI profile\u4e2d\u6240\u4f7f\u7528\u5230\u7684\u4e00\u4e9b\u5de5\u5177\u4ee5\u53ca\u65b9\u6cd5\uff0c\u4ece\u800c\u66f4\u52a0\u719f\u7ec3\u7684\u7f16\u5199\u4e0e\u6539\u8fdb\u7a0b\u5e8f\u3002\u4e5f\u7ed9\u81ea\u5df1\u5bf9HPC\u6709\u4e86\u66f4\u6df1\u7684\u4e86\u89e3\u3002</p>"},{"location":"ZJU_CS/HPC/homework/lab5/","title":"Lab-5 AI\u76f8\u5173","text":"<ul> <li>Lab-5 AI\u76f8\u5173<ul> <li>Lab Description</li> <li>Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)</li> <li>Lab Design &amp; Test Result<ul> <li>LeNet<ul> <li>Environment</li> <li>Optimizer</li> <li>Learing Rate</li> <li>GPU Occupation</li> <li>Tensorboard</li> </ul> </li> <li>GELU<ul> <li>Python</li> </ul> </li> <li>C++</li> </ul> </li> <li>Bonus<ul> <li>\u591a\u5361\u8bad\u7ec3</li> <li>\u6df7\u5408\u7cbe\u5ea6</li> </ul> </li> <li>Discussion</li> </ul> </li> </ul>"},{"location":"ZJU_CS/HPC/homework/lab5/#lab-description","title":"Lab Description","text":"<ol> <li>\u4f7f\u7528 <code>PyTorch</code> \u5b9e\u73b0\u6700\u57fa\u672c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc LeNet-5\uff0c\u5e76\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u4f7f\u7528 GPU \u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002</li> <li>\u7f16\u5199 <code>GELU</code> \u7b97\u5b50\uff0c\u5e76\u5728 LeNet-5 \u4e2d\u4f7f\u7528\u8be5\u7b97\u5b50\uff0c\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002</li> <li>\u4f60\u9700\u8981\u63d0\u4ea4\uff1a</li> <li>\u5168\u90e8\u4ee3\u7801</li> <li>\u5b9e\u9a8c\u62a5\u544a\uff0c\u5176\u4e2d\u9700\u8981\u5305\u542b\uff1a<ol> <li>\u7b80\u8981\u5b9e\u9a8c\u8fc7\u7a0b</li> <li>\u8d34\u4e0a\u8bad\u7ec3\u8fc7\u7a0b\u7684 GPU \u5360\u7528\u7387\u622a\u56fe\uff08\u4f7f\u7528 <code>nvidia-smi</code> \u67e5\u770b\uff09</li> <li>Tensorboard \u6a21\u578b\u7684\u635f\u5931\u66f2\u7ebf\u3001LeNet-5 \u7684\u51c6\u786e\u7387\u66f2\u7ebf\u7b49\u622a\u56fe</li> <li>\u5bf9\u4e8e LeNet-5\uff0c\u4f60\u9700\u8981\u5199\u660e\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8bc6\u522b\u6b63\u786e\u7387</li> <li>\u5bf9\u4e8e Bonus\uff0c\u4f60\u9700\u8981\u5199\u660e\u8bad\u7ec3\u65f6\u95f4\u3001\u52a0\u901f\u7b56\u7565\u3001\u52a0\u901f\u6548\u679c</li> </ol> </li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab5/#introduction-knowledge","title":"Introduction Knowledge(\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b)","text":"<ol> <li>GELU\u4ecb\u7ecd</li> <li>\u795e\u7ecf\u7f51\u7edc\u57fa\u7840</li> <li>3b1b\u7684\u89c6\u9891\u5f88\u6709\u542f\u53d1\u610f\u4e49\uff01</li> </ol>"},{"location":"ZJU_CS/HPC/homework/lab5/#lab-design-test-result","title":"Lab Design &amp; Test Result","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#lenet","title":"LeNet","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#environment","title":"Environment","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u6211\u9009\u62e9\u4f7f\u7528conda\u81ea\u5df1\u7ba1\u7406\u73af\u5883\u3002\u4f7f\u7528salloc\u7684\u65b9\u6cd5\u57282080Ti\u4e0a\u5b8c\u6210\u5b9e\u9a8c\u3002</p> <pre><code>conda create -n mytorch python=3.10\nconda activate mytorch\nconda install pytorch torchvision tensorboard -c pytorch -c nvidia\n# conda deactivate\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab5/#optimizer","title":"Optimizer","text":"<p>Adam \u4f18\u5316\u5668\u4f1a\u6bd4SGD\u6548\u7387\u9ad8\u5f88\u591a\uff0c\u51c6\u786e\u7387\u4e5f\u4f1a\u9ad8\u5f88\u591a</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#learing-rate","title":"Learing Rate","text":"<p>\u901a\u8fc7\u5b9e\u9a8c\u8bb0\u5f55\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5982\u679c\u5b66\u4e60\u7387\u4e3a0.002\u65f6\u53cd\u800c\u6d4b\u8bd5\u7ed3\u679c\u4e0d\u7406\u60f3\u3002\u6700\u540e\u9009\u62e90.001</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#gpu-occupation","title":"GPU Occupation","text":"<p>\u5927\u7ea6\u9700\u898130s\u5de6\u53f3GPU\u5360\u7528\u8fbe\u5230\u5cf0\u503c\uff0c\u5927\u7ea6\u7ef4\u6301\u57281098Mib\u3002</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#tensorboard","title":"Tensorboard","text":"<p>\u4f7f\u7528<code>ssh -L 16006:127.0.0.1:6006 dzz@clusters.zju.edu.cn -p 80</code>\uff0c\u4f46\u662f\u5728H248\u4e0a\u4f7f\u7528tensorboard\uff0c\u7136\u540e\u518d\u5728\u672c\u5730\u8bbf\u95ee http://127.0.0.1:16006/\uff0c\u65e2\u53ef\u4ee5\u770b\u5230\u9875\u9762\u3002</p> <p></p> <p></p> <pre><code>[Epoch 1, Batch 200] loss: 0.681\n[Epoch 1, Batch 400] loss: 0.171\n[Epoch 1, Batch 600] loss: 0.117\n[Epoch 1, Batch 800] loss: 0.092\n[Epoch 2, Batch 200] loss: 0.076\n[Epoch 2, Batch 400] loss: 0.063\n[Epoch 2, Batch 600] loss: 0.060\n[Epoch 2, Batch 800] loss: 0.058\n[Epoch 3, Batch 200] loss: 0.052\n[Epoch 3, Batch 400] loss: 0.050\n[Epoch 3, Batch 600] loss: 0.048\n[Epoch 3, Batch 800] loss: 0.045\n[Epoch 4, Batch 200] loss: 0.035\n[Epoch 4, Batch 400] loss: 0.039\n[Epoch 4, Batch 600] loss: 0.037\n[Epoch 4, Batch 800] loss: 0.037\n[Epoch 5, Batch 200] loss: 0.028\n[Epoch 5, Batch 400] loss: 0.032\n[Epoch 5, Batch 600] loss: 0.030\n[Epoch 5, Batch 800] loss: 0.029\n[Epoch 6, Batch 200] loss: 0.021\n[Epoch 6, Batch 400] loss: 0.026\n[Epoch 6, Batch 600] loss: 0.033\n[Epoch 6, Batch 800] loss: 0.029\n[Epoch 7, Batch 200] loss: 0.018\n[Epoch 7, Batch 400] loss: 0.020\n[Epoch 7, Batch 600] loss: 0.022\n[Epoch 7, Batch 800] loss: 0.022\n[Epoch 8, Batch 200] loss: 0.019\n[Epoch 8, Batch 400] loss: 0.018\n[Epoch 8, Batch 600] loss: 0.019\n[Epoch 8, Batch 800] loss: 0.018\n[Epoch 9, Batch 200] loss: 0.017\n[Epoch 9, Batch 400] loss: 0.014\n[Epoch 9, Batch 600] loss: 0.017\n[Epoch 9, Batch 800] loss: 0.015\n[Epoch 10, Batch 200] loss: 0.011\n[Epoch 10, Batch 400] loss: 0.016\n[Epoch 10, Batch 600] loss: 0.017\n[Epoch 10, Batch 800] loss: 0.019\nAccuracy on the test set: 99.02%\n</code></pre>"},{"location":"ZJU_CS/HPC/homework/lab5/#gelu","title":"GELU","text":""},{"location":"ZJU_CS/HPC/homework/lab5/#python","title":"Python","text":"<pre><code>import torch\nimport math\nimport torch.nn.functional as F\nfrom torch.autograd import Function\n\n\nclass MyGELUFunction(Function):\n    @staticmethod\n    def forward(ctx, input):\n        output = input * 0.5 * (1 + torch.erf(input / math.sqrt(2)))\n        ctx.save_for_backward(input,output)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, output = ctx.saved_tensors\n        grad_input = grad_output * (0.5 * (1 + torch.erf(input / math.sqrt(2))) + input * torch.exp(-(input)**2 / 2) / math.sqrt(2) / math.sqrt(math.pi))\n        return grad_input\n</code></pre> <p>\uff08\u63a8\u5bfc\u8fc7\u7a0b\u53ef\u4ee5\u89c1 Introduction Knowledge\uff09</p> <p>\u5b9e\u9a8c\u7ed3\u679c\uff1a</p> <p></p> <p>\u7531\u4e8e\u6d6e\u70b9\u7cbe\u5ea6\u7684\u95ee\u9898\uff0c\u8be5\u8bef\u5dee\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8bb0\u4e86\u3002\uff08\u5df2\u6253\u5370grad\u5f20\u91cf\u6bd4\u8f83\u8fc7\uff09</p>"},{"location":"ZJU_CS/HPC/homework/lab5/#c","title":"C++","text":"<p>\u540c\u6837\u7684\uff0c\u6211\u4eec\u9605\u8bfb\u5b98\u7f51\u8d44\u6599\uff0c\u901a\u8fc7\u6b63\u5e38\u7684\u6539\u5199c++\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u8be5\u6a21\u5757\u3002\u6ce8\uff1a\u6b64\u5904\u6211\u4f7f\u7528\u7684\u662fJIT\u52a8\u6001\u7f16\u8bd1\u3002</p> <p>\u5176\u4e2dgelu.cpp\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;torch/torch.h&gt;\ntorch::Tensor gelu_fwd(torch::Tensor input){\n    return input * torch::sigmoid(1.702*input);\n}\n\ntorch::Tensor gelu_bwd(torch::Tensor grad_out, torch::Tensor input){\n    auto tmp = torch::sigmoid(1.702*input);\n    return grad_out * (tmp+1.702*input*tmp*(1.0-tmp));\n}\n\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m){\n    m.def(\"forward\", &amp;gelu_fwd, \"GELU forward\"); \n    m.def(\"backward\", &amp;gelu_bwd, \"GELU backward\");\n}\n</code></pre> <p></p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#bonus","title":"Bonus","text":"<p>\u901a\u8fc7\u5728\u57fa\u51c6\u4ee3\u7801\u4e0a\u7f16\u5199\uff0c\u5b9e\u9a8c\u57fa\u672c\u7ed3\u679c\u5982\u4e0b\uff08loss\u9ad8\u7684\u5413\u4eba\uff09</p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#_1","title":"\u591a\u5361\u8bad\u7ec3","text":"<p>\u5f53\u6211\u4f7f\u7528lightning\u91cd\u6784\u591a\u5361\u8bad\u7ec3\u6a21\u578b\u540e\uff0c\u7531\u4e8e\u672a\u77e5\u539f\u56e0\uff08\uff1f\u53ef\u80fd\u662f0\u663e\u5361\u672a\u542f\u7528)\u5bfc\u81f4\u8bad\u7ec3\u65f6\u95f4\u660e\u663e\u53d8\u6162\u4e86</p> <p></p> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#_2","title":"\u6df7\u5408\u7cbe\u5ea6","text":"<p>\u6839\u636e\u7f16\u8bd1\u5668\u7684\u63d0\u793a\uff0c\u6211\u4eec\u66f4\u6539\u4ee3\u7801\uff1a</p> <pre><code>if __name__ == '__main__':\n    torch.set_float32_matmul_precision('medium')\n    main()\n</code></pre> <p></p>"},{"location":"ZJU_CS/HPC/homework/lab5/#discussion","title":"Discussion","text":"<p>\u901a\u8fc7\u672c\u6b21\u5b66\u4e60\uff0c\u81ea\u5df1\u4e3a\u4e86\u80fd\u6709\u66f4\u592f\u5b9e\u7684\u57fa\u7840\uff0c\u5b66\u4e60\u4e86\u7ecf\u5178\u7684CS50\u8bfe\u7a0b\uff0c\u4e24\u5c4a\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u672c\u6846\u67b6\u3002\u901a\u8fc7\u5bf9PyTorch\u5b98\u7f51\u8d44\u6599\u7684\u9605\u8bfb\uff0c\u4ee5\u53ca\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5bf9PyTorch-Lightning\u7684\u4f7f\u7528\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4e3a\u81ea\u5df1\u672a\u6765\u7684\u5b66\u4e60\u6709\u542f\u53d1\u6027\u610f\u4e49\u5e76\u6253\u4e0b\u826f\u597d\u57fa\u7840\u3002</p> <p>\u5176\u4e2d\u5bf9GELU\u7b97\u5b50\u7684\u7f16\u5199\uff0c\u4e5f\u4e3a\u6211\u6253\u5f00\u4e86MLSys\u7684\u5927\u95e8\uff0c\u4e86\u89e3\u4e86\u5982\u4f55\u5c06c\u52a0\u8f7d\u5982python\u4e2d\uff08\u4e3a\u4e86\u63d0\u5347\u6548\u7387\uff09\uff0c\u5e0c\u671b\u81ea\u5df1\u672a\u6765\u80fd\u5728\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u9886\u57df\u6709\u6240\u7814\u7a76\u3002</p> <p>ps\uff1abonus\u90e8\u5206\u7531\u4e8e\u4e2a\u4eba\u65f6\u95f4\u539f\u56e0\uff08\u6700\u8fd1\u8fd9\u6bb5\u65f6\u95f4\u5bb6\u4e2d\u6709\u4e9b\u4e8b\u60c5\uff09\uff0c\u6709\u90e8\u5206\u4f18\u5316\u65b9\u6cd5\u672a\u5b8c\u6574\u4f7f\u7528\uff0c\u8fd8\u8bf7\u52a9\u6559\u8c05\u89e3\u3002</p>"}]}